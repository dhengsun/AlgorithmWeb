{"version":3,"file":"js/34.50431c9a.js","mappings":"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","sources":["webpack://vue-django-frontend/./src/views/SolutionsView.vue","webpack://vue-django-frontend/./src/views/SolutionsView.vue?2374","webpack://vue-django-frontend/./src/constants/tags.js","webpack://vue-django-frontend/./src/api/question.js","webpack://vue-django-frontend/./src/api/solution.js"],"sourcesContent":["<template>\n  <div class=\"solutions-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <div class=\"solutions-header\">\n        <h1>题解广场</h1>\n        <p class=\"solutions-subtitle\">探索高质量解题思路，提升编程能力</p>\n        \n        <!-- 搜索和筛选区域 -->\n        <div class=\"filter-container\">\n          <div class=\"search-box\">\n            <el-input\n              v-model=\"searchQuery\"\n              placeholder=\"输入题目ID进行搜索\"\n              prefix-icon=\"el-icon-search\"\n              clearable\n              @keyup.enter=\"handleSearch\"\n            >\n              <template #append>\n                <el-button @click=\"handleSearch\">搜索</el-button>\n              </template>\n            </el-input>\n          </div>\n          \n          <div class=\"language-filter\">\n            <el-select\n              v-model=\"selectedLanguage\"\n              placeholder=\"编程语言筛选\"\n              clearable\n              @change=\"handleLanguageChange\"\n            >\n              <el-option\n                v-for=\"lang in languageOptions\"\n                :key=\"lang.value\"\n                :label=\"lang.label\"\n                :value=\"lang.value\"\n              >\n                <span class=\"language-icon\" :class=\"'lang-' + lang.value.toLowerCase()\"></span>\n                {{ lang.label }}\n              </el-option>\n            </el-select>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 内容展示区 -->\n      <div class=\"content-area\">\n        <div v-if=\"loading\" class=\"loading-container\">\n          <el-skeleton :rows=\"10\" animated />\n        </div>\n        \n        <div v-else-if=\"solutions.length === 0\" class=\"empty-state\">\n          <div class=\"empty-icon\">\n            <i class=\"el-icon-document\"></i>\n          </div>\n          <h3>暂无题解</h3>\n          <p>{{ getEmptyStateMessage() }}</p>\n          <el-button type=\"primary\" @click=\"resetFilters\">清除筛选条件</el-button>\n        </div>\n        \n        <transition-group \n          name=\"solution-list\" \n          tag=\"div\" \n          class=\"solutions-grid\"\n          v-else\n        >\n          <div \n            v-for=\"solution in solutions\" \n            :key=\"solution.id\" \n            class=\"solution-card\"\n            @click=\"viewSolutionDetail(solution.id)\"\n          >\n            <div class=\"solution-card-header\">\n              <div class=\"header-left-section\">\n                <div class=\"problem-id-highlight\">\n                  #{{ solution.question_id }}\n                </div>\n                <div v-if=\"questionDetails[solution.question_id]?.oj_platform\" class=\"platform-tag\">\n                  <el-tag \n                    :type=\"getPlatformTagType(questionDetails[solution.question_id]?.oj_platform)\" \n                    size=\"small\"\n                  >\n                    {{ getPlatformName(questionDetails[solution.question_id]?.oj_platform) }}\n                  </el-tag>\n                </div>\n              </div>\n              <div class=\"language-tag\" :class=\"'lang-bg-' + getNormalizedLanguage(solution.language)\">\n                {{ getDisplayLanguage(solution.language) }}\n              </div>\n            </div>\n            \n            <div class=\"solution-card-content\">\n              <h3 class=\"solution-title\" @click.stop=\"goToProblem(solution.question_id)\">\n                <span v-if=\"questionDetails[solution.question_id]\">\n                  {{ questionDetails[solution.question_id].name || `题目 #${solution.question_id}` }}\n                </span>\n                <span v-else>\n                  <span v-if=\"detailsLoading[solution.question_id]\">加载中...</span>\n                  <span v-else>题目 #{{ solution.question_id }}</span>\n                </span>\n                <i class=\"el-icon-link\"></i>\n              </h3>\n              \n              <!-- 算法标签区域 -->\n              <div class=\"tags-container\" v-if=\"questionDetails[solution.question_id]?.algorithm_tags?.length\">\n                <div class=\"tag-container\">\n                  <el-tag\n                    v-for=\"tag in getFilteredTags(\n                      questionDetails[solution.question_id].algorithm_tags,\n                      questionDetails[solution.question_id].oj_platform\n                    )\"\n                    :key=\"tag\"\n                    :type=\"getTagType(tag, questionDetails[solution.question_id].oj_platform)\"\n                    size=\"small\"\n                    class=\"tag-item\"\n                  >\n                    {{ getTagName(tag) }}\n                  </el-tag>\n                </div>\n              </div>\n              \n              <div class=\"solution-preview\">\n                {{ getSolutionPreview(solution.content_text) }}\n              </div>\n            </div>\n            \n            <div class=\"solution-card-footer\">\n              <div class=\"solution-meta\">\n                <span class=\"solution-date\">\n                  <i class=\"el-icon-time\"></i>\n                  {{ formatDate(solution.created_at) }}\n                </span>\n              </div>\n              <el-button size=\"small\" type=\"text\" @click.stop=\"viewSolutionDetail(solution.id)\">查看全文</el-button>\n            </div>\n          </div>\n        </transition-group>\n        \n        <!-- 分页控件 -->\n        <div class=\"pagination-container\" v-if=\"total > 0\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next, jumper\"\n            :total=\"total\"\n            :page-size=\"pageSize\"\n            v-model:current-page=\"currentPage\"\n            @current-change=\"handlePageChange\"\n          ></el-pagination>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { getSolutionList } from '@/api/solution'\nimport { getQuestionDetail } from '@/api/question'\nimport { LeetcodeTags } from '@/constants/tags'\nexport default {\n  name: 'SolutionsView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      solutions: [],\n      loading: true,\n      total: 0,\n      currentPage: 1,\n      pageSize: 12, // 每页显示的题解数量\n      searchQuery: '',\n      selectedLanguage: '',\n      questionDetails: {}, // 存储题目详细信息\n      detailsLoading: {}, // 跟踪各题目详情的加载状态\n      \n      // 预设语言选项\n      languageOptions: [\n        { value: 'Python', label: 'Python' },\n        { value: 'Java', label: 'Java' },\n        { value: 'C++', label: 'C++' },\n        { value: 'JavaScript', label: 'JavaScript' },\n        { value: 'Go', label: 'Go' },\n        { value: 'Rust', label: 'Rust' },\n        { value: 'C#', label: 'C#' },\n        { value: 'Ruby', label: 'Ruby' },\n        { value: 'Swift', label: 'Swift' },\n        { value: 'Kotlin', label: 'Kotlin' }\n      ],\n      \n      // 语言名称到API参数的映射\n      languageParamMap: {\n        'c++': 'cpp',\n        'c#': 'csharp'\n      },\n      \n      // 语言API参数到显示名称的映射\n      languageDisplayMap: {\n        'cpp': 'C++',\n        'csharp': 'C#'\n      },\n      \n      // 平台映射\n      platformMap: {\n        luogu: '洛谷',\n        leetcode: 'LeetCode'\n      },\n      \n      // LeetCode标签列表\n      leetcodeTags: LeetcodeTags\n    }\n  },\n  created() {\n    this.fetchSolutions()\n  },\n  methods: {\n    // 获取题解列表\n    async fetchSolutions() {\n      this.loading = true\n      \n      try {\n        // 构建查询参数\n        const params = {\n          page: this.currentPage\n        }\n        \n        // 仅当有值时才添加可选参数\n        if (this.searchQuery.trim()) {\n          params.question_id = this.searchQuery.trim()\n        }\n        \n        // 处理语言参数，转换为小写并应用映射\n        if (this.selectedLanguage) {\n          const languageParam = this.selectedLanguage.toLowerCase()\n          // 检查是否需要特殊映射（如 c++ -> cpp）\n          params.language = this.languageParamMap[languageParam] || languageParam\n        }\n        \n        // 调用API\n        const response = await getSolutionList(params)\n        \n        // 检查响应格式\n        if (response.data) {\n          // 直接使用response.data作为数据源，适应不同的API响应格式\n          if (Array.isArray(response.data)) {\n            // 如果是数组，表示直接返回了项目列表\n            this.solutions = response.data\n            this.total = response.data.length\n          } else if (response.data.code === 200 && response.data.data) {\n            // 如果是带有code的标准格式\n            if (Array.isArray(response.data.data)) {\n              this.solutions = response.data.data\n              this.total = response.data.data.length\n            } else if (response.data.data.items) {\n              this.solutions = response.data.data.items || []\n              this.total = response.data.data.total || this.solutions.length\n            } else {\n              this.solutions = []\n              this.total = 0\n            }\n          } else {\n            // 其他情况，尝试解析各种可能的格式\n            this.solutions = response.data.items || response.data.results || response.data.data || []\n            this.total = response.data.total || response.data.count || this.solutions.length || 0\n          }\n        } else {\n          this.solutions = []\n          this.total = 0\n        }\n        \n        // 获取题目详情\n        this.fetchQuestionDetails()\n      } catch (error) {\n        this.$message.error('获取题解列表失败: ' + (error.message || '未知错误'))\n        this.solutions = []\n        this.total = 0\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 获取题目详情\n    async fetchQuestionDetails() {\n      // 获取唯一题目ID列表\n      const questionIds = [...new Set(this.solutions.map(solution => solution.question_id))]\n      \n      // 为每个题目ID获取详情\n      for (const id of questionIds) {\n        // 避免重复请求\n        if (this.questionDetails[id] || this.detailsLoading[id]) {\n          continue\n        }\n        \n        // 标记为加载中\n        this.detailsLoading[id] = true\n        \n        try {\n          const response = await getQuestionDetail(id)\n          \n          if (response.data && response.data.code === 200) {\n            // 如果返回标准格式\n            this.questionDetails[id] = response.data.data\n          } else if (response.data) {\n            // 处理其他可能的响应格式\n            this.questionDetails[id] = response.data\n          }\n        } catch (error) {\n          // 在开发模式下使用模拟数据\n          if (process.env.NODE_ENV === 'development') {\n            this.questionDetails[id] = {\n              id: id,\n              name: `模拟题目 #${id}`,\n              oj_platform: ['leetcode', 'luogu'][Math.floor(Math.random() * 2)],\n              algorithm_tags: ['数组', '动态规划', 'Algorithm_贪心', 'Source_CSP']\n            }\n          }\n        } finally {\n          this.detailsLoading[id] = false\n        }\n      }\n    },\n    \n    // 获取规范化后的语言名称（用于CSS类名）\n    getNormalizedLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 特殊处理，比如将 'cpp' 转为 'c++'\n      const reverseMap = {\n        'cpp': 'c++',\n        'csharp': 'c#'\n      };\n      \n      return reverseMap[lowercased] || lowercased;\n    },\n    \n    // 获取显示用的语言名称\n    getDisplayLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 从特殊映射中获取显示名称\n      if (this.languageDisplayMap[lowercased]) {\n        return this.languageDisplayMap[lowercased];\n      }\n      \n      // 首字母大写\n      return language.charAt(0).toUpperCase() + language.slice(1);\n    },\n    \n    // 获取题解预览文本\n    getSolutionPreview(content) {\n      if (!content) return '无预览内容'\n      \n      // 移除Markdown标记，限制长度\n      const plainText = content\n        .replace(/#{1,6}\\s/g, '')\n        .replace(/\\*\\*|\\*|~~|`|>/g, '')\n      \n      return plainText.length > 100 \n        ? plainText.substring(0, 100) + '...' \n        : plainText\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '未知时间'\n      \n      const date = new Date(dateString)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n    },\n    \n    // 处理页面变化\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchSolutions()\n      // 滚动到页面顶部\n      window.scrollTo(0, 0)\n    },\n    \n    // 处理搜索\n    handleSearch() {\n      this.currentPage = 1 // 重置到第一页\n      this.fetchSolutions()\n    },\n    \n    // 处理语言筛选变化\n    handleLanguageChange() {\n      this.currentPage = 1 // 重置到第一页\n      this.fetchSolutions()\n    },\n    \n    // 重置所有筛选条件\n    resetFilters() {\n      this.searchQuery = ''\n      this.selectedLanguage = ''\n      this.currentPage = 1\n      this.fetchSolutions()\n    },\n    \n    // 获取空状态消息\n    getEmptyStateMessage() {\n      if (this.searchQuery && this.selectedLanguage) {\n        return `没有找到关于题目 #${this.searchQuery} 的 ${this.selectedLanguage} 语言题解`\n      } else if (this.searchQuery) {\n        return `没有找到关于题目 #${this.searchQuery} 的题解`\n      } else if (this.selectedLanguage) {\n        return `没有找到使用 ${this.selectedLanguage} 语言的题解`\n      }\n      return '暂时没有任何题解，成为第一个分享解题思路的人吧！'\n    },\n    \n    // 查看题解详情\n    viewSolutionDetail(solutionId) {\n      this.$router.push(`/${solutionId}/solutions`)\n    },\n    \n    // 跳转到题目页面\n    goToProblem(questionId) {\n      this.$router.push(`/${questionId}/problems`)\n    },\n    \n    // 获取平台名称\n    getPlatformName(platform) {\n      return this.platformMap[platform] || platform\n    },\n    \n    // 平台标签样式\n    getPlatformTagType(platform) {\n      return {\n        luogu: 'success',\n        leetcode: 'warning'\n      }[platform] || 'info'\n    },\n    \n    // 标签分类过滤\n    getFilteredTags(tags, platform) {\n      if (!tags) return []\n      \n      // 默认只显示少量标签，避免卡片过大\n      const maxTagsToShow = 3\n      \n      // LeetCode题目只显示算法标签\n      if (platform === 'leetcode') {\n        return tags.filter(tag => this.leetcodeTags.includes(tag)).slice(0, maxTagsToShow)\n      }\n      \n      // 洛谷题目优先显示算法标签\n      const algorithmTags = tags.filter(tag => tag.startsWith('Algorithm_'))\n      if (algorithmTags.length > 0) {\n        return algorithmTags.slice(0, maxTagsToShow)\n      }\n      \n      return tags.slice(0, maxTagsToShow)\n    },\n    \n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.leetcodeTags.includes(tag)) return tag\n      \n      // 洛谷标签去掉前缀\n      return tag.split('_').slice(1).join('_') || tag\n    },\n    \n    // 标签样式分类\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.solutions-view {\n  min-height: 100vh;\n  background-color: #f8f9fc;\n}\n\n.page-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px;\n}\n\n.solutions-header {\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.solutions-header h1 {\n  font-size: 2.5rem;\n  color: #2c3e50;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n}\n\n.solutions-subtitle {\n  color: #606f7b;\n  font-size: 1.1rem;\n  margin-bottom: 30px;\n}\n\n.filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 30px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.search-box {\n  flex: 1;\n  min-width: 280px;\n}\n\n.language-filter {\n  width: 200px;\n}\n\n.content-area {\n  position: relative;\n  min-height: 400px;\n}\n\n.loading-container {\n  padding: 20px;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 60px 20px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 60px;\n  color: #dce0e6;\n  margin-bottom: 20px;\n}\n\n.empty-state h3 {\n  font-size: 20px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n\n.empty-state p {\n  color: #909399;\n  margin-bottom: 20px;\n  max-width: 500px;\n}\n\n.solutions-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-bottom: 40px;\n}\n\n.solution-card {\n  background-color: #fff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.solution-card:hover {\n  box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.09);\n  transform: translateY(-3px);\n}\n\n.solution-card-header {\n  padding: 12px 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n/* Header layout styles */\n.header-left-section {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.problem-id-highlight {\n  background-color: #4caf50;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-weight: bold;\n  font-size: 0.9rem;\n  min-width: 40px;\n  text-align: center;\n}\n\n.platform-tag {\n  font-weight: 600;\n  color: #606266;\n  font-size: 0.9rem;\n}\n\n.language-tag {\n  padding: 2px 8px;\n  border-radius: 4px;\n  color: white;\n  font-size: 0.8rem;\n  font-weight: 500;\n}\n\n/* 不同语言的背景色 */\n.lang-bg-python {\n  background-color: #3776ab;\n}\n\n.lang-bg-java {\n  background-color: #f89820;\n}\n\n.lang-bg-c\\+\\+ {\n  background-color: #00599c;\n}\n\n.lang-bg-javascript {\n  background-color: #f7df1e;\n  color: #000;\n}\n\n.lang-bg-go {\n  background-color: #00acd7;\n}\n\n.lang-bg-rust {\n  background-color: #b7410e;\n}\n\n.lang-bg-c\\# {\n  background-color: #68217a;\n}\n\n.lang-bg-ruby {\n  background-color: #cc342d;\n}\n\n.lang-bg-swift {\n  background-color: #f05138;\n}\n\n.lang-bg-kotlin {\n  background-color: #7f52ff;\n}\n\n/* 其他语言使用默认颜色 */\n[class*=\"lang-bg-\"]:not(\n  .lang-bg-python,\n  .lang-bg-java,\n  .lang-bg-c\\+\\+,\n  .lang-bg-javascript,\n  .lang-bg-go,\n  .lang-bg-rust,\n  .lang-bg-c\\#,\n  .lang-bg-ruby,\n  .lang-bg-swift,\n  .lang-bg-kotlin\n) {\n  background-color: #909399;\n}\n\n.solution-card-content {\n  padding: 16px;\n  flex-grow: 1;\n}\n\n.solution-title {\n  font-size: 1.1rem;\n  margin: 0 0 12px;\n  color: #303133;\n  display: flex;\n  align-items: center;\n  line-height: 1.4;\n}\n\n.solution-title i {\n  margin-left: 6px;\n  font-size: 14px;\n  opacity: 0.6;\n}\n\n.solution-title:hover {\n  color: #409eff;\n}\n\n.solution-title:hover i {\n  opacity: 1;\n}\n\n/* 算法标签样式 */\n.tags-container {\n  margin-bottom: 12px;\n}\n\n.tag-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n}\n\n.tag-item {\n  transition: all 0.3s;\n  font-size: 0.7rem;\n}\n\n.solution-preview {\n  color: #606266;\n  font-size: 0.95rem;\n  line-height: 1.6;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.solution-card-footer {\n  padding: 12px 16px;\n  border-top: 1px solid #f0f0f0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.solution-meta {\n  color: #909399;\n  font-size: 0.85rem;\n}\n\n.solution-date i {\n  margin-right: 4px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n/* 语言图标 */\n.language-icon {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  vertical-align: middle;\n}\n\n/* 动画效果 */\n.solution-list-enter-active, .solution-list-move {\n  transition: all 0.5s ease;\n}\n\n.solution-list-enter {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n.solution-list-leave-active {\n  position: absolute;\n  opacity: 0;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .solutions-header h1 {\n    font-size: 2rem;\n  }\n  \n  .filter-container {\n    flex-direction: column;\n  }\n  \n  .search-box, .language-filter {\n    width: 100%;\n  }\n  \n  .solutions-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>","import { render } from \"./SolutionsView.vue?vue&type=template&id=1793fbf8&scoped=true\"\nimport script from \"./SolutionsView.vue?vue&type=script&lang=js\"\nexport * from \"./SolutionsView.vue?vue&type=script&lang=js\"\n\nimport \"./SolutionsView.vue?vue&type=style&index=0&id=1793fbf8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1793fbf8\"]])\n\nexport default __exports__","// LeetCode相关标签\nexport const LeetcodeTags = [\n    \"Shell\",\n    \"二分查找\",\n    \"二叉搜索树\",\n    \"二叉树\",\n    \"交互\",\n    \"位运算\",\n    \"分治\",\n    \"前缀和\",\n    \"单向链表\",\n    \"单调栈\",\n    \"单调队列\",\n    \"双向链表\",\n    \"双指针\",\n    \"双连通分量\",\n    \"后缀数组\",\n    \"哈希函数\",\n    \"哈希表\",\n    \"图\",\n    \"基数排序\",\n    \"堆（优先队列）\",\n    \"字典树\",\n    \"字符串\",\n    \"字符串匹配\",\n    \"归并排序\",\n    \"快速选择\",\n    \"扫描线\",\n    \"拒绝采样\",\n    \"拓扑排序\",\n    \"排序\",\n    \"数论\",\n    \"数学\",\n    \"数据库\",\n    \"数据流\",\n    \"数组\",\n    \"最小生成树\",\n    \"最短路\",\n    \"有序集合\",\n    \"栈\",\n    \"树\",\n    \"树状数组\",\n    \"欧拉回路\",\n    \"概率与统计\",\n    \"模拟\",\n    \"滑动窗口\",\n    \"滚动哈希\",\n    \"深度优先搜索\",\n    \"状态压缩\",\n    \"矩阵\",\n    \"线段树\",\n    \"组合数学\",\n    \"脑筋急转弯\",\n    \"计数\",\n    \"计数排序\",\n    \"设计\",\n    \"贪心\",\n    \"迭代器\",\n    \"递归\",\n    \"链表\",\n    \"队列\",\n    \"随机化\",\n    \"集合\",\n    \"几何\",\n    \"动态规划\",\n    \"博弈\",\n    \"并查集\",\n    \"广度优先搜索\",\n    \"强连通分量\",\n    \"桶排序\",\n    \"水塘抽样\",\n    \"记忆化搜索\",\n    \"回溯\",\n    \"多线程\",\n    \"枚举\"\n]\n\n\n// 洛谷难度等级\nexport const LuoguDifficulties = [\n    '入门', '普及-', '普及/提高-', '普及+/提高',\n    '提高+/省选-', '省选/NOI-', 'NOI/NOI+', 'CTSC'\n]\n\n// LeetCode难度等级\nexport const LeetcodeDifficulties = ['简单', '中等', '困难']\n\n// 处理洛谷API返回的标签数据\nexport const processLuoguTags = (apiResponse) => {\n    const tagsList = [];\n    \n    // 主要处理 Algorithm 类型的标签，因为这些是算法相关标签\n    if (apiResponse.data && apiResponse.data.Algorithm) {\n        apiResponse.data.Algorithm.forEach(tag => {\n            tagsList.push(tag.name);\n        });\n    }\n    \n    return tagsList;\n}\n\n// 洛谷标签将通过API动态获取\nexport let LuoguTags = [];\n\n// 可以提供一个更新标签的方法\nexport const updateLuoguTags = (apiResponse) => {\n    LuoguTags = processLuoguTags(apiResponse);\n}\n","import request from './request'\n\nexport function getQuestionList(data = {}, page = 1) {\n  // 确保即使是空对象也会发送请求体\n  return request({\n    url: '/api/questions/',\n    method: 'post',\n    params: { page }, // 页码作为URL参数\n    data: data, // 其他筛选条件作为请求体\n    headers: {\n      'Content-Type': 'application/json' // 确保设置正确的内容类型\n    }\n  })\n}\n\nexport function getQuestionDetail(id) {\n  return request({\n    url: `/questions/${id}/`,\n    method: 'get'\n  })\n}\n\n\nexport const searchQuestions = (params) => {\n  return request({\n    url: '/api/questions/search/',\n    method: 'get',\n    params\n  })\n}\n\nexport function createQuestion(data) {\n  return request({\n    url: '/api/questions/create/',\n    method: 'post',\n    data\n  })\n}\n\nexport function deleteQuestion(data) {\n  return request({\n    url: '/api/questions/delete/',\n    method: 'post',\n    data\n  })\n}\n\nexport function updateQuestion(id, data) {\n  return request({\n    url: `/questions/${id}/update/`,\n    method: 'put',\n    data\n  })\n}\n\nexport function extractQuestion(data) {\n  return request({\n    url: '/api/questions/extract/',\n    method: 'post',\n    data\n  })\n}\n\nexport function getQuestionCount() {\n  return request({\n    url: '/api/questions/count/',\n    method: 'get'\n  })\n}\n\nexport const getAllTags = () => {\n  return request({\n    url: '/api/tags/',\n    method: 'get'\n  })\n}\n\nexport const getTagDetail = (tag_id) => {\n  return request({\n    url: '/api/tag/',\n    method: 'get',\n    params: { tag_id }\n  })\n}\n\n// 回收站接口\nexport const getQuestionTrashList = (params) => {\n  return request({\n    url: '/api/questions/trash/',\n    method: 'get',\n    params\n  })\n}\n\nexport const searchQuestionTrash = (params) => {\n  return request({\n    url: '/api/questions/trash/search/',\n    method: 'get',\n    params\n  })\n}\n\nexport function restoreQuestion(data) {\n  return request({\n    url: '/api/questions/restore/',\n    method: 'post',\n    data\n  })\n}","import request from './request'\n\nexport function getSolutionList(params) {\n  return request({\n    url: '/api/solutions/',\n    method: 'get',\n    params\n  })\n}\n\nexport function getSolutionTrashList(params) {\n  return request({\n    url:'/api/solutions/trash/',\n    method: 'get',\n    params\n  })\n}\n\nexport function getDraftList(params) {\n  return request({\n    url: '/api/drafts/',\n    method: 'get',\n    params\n  })\n}\n\nexport function getDraftTrashList(params) {\n  return request({\n    url:'/api/drafts/trash/',\n    method: 'get',\n    params\n  })\n}\n\nexport function getSolutionDetail(id) {\n  return request({\n    url: `/solutions/${id}/`,\n    method: 'get'\n  })\n}\n\nexport function getDraftDetail(id) {\n  return request({\n    url: `/drafts/${id}/`,\n    method: 'get'\n  })\n}\n\n\n\nexport function publishSolution(data) {\n  return request({\n    url: '/api/solution/create/',\n    method: 'post',\n    data\n  })\n}\n\nexport function saveDraft(data) {\n  return request({\n    url: '/api/solution/draft/',\n    method: 'post',\n    data\n  })\n}\n\nexport function updateSolution(id, data) {\n  return request({\n    url: `/solutions/${id}/update/`,\n    method: 'put',\n    data\n  })\n}\n\nexport function updateDraft(id, data) {\n  return request({\n    url: `/drafts/${id}/update/`,\n    method: 'put',\n    data\n  })\n}\n\nexport function getSolutionCount() {\n  return request({\n    url: '/api/solutions/count/',\n    method: 'get'\n  })\n}\n\nexport function getDraftCount() {\n  return request({\n    url: '/api/drafts/count/',\n    method: 'get'\n  })\n}\n\nexport function deleteSolution() {\n  return request({\n    url: '/api/solution/delete/',\n    method: 'post'\n  })\n}\n\nexport function restoreSolution() {\n  return request({\n    url: '/api/solution/restore/',\n    method: 'post'\n  })\n}\n\nexport function DraftToSolution() {\n  return request({\n    url:'/api/solution/pub/',\n    method: 'post'\n  })\n}\n"],"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_el_input","modelValue","$data","searchQuery","_cache","$event","placeholder","clearable","onKeyup","_withKeys","$options","handleSearch","append","_withCtx","_component_el_button","onClick","default","_createTextVNode","_","_hoisted_6","_component_el_select","selectedLanguage","onChange","handleLanguageChange","_Fragment","_renderList","languageOptions","lang","_createBlock","_component_el_option","value","label","_normalizeClass","toLowerCase","_toDisplayString","_hoisted_7","loading","_hoisted_8","_component_el_skeleton","rows","animated","solutions","length","_hoisted_9","getEmptyStateMessage","type","resetFilters","_TransitionGroup","name","tag","solution","id","viewSolutionDetail","_hoisted_11","_hoisted_12","_hoisted_13","question_id","questionDetails","oj_platform","_hoisted_14","_component_el_tag","getPlatformTagType","size","getPlatformName","_createCommentVNode","getNormalizedLanguage","language","getDisplayLanguage","_hoisted_15","_withModifiers","goToProblem","_hoisted_17","_hoisted_18","detailsLoading","_hoisted_19","_hoisted_20","_hoisted_16","algorithm_tags","_hoisted_21","_hoisted_22","getFilteredTags","getTagType","getTagName","_hoisted_23","getSolutionPreview","content_text","_hoisted_24","_hoisted_25","_hoisted_26","formatDate","created_at","_hoisted_10","total","_hoisted_27","_component_el_pagination","background","layout","pageSize","currentPage","onCurrentChange","handlePageChange","components","AppHeader","data","languageParamMap","languageDisplayMap","platformMap","luogu","leetcode","leetcodeTags","LeetcodeTags","created","this","fetchSolutions","methods","params","page","trim","languageParam","response","getSolutionList","Array","isArray","code","items","results","count","fetchQuestionDetails","error","$message","message","questionIds","Set","map","getQuestionDetail","process","lowercased","reverseMap","charAt","toUpperCase","slice","content","plainText","replace","substring","dateString","date","Date","getFullYear","String","getMonth","padStart","getDate","window","scrollTo","solutionId","$router","push","questionId","platform","tags","maxTagsToShow","filter","includes","algorithmTags","startsWith","split","join","prefix","__exports__","render","LuoguDifficulties","LeetcodeDifficulties","getQuestionList","request","url","method","headers","searchQuestions","createQuestion","deleteQuestion","updateQuestion","extractQuestion","getAllTags","getQuestionTrashList","searchQuestionTrash","restoreQuestion","getSolutionTrashList","getDraftList","getDraftTrashList","getSolutionDetail","getDraftDetail","publishSolution","saveDraft","updateSolution","updateDraft"],"sourceRoot":""}