{"version":3,"file":"js/127.00c2936b.js","mappings":"6NACOA,MAAM,e,GAEJA,MAAM,oB,GAEJA,MAAM,iB,GAMAA,MAAM,a,GAgENA,MAAM,kB,GA3EvBC,IAAA,EAsFoDD,MAAM,gB,GA8CzCA,MAAM,mB,GAkBZA,MAAM,iB,GACJA,MAAM,kB,GAEJA,MAAM,gB,GAzJrBC,IAAA,EA0JkCD,MAAM,iB,GA1JxCC,IAAA,EA+JeD,MAAM,gB,GAYRA,MAAM,mB,EA3KnB,c,GAAAC,IAAA,EA6KoCD,MAAM,iB,wTA5KxCE,EAAAA,EAAAA,IAmLM,MAnLNC,EAmLM,EAlLJC,EAAAA,EAAAA,IAAaC,IACbC,EAAAA,EAAAA,IAgLM,MAhLNC,EAgLM,EA9KJD,EAAAA,EAAAA,IA8IM,MA9INE,EA8IM,gBA7IJF,EAAAA,EAAAA,IAAa,UAAT,QAAI,KAERF,EAAAA,EAAAA,IA0IUK,EAAA,CA1IAC,MAAOC,EAAAC,KAAM,cAAY,QAAQZ,MAAM,gB,CARzDa,SAAAC,EAAAA,EAAAA,KAUU,IAWe,EAXfV,EAAAA,EAAAA,IAWeW,EAAA,CAXDC,MAAM,SAAO,CAVrCH,SAAAC,EAAAA,EAAAA,KAWY,IASM,EATNR,EAAAA,EAAAA,IASM,MATNW,EASM,EARJb,EAAAA,EAAAA,IAAqDc,EAAA,CAZnEC,WAYiCR,EAAAC,KAAKQ,IAZtC,sBAAAC,EAAA,KAAAA,EAAA,GAAAC,GAYiCX,EAAAC,KAAKQ,IAAGE,GAAEC,YAAY,W,wBACzCnB,EAAAA,EAAAA,IAMYoB,EAAA,CALVC,KAAK,UACJC,QAAOC,EAAAC,kBACPC,QAASlB,EAAAmB,U,CAhB1BjB,SAAAC,EAAAA,EAAAA,KAiBe,IAEDO,EAAA,KAAAA,EAAA,KAnBdU,EAAAA,EAAAA,IAiBe,gBAjBfC,EAAA,G,8BAAAA,EAAA,KAwBU5B,EAAAA,EAAAA,IASeW,EAAA,CATDC,MAAM,MAAI,CAxBlCH,SAAAC,EAAAA,EAAAA,KAyBY,IAOY,EAPZV,EAAAA,EAAAA,IAOY6B,EAAA,CAhCxBd,WA0BuBR,EAAAC,KAAKsB,YA1B5B,sBAAAb,EAAA,KAAAA,EAAA,GAAAC,GA0BuBX,EAAAC,KAAKsB,YAAWZ,GACzBC,YAAY,OACXY,SAAQR,EAAAS,sB,CA5BvBvB,SAAAC,EAAAA,EAAAA,KA8Bc,IAAsC,EAAtCV,EAAAA,EAAAA,IAAsCiC,EAAA,CAA3BrB,MAAM,KAAKsB,MAAM,WAC5BlC,EAAAA,EAAAA,IAA+CiC,EAAA,CAApCrB,MAAM,WAAWsB,MAAM,gBA/BhDN,EAAA,G,gCAAAA,EAAA,KAmCU5B,EAAAA,EAAAA,IAEeW,EAAA,CAFDC,MAAM,QAAM,CAnCpCH,SAAAC,EAAAA,EAAAA,KAoCY,IAA2C,EAA3CV,EAAAA,EAAAA,IAA2Cc,EAAA,CApCvDC,WAoC+BR,EAAAC,KAAK2B,gBApCpC,sBAAAlB,EAAA,KAAAA,EAAA,GAAAC,GAoC+BX,EAAAC,KAAK2B,gBAAejB,I,0BApCnDU,EAAA,KAuCU5B,EAAAA,EAAAA,IAEeW,EAAA,CAFDC,MAAM,QAAM,CAvCpCH,SAAAC,EAAAA,EAAAA,KAwCY,IAAgC,EAAhCV,EAAAA,EAAAA,IAAgCc,EAAA,CAxC5CC,WAwC+BR,EAAAC,KAAK4B,KAxCpC,sBAAAnB,EAAA,KAAAA,EAAA,GAAAC,GAwC+BX,EAAAC,KAAK4B,KAAIlB,I,0BAxCxCU,EAAA,KA2CU5B,EAAAA,EAAAA,IA4BeW,EAAA,CA5BDC,MAAM,MAAI,CA3ClCH,SAAAC,EAAAA,EAAAA,KA4CY,IA0BY,EA1BZV,EAAAA,EAAAA,IA0BY6B,EAAA,CAtExBd,WA4CgCR,EAAAC,KAAK6B,WA5CrC,sBAAApB,EAAA,KAAAA,EAAA,GAAAC,GA4CgCX,EAAAC,KAAK6B,WAAUnB,GAAEC,YAAY,OAAOmB,MAAA,gB,CA5CpE7B,SAAAC,EAAAA,EAAAA,KA8Cc,IAIW,CAJ0B,aAArBH,EAAAC,KAAKsB,cAAW,WAAhChC,EAAAA,EAAAA,IAIWyC,EAAAA,GAAA,CAlDzB1C,IAAA,KA+CgBG,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,QAC5BlC,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,QAC5BlC,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,Q,KAIY,UAArB3B,EAAAC,KAAKsB,cAAW,WAArChC,EAAAA,EAAAA,IASWyC,EAAAA,GAAA,CA9DzB1C,IAAA,KAsDgBG,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,QAC5BlC,EAAAA,EAAAA,IAA+CiC,EAAA,CAApCrB,MAAM,MAAMsB,MAAM,SAC7BlC,EAAAA,EAAAA,IAAqDiC,EAAA,CAA1CrB,MAAM,SAASsB,MAAM,YAChClC,EAAAA,EAAAA,IAAqDiC,EAAA,CAA1CrB,MAAM,SAASsB,MAAM,YAChClC,EAAAA,EAAAA,IAAuDiC,EAAA,CAA5CrB,MAAM,UAAUsB,MAAM,aACjClC,EAAAA,EAAAA,IAAuDiC,EAAA,CAA5CrB,MAAM,UAAUsB,MAAM,aACjClC,EAAAA,EAAAA,IAAyDiC,EAAA,CAA9CrB,MAAM,WAAWsB,MAAM,cAClClC,EAAAA,EAAAA,IAAiDiC,EAAA,CAAtCrB,MAAM,OAAOsB,MAAM,U,kBAIhCpC,EAAAA,EAAAA,IAIWyC,EAAAA,GAAA,CArEzB1C,IAAA,KAkEgBG,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,QAC5BlC,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,QAC5BlC,EAAAA,EAAAA,IAA6CiC,EAAA,CAAlCrB,MAAM,KAAKsB,MAAM,Q,QApE5CN,EAAA,G,qBAAAA,EAAA,KA0EU5B,EAAAA,EAAAA,IAgBeW,EAAA,CAhBDC,MAAM,QAAM,CA1EpCH,SAAAC,EAAAA,EAAAA,KA2EY,IAcM,EAdNR,EAAAA,EAAAA,IAcM,MAdNsC,EAcM,gBAbJ1C,EAAAA,EAAAA,IASSyC,EAAAA,GAAA,MArFvBE,EAAAA,EAAAA,IA6E8BlC,EAAAmC,cAAPC,K,WADTC,EAAAA,EAAAA,IASSC,EAAA,CAPNhD,IAAK8C,EACNG,SAAA,GACCzB,KAAME,EAAAwB,WAAWJ,EAAKpC,EAAAC,KAAKsB,aAC3BkB,QAAK9B,GAAEK,EAAA0B,eAAeN,GACvB/C,MAAM,iB,CAlFtBa,SAAAC,EAAAA,EAAAA,KAoFgB,IAAqB,EApFrCiB,EAAAA,EAAAA,KAAAuB,EAAAA,EAAAA,IAoFmB3B,EAAA4B,WAAWR,IAAG,MApFjCf,EAAA,G,kCAsFiD,IAAxBrB,EAAAmC,aAAaU,SAAM,WAA9BtD,EAAAA,EAAAA,IAEM,MAFNuD,EAA2D,qBAtFzEC,EAAAA,EAAAA,IAAA,YAAA1B,EAAA,KA6FU5B,EAAAA,EAAAA,IAmCeW,EAAA,CAnCDC,MAAM,QAAM,CA7FpCH,SAAAC,EAAAA,EAAAA,KA8FY,IAiCY,EAjCZV,EAAAA,EAAAA,IAiCY6B,EAAA,CA/HxBd,WA+FuBR,EAAAgD,eA/FvB,sBAAAtC,EAAA,KAAAA,EAAA,GAAAC,GA+FuBX,EAAAgD,eAAcrC,GACvBsC,WAAA,GACAC,OAAA,GACA,qBACAtC,YAAY,YACX,gBAAeI,EAAAmC,WACfjC,QAASlB,EAAAoD,iBACT5B,SAAQR,EAAAqC,gBACThE,MAAM,aACNiE,UAAA,I,CAxGdpD,SAAAC,EAAAA,EAAAA,KA2Gc,IASW,CAT0B,UAArBH,EAAAC,KAAKsB,aAA2BvB,EAAAuD,mBAAgB,WAC9DlB,EAAAA,EAAAA,IAOkBmB,EAAA,CAnHlClE,IAAA,EA4GkCe,MAAOL,EAAAuD,kB,CA5GzCrD,SAAAC,EAAAA,EAAAA,KA8GoB,IAA2B,gBAD7BZ,EAAAA,EAAAA,IAKEyC,EAAAA,GAAA,MAlHpBE,EAAAA,EAAAA,IA8GkClC,EAAAyD,cAAPrB,K,WADTC,EAAAA,EAAAA,IAKEX,EAAA,CAHCpC,IAAK8C,EAAIT,MACTtB,MAAO+B,EAAI/B,MACXsB,MAAOS,EAAIT,O,sCAjHhCN,EAAA,G,6BAwHgB9B,EAAAA,EAAAA,IAKEyC,EAAAA,GAAA,CA7HlB1C,IAAA,IAAA4C,EAAAA,EAAAA,IAyHgClC,EAAAyD,cAAPrB,K,WADTC,EAAAA,EAAAA,IAKEX,EAAA,CAHCpC,IAAK8C,EAAIT,MACTtB,MAAO+B,EAAI/B,MACXsB,MAAOS,EAAIT,O,sCA5H9BN,EAAA,G,0DAAAA,EAAA,KAmIU5B,EAAAA,EAAAA,IAQeW,EAAA,CARDC,MAAM,QAAM,CAnIpCH,SAAAC,EAAAA,EAAAA,KAoIY,IAMM,EANNR,EAAAA,EAAAA,IAMM,MANN+D,EAMM,WALJ/D,EAAAA,EAAAA,IAIY,YAzI1B,sBAAAe,EAAA,KAAAA,EAAA,GAAAC,GAsIyBX,EAAAC,KAAK0D,QAAOhD,GACrBtB,MAAM,kBACNuB,YAAY,sB,iBAFHZ,EAAAC,KAAK0D,gBAtI9BtC,EAAA,KA8IU5B,EAAAA,EAAAA,IAGeW,EAAA,CAHDf,MAAM,gBAAc,CA9I5Ca,SAAAC,EAAAA,EAAAA,KA+IY,IAA+E,EAA/EV,EAAAA,EAAAA,IAA+EoB,EAAA,CAApEC,KAAK,UAAWC,QAAOC,EAAA4C,YAAc1C,QAASlB,EAAA6D,Q,CA/IrE3D,SAAAC,EAAAA,EAAAA,KA+I6E,IAAEO,EAAA,KAAAA,EAAA,KA/I/EU,EAAAA,EAAAA,IA+I6E,UA/I7EC,EAAA,G,0BAgJY5B,EAAAA,EAAAA,IAA4CoB,EAAA,CAAhCE,QAAOC,EAAA8C,WAAS,CAhJxC5D,SAAAC,EAAAA,EAAAA,KAgJ0C,IAAEO,EAAA,KAAAA,EAAA,KAhJ5CU,EAAAA,EAAAA,IAgJ0C,UAhJ1CC,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,G,gBAsJM1B,EAAAA,EAAAA,IA4BM,MA5BNoE,EA4BM,EA3BJpE,EAAAA,EAAAA,IAmBM,MAnBNqE,EAmBM,gBAlBJrE,EAAAA,EAAAA,IAAW,UAAP,MAAE,KACNA,EAAAA,EAAAA,IAKM,MALNsE,EAKM,CAJOjE,EAAAC,KAAK4B,OAAI,WAApBtC,EAAAA,EAAAA,IAAiE,MAAjE2E,GAAiEvB,EAAAA,EAAAA,IAAlB3C,EAAAC,KAAK4B,MAAI,KA1JpEkB,EAAAA,EAAAA,IAAA,OA2JuB/C,EAAAC,KAAK6B,aAAU,WAA1BvC,EAAAA,EAAAA,IAEM,OA7JlBD,IAAA,EA2JwCD,OA3JxC8E,EAAAA,EAAAA,IAAA,CA2J8C,qBAA6BnD,EAAAoD,yB,QAC1DpE,EAAAC,KAAK6B,YAAU,KA5JhCiB,EAAAA,EAAAA,IAAA,SA+J0C/C,EAAAmC,aAAaU,OAAS,IAAH,WAAnDtD,EAAAA,EAAAA,IAUM,MAVN8E,EAUM,gBATJ9E,EAAAA,EAAAA,IAQSyC,EAAAA,GAAA,MAxKrBE,EAAAA,EAAAA,IAiK4BlC,EAAAmC,cAAPC,K,WADTC,EAAAA,EAAAA,IAQSC,EAAA,CANNhD,IAAK8C,EACLtB,KAAME,EAAAwB,WAAWJ,EAAKpC,EAAAC,KAAKsB,aAC5BlC,MAAM,cACNiF,KAAK,S,CArKnBpE,SAAAC,EAAAA,EAAAA,KAuKc,IAAqB,EAvKnCiB,EAAAA,EAAAA,KAAAuB,EAAAA,EAAAA,IAuKiB3B,EAAA4B,WAAWR,IAAG,MAvK/Bf,EAAA,G,4BAAA0B,EAAAA,EAAAA,IAAA,UA2KQpD,EAAAA,EAAAA,IAMM,MANN4E,EAMM,EALJ5E,EAAAA,EAAAA,IAA8D,OAAzDN,MAAM,mBAAmBmF,UAAQxD,EAAAyD,kB,OA5KhDC,GA6KsB1E,EAAAC,KAAK0D,SA7K3BZ,EAAAA,EAAAA,IAAA,SA6KkC,WAAxBxD,EAAAA,EAAAA,IAGM,MAHNoF,EAGM,EAFJlF,EAAAA,EAAAA,IAA+BmF,EAAA,MA9K3C1E,SAAAC,EAAAA,EAAAA,KA8KqB,IAAY,EAAZV,EAAAA,EAAAA,IAAYoF,MA9KjCxD,EAAA,I,eA+KY1B,EAAAA,EAAAA,IAAsB,SAAnB,mBAAe,c,kHAoB9B,GACEkC,KAAM,aACNiD,WAAY,CACVC,UAAS,IACTC,SAAQA,EAAAA,KAEVC,IAAAA,GACE,MAAO,CACL9D,UAAU,EACV0C,QAAQ,EACRqB,IAAK,IAAIC,EAAAA,EAAW,CAClBC,MAAM,EACNC,SAAS,EACTC,aAAa,IAEfrF,KAAM,CACJQ,IAAK,GACLc,YAAa,GACbK,gBAAiB,GACjBC,KAAM,GACNC,WAAY,GACZ6B,QAAS,IAEX4B,eAAe,EAGfpD,aAAc,GACda,eAAgB,GAChBI,kBAAkB,EAClBG,iBAAkB,GAGlBiC,QAAS,CACPC,SAAUC,EAAAA,GAAaC,KAAIvD,IAAE,CAAQ/B,MAAO+B,EAAKT,MAAOS,MACxDwD,MAAO,CACLC,UAAW,GACXC,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACRC,MAAO,KAGXxC,aAAc,GAElB,EACAyC,SAAU,CACRzB,gBAAAA,GACE,IACE,MAAMd,EAAUwC,OAAOC,KAAKnG,KAAK0D,SAAW,IACtCyB,EAAOgB,KAAKlB,IAAImB,OAAO1C,GAC7B,OAAO2C,EAAAA,EAAUC,SAASnB,EAC5B,CAAE,MAAOoB,GAEP,OADAC,QAAQC,MAAM,gBAAiBF,GACxB,QACT,CACF,GAEFG,MAAO,CACL,iBACMP,KAAKb,eACPa,KAAKQ,WAAU,IAAMR,KAAKS,iBAE9B,GAEFC,OAAAA,GACEV,KAAKW,cACLX,KAAKY,aACP,EACAC,QAAS,CAEP7C,kBAAAA,GACE,MAAMtC,EAAasE,KAAKnG,KAAK6B,WAC7B,IAAKA,EAAY,MAAO,GAExB,GAA8B,aAA1BsE,KAAKnG,KAAKsB,YAA4B,CACxC,MAAM2F,EAAW,CACf,KAAM,YACN,KAAM,cACN,KAAM,aAER,OAAOA,EAASpF,IAAe,EACjC,CAAO,MAA8B,UAA1BsE,KAAKnG,KAAKsB,YACfO,EAAWqF,SAAS,MAAc,YAClCrF,EAAWqF,SAAS,MAAc,cAC/B,YAGF,EACT,EAGA,iBAAMH,GACJ,IAIE,MAAMI,QAAYC,EAAAA,EAAAA,KACdD,EAAInC,MAA0B,MAAlBmC,EAAInC,KAAKqC,OACvBlB,KAAKZ,QAAQI,MAAQwB,EAAInC,KAAKA,KAElC,CAAE,MAAOyB,GACPD,QAAQC,MAAM,UAAWA,GACzBa,EAAAA,GAAUb,MAAM,WAClB,CACF,EAGAjF,oBAAAA,GACE2E,KAAKpD,eAAiB,GACtBoD,KAAK3C,aAAe,GAGhB2C,KAAKjE,aAAaU,OAAS,IACzB2E,QAAQ,qBACVpB,KAAKjE,aAAe,GAGpBiE,KAAKnG,KAAKsB,YAAwC,aAA1B6E,KAAKnG,KAAKsB,YAA6B,QAAU,WAG/E,EAGA4B,UAAAA,CAAWsE,GAIT,GAHArB,KAAKhD,kBAAmB,EACxBgD,KAAK7C,iBAAmB,GAEH,KAAjBkE,EAAMC,OAGR,OAFAtB,KAAK3C,aAAe,QACpB2C,KAAKhD,kBAAmB,GAI1BuE,YAAW,KACT,GAA8B,aAA1BvB,KAAKnG,KAAKsB,YAEZ6E,KAAK3C,aAAe2C,KAAKZ,QAAQC,SAC9BmC,QAAOxF,GAAOA,EAAI/B,MAAMwH,cAAcV,SAASM,EAAMI,sBACnD,GAA8B,UAA1BzB,KAAKnG,KAAKsB,YAAyB,CAE5C,IAAIuG,EAAe,GAGnB,IAAK,MAAMC,KAAY3B,KAAKZ,QAAQI,MAAO,CAEzC,MAAMoC,EAAc5B,KAAKZ,QAAQI,MAAMmC,GACpCH,QAAOxF,GAAOA,EAAIP,KAAKgG,cAAcV,SAASM,EAAMI,iBACpDlC,KAAIvD,IAAE,CACL/B,MAAO+B,EAAIP,KACXF,MAAO,GAAGoG,KAAY3F,EAAIP,OAC1BkG,eAGAC,EAAYnF,SACduD,KAAK7C,iBAAmB6C,KAAK6B,gBAAgBF,GAC7CD,EAAe,IAAIA,KAAiBE,GAExC,CAEA5B,KAAK3C,aAAeqE,CACtB,CAEA1B,KAAKhD,kBAAmB,CAAI,GAC3B,IACL,EAGA6E,eAAAA,CAAgBF,GACd,MAAMG,EAAc,CAClB,UAAa,OACb,OAAU,OACV,KAAQ,OACR,OAAU,OACV,MAAS,QAEX,OAAOA,EAAYH,IAAaA,CAClC,EAGA1E,eAAAA,CAAgB1B,GACTA,IAGDyE,KAAKjE,aAAagF,SAASxF,GAC7B4F,EAAAA,GAAUY,QAAQ,WAElB/B,KAAKjE,aAAaiG,KAAKzG,GACvB4F,EAAAA,GAAUc,QAAQ,WAIpBjC,KAAKpD,eAAiB,GACxB,EAGAJ,UAAAA,CAAWR,GAET,GAAIgE,KAAKZ,QAAQC,SAAS6C,MAAKC,GAAKA,EAAE5G,QAAUS,IAC9C,OAAOA,EAIT,MAAMoG,EAAQpG,EAAIqG,MAAM,KACxB,OAAID,EAAM3F,OAAS,EACV2F,EAAME,MAAM,GAAGC,KAAK,KAEtBvG,CACT,EAGAI,UAAAA,CAAWJ,EAAKwG,GAEd,GAAiB,aAAbA,EAAyB,MAAO,UAGpC,MAAMC,EAASzG,EAAIqG,MAAM,KAAK,GAC9B,MAAO,CACL,UAAa,UACb,OAAU,UACV,KAAQ,UACR,OAAU,SACV,MAAS,QACTI,IAAW,MACf,EAGAnG,cAAAA,CAAeN,GACbgE,KAAKjE,aAAeiE,KAAKjE,aAAayF,QAAOW,GAAKA,IAAMnG,GAC1D,EAEAyE,aAAAA,GACyB,qBAAZiC,SAA2BA,QAAQC,gBAC5CD,QAAQC,gBAEZ,EAEAhC,WAAAA,GACE,GAAIX,KAAKb,eAAoC,qBAAZuD,QAE/B,YADA1C,KAAKb,eAAgB,GAKvByD,OAAOF,QAAU,CACfG,IAAK,CACHC,WAAY,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,QACjCC,YAAa,CAAC,CAAC,KAAM,MAAO,CAAC,MAAO,QACpCC,gBAAgB,GAElBC,QAAS,CACPC,aAAc,CAAC,SAAU,WAAY,QAAS,WAAY,MAAO,SAEnEC,QAAS,CACPC,MAAOA,KACLV,QAAQS,QAAQE,eAChBrD,KAAKb,eAAgB,EACrBa,KAAKQ,WAAU,IAAMR,KAAKS,iBAAgB,IAMhD,MAAM6C,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,wDACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAAS,KACd3D,KAAKb,eAAgB,CAAG,EAE1BoE,SAASK,KAAKC,YAAYP,EAC5B,EAEA,uBAAMzI,GACJ,GAAKmF,KAAKnG,KAAKQ,IAAf,CAKA2F,KAAKjF,UAAW,EAChB,IACE,MAAM+I,QAAiBC,EAAAA,EAAAA,IAAgB,CAAE1J,IAAK2F,KAAKnG,KAAKQ,MAClDwE,EAAOiF,EAASjF,KAGtBmB,KAAKnG,KAAO,IACPmG,KAAKnG,KACRQ,IAAKwE,EAAKxE,KAAO2F,KAAKnG,KAAKQ,IAC3Bc,YAAa0D,EAAK1D,aAAe6E,KAAKnG,KAAKsB,YAC3CK,gBAAiBqD,EAAKrD,iBAAmBwE,KAAKnG,KAAK2B,gBACnDC,KAAMoD,EAAKpD,MAAQuE,KAAKnG,KAAK4B,KAC7BC,WAAYmD,EAAKnD,YAAcsE,KAAKnG,KAAK6B,WACzC6B,QAASsB,EAAKtB,SAAWyC,KAAKnG,KAAK0D,SAIjCsB,EAAKmF,gBAAkBC,MAAMC,QAAQrF,EAAKmF,kBAC5ChE,KAAKjE,aAAe,IAAI8C,EAAKmF,iBAG/B7C,EAAAA,GAAUc,QAAQ,WACpB,CAAE,MAAO3B,GACPD,QAAQC,MAAM,YAAaA,GAC3Ba,EAAAA,GAAUb,MAAM,WAClB,CAAE,QACAN,KAAKjF,UAAW,CAClB,CA7BA,MAFEoG,EAAAA,GAAUb,MAAM,WAgCpB,EAEA,iBAAM9C,GACJ,IAAKwC,KAAKmE,eAAgB,OAG1B,MAAMC,EAAc,CAClB5I,gBAAiBwE,KAAKnG,KAAK2B,gBAC3BC,KAAMuE,KAAKnG,KAAK4B,KAChBpB,IAAK2F,KAAKnG,KAAKQ,IACfc,YAAa6E,KAAKnG,KAAKsB,YACvBO,WAAYsE,KAAKnG,KAAK6B,WACtB6B,QAASyC,KAAKnG,KAAK0D,QACnByG,eAAgBhE,KAAKjE,cAGvBiE,KAAKvC,QAAS,EACd,IACE,MAAMqG,QAAiBO,EAAAA,EAAAA,IAAeD,IAChC,OAAEE,EAAM,QAAEC,EAAO,KAAE1F,GAASiF,EAASjF,KAE5B,YAAXyF,GACFnD,EAAAA,GAAUc,QAAQsC,GAAW,UAE7BlE,QAAQmE,IAAI,WAAY3F,GAGxBmB,KAAKtC,aAELyD,EAAAA,GAAUb,MAAMiE,GAAW,SAE/B,CAAE,MAAOjE,GACPD,QAAQC,MAAM,UAAWA,GACzBa,EAAAA,GAAUb,MAAM,YAAcA,EAAMiE,SAAW,QACjD,CAAE,QACAvE,KAAKvC,QAAS,CAChB,CACF,EAEA0G,YAAAA,GACE,OAAKnE,KAAKnG,KAAKsB,YAIV6E,KAAKnG,KAAK2B,gBAIVwE,KAAKnG,KAAK4B,OAIVuE,KAAKnG,KAAK0D,UACb4D,EAAAA,GAAUb,MAAM,YACT,IALPa,EAAAA,GAAUb,MAAM,YACT,IALPa,EAAAA,GAAUb,MAAM,YACT,IALPa,EAAAA,GAAUb,MAAM,UACT,EAeX,EAEA5C,SAAAA,GACEsC,KAAKnG,KAAO,CACVQ,IAAK,GACLc,YAAa,GACbK,gBAAiB,GACjBC,KAAM,GACNC,WAAY,GACZ6B,QAAS,IAEXyC,KAAKjE,aAAe,GACpBiE,KAAKpD,eAAiB,EACxB,I,UCnjBJ,MAAM6H,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASxE,GAAQ,CAAC,YAAY,qBAEzF,O,gICRO,MAAMX,EAAe,CACxB,QACA,OACA,QACA,MACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,OACA,MACA,QACA,OACA,OACA,MACA,IACA,OACA,UACA,MACA,MACA,QACA,OACA,OACA,MACA,OACA,OACA,KACA,KACA,KACA,MACA,MACA,KACA,QACA,MACA,OACA,IACA,IACA,OACA,OACA,QACA,KACA,OACA,OACA,SACA,OACA,KACA,MACA,OACA,QACA,KACA,OACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,OACA,KACA,MACA,SACA,QACA,MACA,OACA,QACA,KACA,MACA,MAKSoF,EAAoB,CAC7B,KAAM,MAAO,SAAU,SACvB,UAAW,UAAW,WAAY,QAIzBC,EAAuB,CAAC,KAAM,KAAM,K","sources":["webpack://vue-django-frontend/./src/views/CreateQuestionView.vue","webpack://vue-django-frontend/./src/views/CreateQuestionView.vue?8033","webpack://vue-django-frontend/./src/constants/tags.js"],"sourcesContent":["<template>\n  <div class=\"create-view\">\n    <AppHeader />\n    <div class=\"layout-container\">\n      <!-- 左侧操作面板 -->\n      <div class=\"control-panel\">\n        <h1>新建题目</h1>\n        \n        <el-form :model=\"form\" label-width=\"100px\" class=\"problem-form\">\n          <!-- URL输入和抓取按钮 -->\n          <el-form-item label=\"题目URL\">\n            <div class=\"url-input\">\n              <el-input v-model=\"form.url\" placeholder=\"输入题目URL\" />\n              <el-button \n                type=\"primary\" \n                @click=\"fetchQuestionInfo\"\n                :loading=\"fetching\"\n              >\n                提取题目信息\n              </el-button>\n            </div>\n          </el-form-item>\n\n          <!-- 基本信息 -->\n          <el-form-item label=\"平台\">\n            <el-select \n              v-model=\"form.oj_platform\" \n              placeholder=\"选择平台\"\n              @change=\"handlePlatformChange\"\n            >\n              <el-option label=\"洛谷\" value=\"luogu\" />\n              <el-option label=\"LeetCode\" value=\"leetcode\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"站外ID\">\n            <el-input v-model=\"form.ext_question_id\" />\n          </el-form-item>\n\n          <el-form-item label=\"题目名称\">\n            <el-input v-model=\"form.name\" />\n          </el-form-item>\n\n          <el-form-item label=\"难度\">\n            <el-select v-model=\"form.difficulty\" placeholder=\"选择难度\" style=\"width: 100%\">\n              <!-- LeetCode 难度 -->\n              <template v-if=\"form.oj_platform === 'leetcode'\">\n                <el-option label=\"简单\" value=\"简单\"></el-option>\n                <el-option label=\"中等\" value=\"中等\"></el-option>\n                <el-option label=\"困难\" value=\"困难\"></el-option>\n              </template>\n              \n              <!-- 洛谷难度 -->\n              <template v-else-if=\"form.oj_platform === 'luogu'\">\n                <el-option label=\"入门\" value=\"入门\"></el-option>\n                <el-option label=\"普及-\" value=\"普及-\"></el-option>\n                <el-option label=\"普及/提高-\" value=\"普及/提高-\"></el-option>\n                <el-option label=\"普及+/提高\" value=\"普及+/提高\"></el-option>\n                <el-option label=\"提高+/省选-\" value=\"提高+/省选-\"></el-option>\n                <el-option label=\"省选/NOI-\" value=\"省选/NOI-\"></el-option>\n                <el-option label=\"NOI/NOI+\" value=\"NOI/NOI+\"></el-option>\n                <el-option label=\"CTSC\" value=\"CTSC\"></el-option>\n              </template>\n              \n              <!-- 默认选项 -->\n              <template v-else>\n                <el-option label=\"简单\" value=\"简单\"></el-option>\n                <el-option label=\"中等\" value=\"中等\"></el-option>\n                <el-option label=\"困难\" value=\"困难\"></el-option>\n              </template>\n            </el-select>\n          </el-form-item>\n\n          <!-- 算法标签部分 -->\n          <el-form-item label=\"已选标签\">\n            <div class=\"tags-container\">\n              <el-tag\n                v-for=\"tag in selectedTags\"\n                :key=\"tag\"\n                closable\n                :type=\"getTagType(tag, form.oj_platform)\"\n                @close=\"handleTagClose(tag)\"\n                class=\"algorithm-tag\"\n              >\n                {{ getTagName(tag) }}\n              </el-tag>\n              <div v-if=\"selectedTags.length === 0\" class=\"no-tags-hint\">\n                暂无已选标签，请在下方添加\n              </div>\n            </div>\n          </el-form-item>\n              \n          <!-- 新增的模糊搜索标签选择 -->\n          <el-form-item label=\"添加标签\">\n            <el-select\n              v-model=\"tagSearchValue\"\n              filterable\n              remote\n              reserve-keyword\n              placeholder=\"输入关键词搜索标签\"\n              :remote-method=\"searchTags\"\n              :loading=\"tagSearchLoading\"\n              @change=\"handleTagSelect\"\n              class=\"tag-select\"\n              clearable\n            >\n              <!-- 显示分类标题 (仅洛谷) -->\n              <template v-if=\"form.oj_platform === 'luogu' && tagCategoryTitle\">\n                <el-option-group :label=\"tagCategoryTitle\">\n                  <el-option\n                    v-for=\"tag in filteredTags\"\n                    :key=\"tag.value\"\n                    :label=\"tag.label\"\n                    :value=\"tag.value\"\n                  />\n                </el-option-group>\n              </template>\n              \n              <!-- 无分类标题的选项 -->\n              <template v-else>\n                <el-option\n                  v-for=\"tag in filteredTags\"\n                  :key=\"tag.value\"\n                  :label=\"tag.label\"\n                  :value=\"tag.value\"\n                />\n              </template>\n            </el-select>\n          </el-form-item>\n\n          <!-- Markdown编辑器 -->\n          <el-form-item label=\"题目描述\">\n            <div class=\"markdown-editor\">\n              <textarea \n                v-model=\"form.content\" \n                class=\"editor-textarea\"\n                placeholder=\"输入题目描述（Markdown格式）\"\n              ></textarea>\n            </div>\n          </el-form-item>\n\n          <!-- 按钮组 -->\n          <el-form-item class=\"form-actions\">\n            <el-button type=\"primary\" @click=\"saveProblem\" :loading=\"saving\">保存</el-button>\n            <el-button @click=\"resetForm\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <!-- 右侧预览区域 -->\n      <div class=\"preview-panel\">\n        <div class=\"preview-header\">\n          <h2>预览</h2>\n          <div class=\"preview-meta\">\n            <div v-if=\"form.name\" class=\"preview-title\">{{ form.name }}</div>\n            <div v-if=\"form.difficulty\" class=\"preview-difficulty\" :class=\"getDifficultyClass()\">\n              {{ form.difficulty }}\n            </div>\n          </div>\n          <div class=\"preview-tags\" v-if=\"selectedTags.length > 0\">\n            <el-tag\n              v-for=\"tag in selectedTags\"\n              :key=\"tag\"\n              :type=\"getTagType(tag, form.oj_platform)\"\n              class=\"preview-tag\"\n              size=\"small\"\n            >\n              {{ getTagName(tag) }}\n            </el-tag>\n          </div>\n        </div>\n        <div class=\"preview-content\">\n          <div class=\"markdown-preview\" v-html=\"compiledMarkdown\"></div>\n          <div v-if=\"!form.content\" class=\"empty-preview\">\n            <el-icon><Document /></el-icon>\n            <p>在左侧输入内容后此处将显示预览</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { Document } from '@element-plus/icons-vue'\nimport { extractQuestion, createQuestion, getAllTags } from '@/api/question'\nimport MarkdownIt from 'markdown-it'\nimport DOMPurify from 'dompurify'\nimport { ElMessage } from 'element-plus'\nimport { LeetcodeTags } from '@/constants/tags'\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'CreateView',\n  components: {\n    AppHeader,\n    Document\n  },\n  data() {\n    return {\n      fetching: false,\n      saving: false,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      form: {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      },\n      mathJaxLoaded: false,\n      \n      // 标签相关数据\n      selectedTags: [], // 已选择的标签\n      tagSearchValue: '',\n      tagSearchLoading: false,\n      tagCategoryTitle: '',\n      \n      // 标签数据\n      allTags: {\n        leetcode: LeetcodeTags.map(tag => ({ label: tag, value: tag })),\n        luogu: {\n          Algorithm: [],\n          Source: [],\n          Time: [],\n          Region: [],\n          Other: []\n        }\n      },\n      filteredTags: [], // 筛选后的标签\n    }\n  },\n  computed: {\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content || '')\n        const html = this.mdi.render(content)\n        return DOMPurify.sanitize(html)\n      } catch (e) {\n        console.error('Markdown处理错误:', e)\n        return '内容解析出错'\n      }\n    }\n  },\n  watch: {\n    'form.content'() {\n      if (this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax())\n      }\n    }\n  },\n  mounted() {\n    this.initMathJax()\n    this.loadAllTags()\n  },\n  methods: {\n    // 获取难度对应的CSS类名\n    getDifficultyClass() {\n      const difficulty = this.form.difficulty;\n      if (!difficulty) return '';\n      \n      if (this.form.oj_platform === 'leetcode') {\n        const classMap = {\n          '简单': 'diff-easy',\n          '中等': 'diff-medium',\n          '困难': 'diff-hard'\n        };\n        return classMap[difficulty] || '';\n      } else if (this.form.oj_platform === 'luogu') {\n        if (difficulty.includes('入门')) return 'diff-easy';\n        if (difficulty.includes('普及')) return 'diff-medium';\n        return 'diff-hard';\n      }\n      \n      return '';\n    },\n    \n    // 加载所有标签\n    async loadAllTags() {\n      try {\n        // LeetCode标签已从常量导入\n        \n        // 加载洛谷标签\n        const res = await getAllTags()\n        if (res.data && res.data.code === 200) {\n          this.allTags.luogu = res.data.data\n        }\n      } catch (error) {\n        console.error('加载标签失败:', error)\n        ElMessage.error('加载标签数据失败')\n      }\n    },\n    \n    // 平台变更时重置标签搜索\n    handlePlatformChange() {\n      this.tagSearchValue = ''\n      this.filteredTags = []\n      \n      // 如果切换了平台，清空已选标签\n      if (this.selectedTags.length > 0) {\n        if (confirm('切换平台将清空已选标签，是否继续？')) {\n          this.selectedTags = []\n        } else {\n          // 恢复原平台\n          this.form.oj_platform = this.form.oj_platform === 'leetcode' ? 'luogu' : 'leetcode'\n        }\n      }\n    },\n    \n    // 标签搜索功能\n    searchTags(query) {\n      this.tagSearchLoading = true\n      this.tagCategoryTitle = ''\n      \n      if (query.trim() === '') {\n        this.filteredTags = []\n        this.tagSearchLoading = false\n        return\n      }\n      \n      setTimeout(() => {\n        if (this.form.oj_platform === 'leetcode') {\n          // 搜索LeetCode标签\n          this.filteredTags = this.allTags.leetcode\n            .filter(tag => tag.label.toLowerCase().includes(query.toLowerCase()))\n        } else if (this.form.oj_platform === 'luogu') {\n          // 搜索洛谷标签，合并所有类别\n          let allLuoguTags = [];\n          \n          // 遍历所有类别\n          for (const category in this.allTags.luogu) {\n            // 过滤符合条件的标签并格式化\n            const matchedTags = this.allTags.luogu[category]\n              .filter(tag => tag.name.toLowerCase().includes(query.toLowerCase()))\n              .map(tag => ({\n                label: tag.name,\n                value: `${category}_${tag.name}`,\n                category\n              }))\n            \n            if (matchedTags.length) {\n              this.tagCategoryTitle = this.getCategoryName(category)\n              allLuoguTags = [...allLuoguTags, ...matchedTags]\n            }\n          }\n          \n          this.filteredTags = allLuoguTags\n        }\n        \n        this.tagSearchLoading = false\n      }, 200)\n    },\n    \n    // 获取分类中文名称\n    getCategoryName(category) {\n      const categoryMap = {\n        'Algorithm': '算法标签',\n        'Source': '来源标签',\n        'Time': '时间标签',\n        'Region': '地区标签',\n        'Other': '其他标签'\n      }\n      return categoryMap[category] || category\n    },\n    \n    // 标签选择处理\n    handleTagSelect(value) {\n      if (!value) return\n      \n      // 检查是否已选择该标签\n      if (this.selectedTags.includes(value)) {\n        ElMessage.warning('该标签已添加')\n      } else {\n        this.selectedTags.push(value)\n        ElMessage.success('标签添加成功')\n      }\n      \n      // 清空选择框\n      this.tagSearchValue = ''\n    },\n    \n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.allTags.leetcode.some(t => t.value === tag)) {\n        return tag\n      }\n      \n      // 洛谷标签去掉前缀\n      const parts = tag.split('_')\n      if (parts.length > 1) {\n        return parts.slice(1).join('_')\n      }\n      return tag\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    },\n    \n    // 删除已选标签\n    handleTagClose(tag) {\n      this.selectedTags = this.selectedTags.filter(t => t !== tag)\n    },\n    \n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        MathJax.typesetPromise()\n      }\n    },\n    \n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true\n        return\n      }\n\n      // 配置MathJax - 使用单引号避免转义字符警告\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady()\n            this.mathJaxLoaded = true\n            this.$nextTick(() => this.renderMathJax())\n          }\n        }\n      }\n\n      // 加载MathJax脚本\n      const script = document.createElement('script')\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n      script.async = true\n      script.onload = () => {\n        this.mathJaxLoaded = true\n      }\n      document.head.appendChild(script)\n    },\n    \n    async fetchQuestionInfo() {\n      if (!this.form.url) {\n        ElMessage.error('请输入题目URL')\n        return\n      }\n\n      this.fetching = true\n      try {\n        const response = await extractQuestion({ url: this.form.url })\n        const data = response.data\n        \n        // 更新基本表单数据\n        this.form = {\n          ...this.form,\n          url: data.url || this.form.url,\n          oj_platform: data.oj_platform || this.form.oj_platform,\n          ext_question_id: data.ext_question_id || this.form.ext_question_id,\n          name: data.name || this.form.name,\n          difficulty: data.difficulty || this.form.difficulty,\n          content: data.content || this.form.content\n        }\n        \n        // 处理算法标签\n        if (data.algorithm_tags && Array.isArray(data.algorithm_tags)) {\n          this.selectedTags = [...data.algorithm_tags]\n        }\n        \n        ElMessage.success('题目信息抓取成功')\n      } catch (error) {\n        console.error('抓取题目信息失败:', error)\n        ElMessage.error('抓取题目信息失败')\n      } finally {\n        this.fetching = false\n      }\n    },\n    \n    async saveProblem() {\n      if (!this.validateForm()) return\n      \n      // 准备请求数据\n      const requestData = {\n        ext_question_id: this.form.ext_question_id,\n        name: this.form.name,\n        url: this.form.url,\n        oj_platform: this.form.oj_platform,\n        difficulty: this.form.difficulty,\n        content: this.form.content,\n        algorithm_tags: this.selectedTags // 直接使用数组格式\n      }\n      \n      this.saving = true\n      try {\n        const response = await createQuestion(requestData)\n        const { status, message, data } = response.data\n        \n        if (status === 'success') {\n          ElMessage.success(message || '题目创建成功')\n          // 可以在这里处理返回的数据，例如跳转到详情页\n          console.log('创建的题目数据:', data)\n          \n          // 重置表单\n          this.resetForm()\n        } else {\n          ElMessage.error(message || '题目创建失败')\n        }\n      } catch (error) {\n        console.error('保存题目失败:', error)\n        ElMessage.error('保存题目失败: ' + (error.message || '未知错误'))\n      } finally {\n        this.saving = false\n      }\n    },\n    \n    validateForm() {\n      if (!this.form.oj_platform) {\n        ElMessage.error('请选择平台')\n        return false\n      }\n      if (!this.form.ext_question_id) {\n        ElMessage.error('请输入站外ID')\n        return false\n      }\n      if (!this.form.name) {\n        ElMessage.error('请输入题目名称')\n        return false\n      }\n      if (!this.form.content) {\n        ElMessage.error('请输入题目描述')\n        return false\n      }\n      return true\n    },\n    \n    resetForm() {\n      this.form = {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      }\n      this.selectedTags = []\n      this.tagSearchValue = ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.create-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.layout-container {\n  display: flex;\n  max-width: 1600px;\n  margin: 0 auto;\n  gap: 24px;\n  padding: 24px;\n  height: calc(100vh - 60px); /* 减去顶栏高度 */\n}\n\n/* 左侧操作面板 */\n.control-panel {\n  flex: 1;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  overflow-y: auto;\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n}\n\n.control-panel h1 {\n  font-size: 1.8rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n}\n\n/* 右侧预览区域 */\n.preview-panel {\n  flex: 1;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  display: flex;\n  flex-direction: column;\n}\n\n.preview-header {\n  padding: 16px 24px;\n  border-bottom: 1px solid #eaeaea;\n  background: #f8f9fa;\n  border-radius: 12px 12px 0 0;\n}\n\n.preview-header h2 {\n  font-size: 1.4rem;\n  color: #2c3e50;\n  margin-bottom: 12px;\n}\n\n.preview-meta {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.preview-title {\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.preview-difficulty {\n  padding: 4px 10px;\n  border-radius: 12px;\n  font-size: 0.85rem;\n  font-weight: 500;\n}\n\n.diff-easy {\n  background-color: #e1f5e6;\n  color: #52c41a;\n}\n\n.diff-medium {\n  background-color: #fff7e6;\n  color: #fa8c16;\n}\n\n.diff-hard {\n  background-color: #fff1f0;\n  color: #f5222d;\n}\n\n.preview-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.preview-tag {\n  font-size: 0.8rem;\n}\n\n.preview-content {\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  background: #fcfcfc;\n}\n\n.empty-preview {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #bbb;\n  text-align: center;\n}\n\n.empty-preview .el-icon {\n  font-size: 48px;\n  margin-bottom: 16px;\n}\n\n.problem-form {\n  width: 100%;\n}\n\n.url-input {\n  display: flex;\n  gap: 12px;\n}\n\n.url-input .el-input {\n  flex: 1;\n}\n\n.url-input .el-button {\n  min-width: 120px;\n}\n\n.el-form-item {\n  margin-bottom: 18px;\n}\n\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  min-height: 40px;\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 6px;\n}\n\n.algorithm-tag {\n  margin: 2px;\n  transition: all 0.3s;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.no-tags-hint {\n  color: #909399;\n  font-size: 14px;\n  align-self: center;\n  padding: 0 10px;\n}\n\n.tag-select {\n  width: 100%;\n}\n\n.markdown-editor {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid #eaeaea;\n}\n\n.editor-textarea {\n  width: 100%;\n  min-height: 300px;\n  padding: 15px;\n  border: none;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  resize: vertical;\n  background: #fff;\n  color: #333;\n}\n\n.markdown-preview {\n  min-height: 300px;\n  background: #fff;\n  overflow: auto;\n}\n\n/* MathJax公式样式 */\n.markdown-preview :deep(.MathJax) {\n  color: #333;\n}\n\n/* 其他Markdown样式 */\n.markdown-preview :deep(h1),\n.markdown-preview :deep(h2),\n.markdown-preview :deep(h3) {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-preview :deep(pre) {\n  background-color: #f6f8fa;\n  padding: 12px;\n  border-radius: 6px;\n  overflow: auto;\n}\n\n.markdown-preview :deep(code) {\n  background-color: #f6f8fa;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n  color: #c7254e;\n}\n\n.markdown-preview :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin-left: 0;\n}\n\n.markdown-preview :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(th),\n.markdown-preview :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 0.6em 1em;\n}\n\n.markdown-preview :deep(ul),\n.markdown-preview :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(li) {\n  margin: 0.5em 0;\n}\n\n.markdown-preview :deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.markdown-preview :deep(a:hover) {\n  text-decoration: underline;\n}\n\n.markdown-preview :deep(img) {\n  max-width: 100%;\n  border-radius: 4px;\n}\n\n/* 按钮组样式 */\n.form-actions {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.form-actions .el-button {\n  min-width: 120px;\n  height: 40px;\n}\n\n/* 响应式调整 */\n@media (max-width: 1200px) {\n  .layout-container {\n    flex-direction: column;\n    height: auto;\n  }\n  \n  .control-panel, .preview-panel {\n    width: 100%;\n  }\n  \n  .preview-panel {\n    min-height: 500px;\n  }\n}\n\n@media (max-width: 768px) {\n  .layout-container {\n    padding: 16px;\n  }\n  \n  .control-panel, .preview-panel {\n    padding: 16px;\n  }\n  \n  .url-input {\n    flex-direction: column;\n  }\n  \n  .url-input .el-button {\n    width: 100%;\n  }\n  \n  .editor-textarea,\n  .markdown-preview {\n    min-height: 250px;\n  }\n}\n</style>","import { render } from \"./CreateQuestionView.vue?vue&type=template&id=351e829c&scoped=true\"\nimport script from \"./CreateQuestionView.vue?vue&type=script&lang=js\"\nexport * from \"./CreateQuestionView.vue?vue&type=script&lang=js\"\n\nimport \"./CreateQuestionView.vue?vue&type=style&index=0&id=351e829c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-351e829c\"]])\n\nexport default __exports__","// LeetCode相关标签\nexport const LeetcodeTags = [\n    \"Shell\",\n    \"二分查找\",\n    \"二叉搜索树\",\n    \"二叉树\",\n    \"交互\",\n    \"位运算\",\n    \"分治\",\n    \"前缀和\",\n    \"单向链表\",\n    \"单调栈\",\n    \"单调队列\",\n    \"双向链表\",\n    \"双指针\",\n    \"双连通分量\",\n    \"后缀数组\",\n    \"哈希函数\",\n    \"哈希表\",\n    \"图\",\n    \"基数排序\",\n    \"堆（优先队列）\",\n    \"字典树\",\n    \"字符串\",\n    \"字符串匹配\",\n    \"归并排序\",\n    \"快速选择\",\n    \"扫描线\",\n    \"拒绝采样\",\n    \"拓扑排序\",\n    \"排序\",\n    \"数论\",\n    \"数学\",\n    \"数据库\",\n    \"数据流\",\n    \"数组\",\n    \"最小生成树\",\n    \"最短路\",\n    \"有序集合\",\n    \"栈\",\n    \"树\",\n    \"树状数组\",\n    \"欧拉回路\",\n    \"概率与统计\",\n    \"模拟\",\n    \"滑动窗口\",\n    \"滚动哈希\",\n    \"深度优先搜索\",\n    \"状态压缩\",\n    \"矩阵\",\n    \"线段树\",\n    \"组合数学\",\n    \"脑筋急转弯\",\n    \"计数\",\n    \"计数排序\",\n    \"设计\",\n    \"贪心\",\n    \"迭代器\",\n    \"递归\",\n    \"链表\",\n    \"队列\",\n    \"随机化\",\n    \"集合\",\n    \"几何\",\n    \"动态规划\",\n    \"博弈\",\n    \"并查集\",\n    \"广度优先搜索\",\n    \"强连通分量\",\n    \"桶排序\",\n    \"水塘抽样\",\n    \"记忆化搜索\",\n    \"回溯\",\n    \"多线程\",\n    \"枚举\"\n]\n\n\n// 洛谷难度等级\nexport const LuoguDifficulties = [\n    '入门', '普及-', '普及/提高-', '普及+/提高',\n    '提高+/省选-', '省选/NOI-', 'NOI/NOI+', 'CTSC'\n]\n\n// LeetCode难度等级\nexport const LeetcodeDifficulties = ['简单', '中等', '困难']\n\n// 处理洛谷API返回的标签数据\nexport const processLuoguTags = (apiResponse) => {\n    const tagsList = [];\n    \n    // 主要处理 Algorithm 类型的标签，因为这些是算法相关标签\n    if (apiResponse.data && apiResponse.data.Algorithm) {\n        apiResponse.data.Algorithm.forEach(tag => {\n            tagsList.push(tag.name);\n        });\n    }\n    \n    return tagsList;\n}\n\n// 洛谷标签将通过API动态获取\nexport let LuoguTags = [];\n\n// 可以提供一个更新标签的方法\nexport const updateLuoguTags = (apiResponse) => {\n    LuoguTags = processLuoguTags(apiResponse);\n}\n"],"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_form","model","$data","form","default","_withCtx","_component_el_form_item","label","_hoisted_4","_component_el_input","modelValue","url","_cache","$event","placeholder","_component_el_button","type","onClick","$options","fetchQuestionInfo","loading","fetching","_createTextVNode","_","_component_el_select","oj_platform","onChange","handlePlatformChange","_component_el_option","value","ext_question_id","name","difficulty","style","_Fragment","_hoisted_5","_renderList","selectedTags","tag","_createBlock","_component_el_tag","closable","getTagType","onClose","handleTagClose","_toDisplayString","getTagName","length","_hoisted_6","_createCommentVNode","tagSearchValue","filterable","remote","searchTags","tagSearchLoading","handleTagSelect","clearable","tagCategoryTitle","_component_el_option_group","filteredTags","_hoisted_7","content","saveProblem","saving","resetForm","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeClass","getDifficultyClass","_hoisted_12","size","_hoisted_13","innerHTML","compiledMarkdown","_hoisted_14","_hoisted_15","_component_el_icon","_component_Document","components","AppHeader","Document","data","mdi","MarkdownIt","html","linkify","typographer","mathJaxLoaded","allTags","leetcode","LeetcodeTags","map","luogu","Algorithm","Source","Time","Region","Other","computed","String","this","render","DOMPurify","sanitize","e","console","error","watch","$nextTick","renderMathJax","mounted","initMathJax","loadAllTags","methods","classMap","includes","res","getAllTags","code","ElMessage","confirm","query","trim","setTimeout","filter","toLowerCase","allLuoguTags","category","matchedTags","getCategoryName","categoryMap","warning","push","success","some","t","parts","split","slice","join","platform","prefix","MathJax","typesetPromise","window","tex","inlineMath","displayMath","processEscapes","options","skipHtmlTags","startup","ready","defaultReady","script","document","createElement","src","async","onload","head","appendChild","response","extractQuestion","algorithm_tags","Array","isArray","validateForm","requestData","createQuestion","status","message","log","__exports__","LuoguDifficulties","LeetcodeDifficulties"],"sourceRoot":""}