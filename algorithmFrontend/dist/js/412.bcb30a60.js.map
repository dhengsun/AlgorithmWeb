{"version":3,"file":"js/412.bcb30a60.js","mappings":"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","sources":["webpack://vue-django-frontend/./src/constants/tags.js","webpack://vue-django-frontend/./src/views/QuestionUpdate.vue","webpack://vue-django-frontend/./src/views/QuestionUpdate.vue?7dcd"],"sourcesContent":["// LeetCode相关标签\nexport const LeetcodeTags = [\n    \"Shell\",\n    \"二分查找\",\n    \"二叉搜索树\",\n    \"二叉树\",\n    \"交互\",\n    \"位运算\",\n    \"分治\",\n    \"前缀和\",\n    \"单向链表\",\n    \"单调栈\",\n    \"单调队列\",\n    \"双向链表\",\n    \"双指针\",\n    \"双连通分量\",\n    \"后缀数组\",\n    \"哈希函数\",\n    \"哈希表\",\n    \"图\",\n    \"基数排序\",\n    \"堆（优先队列）\",\n    \"字典树\",\n    \"字符串\",\n    \"字符串匹配\",\n    \"归并排序\",\n    \"快速选择\",\n    \"扫描线\",\n    \"拒绝采样\",\n    \"拓扑排序\",\n    \"排序\",\n    \"数论\",\n    \"数学\",\n    \"数据库\",\n    \"数据流\",\n    \"数组\",\n    \"最小生成树\",\n    \"最短路\",\n    \"有序集合\",\n    \"栈\",\n    \"树\",\n    \"树状数组\",\n    \"欧拉回路\",\n    \"概率与统计\",\n    \"模拟\",\n    \"滑动窗口\",\n    \"滚动哈希\",\n    \"深度优先搜索\",\n    \"状态压缩\",\n    \"矩阵\",\n    \"线段树\",\n    \"组合数学\",\n    \"脑筋急转弯\",\n    \"计数\",\n    \"计数排序\",\n    \"设计\",\n    \"贪心\",\n    \"迭代器\",\n    \"递归\",\n    \"链表\",\n    \"队列\",\n    \"随机化\",\n    \"集合\",\n    \"几何\",\n    \"动态规划\",\n    \"博弈\",\n    \"并查集\",\n    \"广度优先搜索\",\n    \"强连通分量\",\n    \"桶排序\",\n    \"水塘抽样\",\n    \"记忆化搜索\",\n    \"回溯\",\n    \"多线程\",\n    \"枚举\"\n]\n\n\n// 洛谷难度等级\nexport const LuoguDifficulties = [\n    '入门', '普及-', '普及/提高-', '普及+/提高',\n    '提高+/省选-', '省选/NOI-', 'NOI/NOI+', 'CTSC'\n]\n\n// LeetCode难度等级\nexport const LeetcodeDifficulties = ['简单', '中等', '困难']\n\n// 处理洛谷API返回的标签数据\nexport const processLuoguTags = (apiResponse) => {\n    const tagsList = [];\n    \n    // 主要处理 Algorithm 类型的标签，因为这些是算法相关标签\n    if (apiResponse.data && apiResponse.data.Algorithm) {\n        apiResponse.data.Algorithm.forEach(tag => {\n            tagsList.push(tag.name);\n        });\n    }\n    \n    return tagsList;\n}\n\n// 洛谷标签将通过API动态获取\nexport let LuoguTags = [];\n\n// 可以提供一个更新标签的方法\nexport const updateLuoguTags = (apiResponse) => {\n    LuoguTags = processLuoguTags(apiResponse);\n}\n","<template>\n  <div class=\"question-update-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <el-card class=\"update-card\">\n        <template #header>\n          <div class=\"card-header\">\n            <h2>更新题目</h2>\n          </div>\n        </template>\n\n        <!-- 题目ID查询部分 -->\n        <div v-if=\"!question\" class=\"id-query-section\">\n          <el-form :model=\"queryForm\" :rules=\"queryRules\" ref=\"queryFormRef\" label-width=\"80px\">\n            <el-form-item label=\"题目ID\" prop=\"id\">\n              <el-input v-model=\"queryForm.id\" placeholder=\"请输入题目ID（如E1、E2等）\"></el-input>\n            </el-form-item>\n\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"fetchQuestion\">查询题目</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n\n        <!-- 加载中状态 -->\n        <div v-else-if=\"loading\" class=\"loading-container\">\n          <el-skeleton :rows=\"10\" animated />\n        </div>\n\n        <!-- 错误提示 -->\n        <div v-else-if=\"error\" class=\"error-container\">\n          <el-alert\n            :title=\"error\"\n            type=\"error\"\n            :closable=\"false\"\n            @close=\"resetQuery\"\n          />\n          <el-button class=\"mt-3\" @click=\"resetQuery\">返回</el-button>\n        </div>\n\n        <!-- 题目编辑表单 -->\n        <div v-else class=\"question-form-container\">\n          <el-form \n            :model=\"questionForm\" \n            :rules=\"rules\" \n            ref=\"formRef\" \n            label-width=\"100px\"\n            label-position=\"top\"\n          >\n            <!-- 基本信息部分 -->\n            <el-divider content-position=\"left\">基本信息</el-divider>\n            \n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"题目名称\" prop=\"name\">\n                  <el-input v-model=\"questionForm.name\" placeholder=\"请输入题目名称\"></el-input>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"外部ID\" prop=\"ext_question_id\">\n                  <el-input v-model=\"questionForm.ext_question_id\" placeholder=\"请输入外部ID\"></el-input>\n                </el-form-item>\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"平台\" prop=\"oj_platform\">\n                  <el-select \n                    v-model=\"questionForm.oj_platform\" \n                    placeholder=\"请选择平台\" \n                    style=\"width: 100%\"\n                    @change=\"handlePlatformChange\"\n                  >\n                    <el-option label=\"LeetCode\" value=\"leetcode\"></el-option>\n                    <el-option label=\"洛谷\" value=\"luogu\"></el-option>\n                    <!-- 可以添加更多平台 -->\n                  </el-select>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"难度\" prop=\"difficulty\">\n                  <el-select \n                    v-model=\"questionForm.difficulty\" \n                    placeholder=\"请选择难度\" \n                    style=\"width: 100%\"\n                  >\n                    <!-- LeetCode 难度 -->\n                    <template v-if=\"questionForm.oj_platform === 'leetcode'\">\n                      <el-option label=\"简单\" value=\"简单\"></el-option>\n                      <el-option label=\"中等\" value=\"中等\"></el-option>\n                      <el-option label=\"困难\" value=\"困难\"></el-option>\n                    </template>\n                    \n                    <!-- 洛谷难度 -->\n                    <template v-else-if=\"questionForm.oj_platform === 'luogu'\">\n                      <el-option label=\"入门\" value=\"入门\"></el-option>\n                      <el-option label=\"普及-\" value=\"普及-\"></el-option>\n                      <el-option label=\"普及/提高-\" value=\"普及/提高-\"></el-option>\n                      <el-option label=\"普及+/提高\" value=\"普及+/提高\"></el-option>\n                      <el-option label=\"提高+/省选-\" value=\"提高+/省选-\"></el-option>\n                      <el-option label=\"省选/NOI-\" value=\"省选/NOI-\"></el-option>\n                      <el-option label=\"NOI/NOI+\" value=\"NOI/NOI+\"></el-option>\n                      <el-option label=\"CTSC\" value=\"CTSC\"></el-option>\n                    </template>\n                    \n                    <!-- 默认选项 -->\n                    <template v-else>\n                      <el-option label=\"简单\" value=\"简单\"></el-option>\n                      <el-option label=\"中等\" value=\"中等\"></el-option>\n                      <el-option label=\"困难\" value=\"困难\"></el-option>\n                    </template>\n                  </el-select>\n                </el-form-item>\n              </el-col>\n            </el-row>\n\n            <!-- 算法标签部分 -->\n            <el-divider content-position=\"left\">算法标签</el-divider>\n            <el-form-item label=\"已选标签\" prop=\"algorithm_tags\">\n              <div class=\"tags-container\">\n                <el-tag\n                  v-for=\"tag in questionForm.algorithm_tags\"\n                  :key=\"tag\"\n                  closable\n                  :type=\"getTagType(tag, questionForm.oj_platform)\"\n                  @close=\"handleTagClose(tag)\"\n                  class=\"algorithm-tag\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </el-form-item>\n            \n            <!-- 新增的模糊搜索标签选择 -->\n            <el-form-item label=\"添加标签\">\n              <el-select\n                v-model=\"tagSearchValue\"\n                filterable\n                remote\n                reserve-keyword\n                placeholder=\"输入关键词搜索标签\"\n                :remote-method=\"searchTags\"\n                :loading=\"tagSearchLoading\"\n                @change=\"handleTagSelect\"\n                class=\"tag-select\"\n                clearable\n              >\n                <!-- 显示分类标题 (仅洛谷) -->\n                <template v-if=\"questionForm.oj_platform === 'luogu' && tagCategoryTitle\">\n                  <el-option-group :label=\"tagCategoryTitle\">\n                    <el-option\n                      v-for=\"tag in filteredTags\"\n                      :key=\"tag.value\"\n                      :label=\"tag.label\"\n                      :value=\"tag.value\"\n                    />\n                  </el-option-group>\n                </template>\n                \n                <!-- 无分类标题的选项 -->\n                <template v-else>\n                  <el-option\n                    v-for=\"tag in filteredTags\"\n                    :key=\"tag.value\"\n                    :label=\"tag.label\"\n                    :value=\"tag.value\"\n                  />\n                </template>\n              </el-select>\n            </el-form-item>\n\n            <!-- 题目内容部分 -->\n            <el-divider content-position=\"left\">题目内容</el-divider>\n            <el-form-item \n              label=\"题目内容\" \n              prop=\"content\"\n              :rules=\"[{ required: true, message: '题目内容不能为空', trigger: 'blur' }]\"\n            >\n              <el-tabs v-model=\"contentTabActive\">\n                <el-tab-pane label=\"编辑\" name=\"edit\">\n                  <el-input\n                    v-model=\"questionForm.content\"\n                    type=\"textarea\"\n                    :rows=\"15\"\n                    placeholder=\"请输入题目内容\"\n                  ></el-input>\n                </el-tab-pane>\n                <el-tab-pane label=\"预览\" name=\"preview\">\n                  <div v-if=\"questionForm.oj_platform === 'leetcode'\" \n                       class=\"preview-container html-content\" \n                       v-html=\"previewHtml\">\n                  </div>\n                  <div v-else \n                       class=\"preview-container markdown-content\" \n                       v-html=\"previewMarkdown\">\n                  </div>\n                </el-tab-pane>\n              </el-tabs>\n            </el-form-item>\n\n            <!-- 操作按钮 -->\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitForm\">更新题目</el-button>\n              <el-button @click=\"resetForm\">重置表单</el-button>\n              <el-button type=\"info\" @click=\"resetQuery\">返回查询</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </main>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { getQuestionDetail, getAllTags } from '@/api/question'\nimport MarkdownIt from 'markdown-it'\nimport DOMPurify from 'dompurify'\nimport { ElMessage } from 'element-plus'\n\n// 导入更新题目的API和标签常量\nimport { updateQuestion } from '@/api/question'\nimport { LeetcodeTags } from '@/constants/tags'\n\nexport default {\n  name: 'QuestionUpdate',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      // 查询表单\n      queryForm: {\n        id: ''\n      },\n      queryRules: {\n        id: [\n          { required: true, message: '请输入题目ID', trigger: 'blur' },\n          // 修改验证规则，允许字母和数字的组合\n          { pattern: /^[a-zA-Z0-9]+$/, message: '题目ID只能包含字母和数字', trigger: 'blur' }\n        ]\n      },\n      \n      // 题目状态\n      question: null,\n      loading: false,\n      error: null,\n      \n      // 题目表单\n      questionForm: {\n        id: '',\n        name: '',\n        ext_question_id: '',\n        oj_platform: '',\n        difficulty: '',\n        algorithm_tags: [],\n        content: ''\n      },\n      \n      // 表单验证规则\n      rules: {\n        name: [\n          { required: true, message: '请输入题目名称', trigger: 'blur' },\n          { min: 1, max: 100, message: '长度在1到100个字符', trigger: 'blur' }\n        ],\n        ext_question_id: [\n          { required: true, message: '请输入外部ID', trigger: 'blur' }\n        ],\n        oj_platform: [\n          { required: true, message: '请选择平台', trigger: 'change' }\n        ],\n        difficulty: [\n          { required: true, message: '请选择难度', trigger: 'change' }\n        ]\n      },\n      \n      // 标签相关数据\n      tagInputVisible: false,\n      tagInputValue: '',\n      tagSearchValue: '',\n      tagSearchLoading: false,\n      tagCategoryTitle: '',\n      \n      // 标签数据\n      allTags: {\n        leetcode: LeetcodeTags.map(tag => ({ label: tag, value: tag })),\n        luogu: {\n          Algorithm: [],\n          Source: [],\n          Time: [],\n          Region: [],\n          Other: []\n        }\n      },\n      filteredTags: [], // 筛选后的标签\n      \n      // 内容预览标签页\n      contentTabActive: 'edit',\n      \n      // Markdown渲染\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n    }\n  },\n  computed: {\n    // Markdown预览\n    previewMarkdown() {\n      if (!this.questionForm.content) return ''\n      \n      try {\n        const content = String(this.questionForm.content || '')\n        const html = this.mdi.render(content)\n        return DOMPurify.sanitize(html)\n      } catch (e) {\n        console.error('Markdown处理错误:', e)\n        return '内容解析出错'\n      }\n    },\n    \n    // HTML预览\n    previewHtml() {\n      if (!this.questionForm.content) return ''\n      \n      try {\n        let content = String(this.questionForm.content || '')\n        \n        // 简单处理HTML内容\n        return DOMPurify.sanitize(content, {\n          USE_PROFILES: { html: true },\n          ALLOWED_TAGS: [\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'br', 'hr',\n            'ol', 'ul', 'li', 'pre', 'code', 'blockquote',\n            'table', 'thead', 'tbody', 'tr', 'th', 'td',\n            'strong', 'em', 'b', 'i', 'u', 'strike', 's',\n            'a', 'img', 'span', 'div', 'section', 'article'\n          ]\n        })\n      } catch (e) {\n        console.error('HTML处理错误:', e)\n        return '内容解析出错'\n      }\n    }\n  },\n  mounted() {\n    // 加载所有平台的标签\n    this.loadAllTags()\n    \n    // 如果URL中带有id参数，则自动填充并查询\n    const urlId = this.$route.params.id\n    if (urlId) {\n      this.queryForm.id = urlId\n      this.fetchQuestion()\n    }\n  },\n  methods: {\n    // 加载所有标签\n    async loadAllTags() {\n      try {\n        // LeetCode标签已从常量导入\n        \n        // 加载洛谷标签\n        const res = await getAllTags()\n        if (res.data && res.data.code === 200) {\n          this.allTags.luogu = res.data.data\n        }\n      } catch (error) {\n        console.error('加载标签失败:', error)\n        ElMessage.error('加载标签数据失败')\n      }\n    },\n    \n    // 平台变更时重置标签搜索\n    handlePlatformChange() {\n      this.tagSearchValue = ''\n      this.filteredTags = []\n      \n      // 如果切换了平台，清空已选标签\n      if (confirm('切换平台将清空已选标签，是否继续？')) {\n        this.questionForm.algorithm_tags = []\n      } else {\n        // 恢复原平台\n        this.questionForm.oj_platform = this.question.oj_platform\n      }\n    },\n    \n    // 标签搜索功能\n    searchTags(query) {\n      this.tagSearchLoading = true\n      this.tagCategoryTitle = ''\n      \n      if (query.trim() === '') {\n        this.filteredTags = []\n        this.tagSearchLoading = false\n        return\n      }\n      \n      setTimeout(() => {\n        if (this.questionForm.oj_platform === 'leetcode') {\n          // 搜索LeetCode标签\n          this.filteredTags = this.allTags.leetcode\n            .filter(tag => tag.label.toLowerCase().includes(query.toLowerCase()))\n        } else if (this.questionForm.oj_platform === 'luogu') {\n          // 搜索洛谷标签，合并所有类别\n          let allLuoguTags = [];\n          \n          // 遍历所有类别\n          for (const category in this.allTags.luogu) {\n            // 过滤符合条件的标签并格式化\n            const matchedTags = this.allTags.luogu[category]\n              .filter(tag => tag.name.toLowerCase().includes(query.toLowerCase()))\n              .map(tag => ({\n                label: tag.name,\n                value: `${category}_${tag.name}`,\n                category\n              }))\n            \n            if (matchedTags.length) {\n              this.tagCategoryTitle = this.getCategoryName(category)\n              allLuoguTags = [...allLuoguTags, ...matchedTags]\n            }\n          }\n          \n          this.filteredTags = allLuoguTags\n        }\n        \n        this.tagSearchLoading = false\n      }, 200)\n    },\n    \n    // 获取分类中文名称\n    getCategoryName(category) {\n      const categoryMap = {\n        'Algorithm': '算法标签',\n        'Source': '来源标签',\n        'Time': '时间标签',\n        'Region': '地区标签',\n        'Other': '其他标签'\n      }\n      return categoryMap[category] || category\n    },\n    \n    // 标签选择处理\n    handleTagSelect(value) {\n      if (!value) return\n      \n      // 检查是否已选择该标签\n      if (this.questionForm.algorithm_tags.includes(value)) {\n        ElMessage.warning('该标签已添加')\n      } else {\n        this.questionForm.algorithm_tags.push(value)\n        ElMessage.success('标签添加成功')\n      }\n      \n      // 清空选择框\n      this.tagSearchValue = ''\n    },\n    \n    // 查询题目\n    async fetchQuestion() {\n      // 表单验证\n      try {\n        await this.$refs.queryFormRef.validate()\n      } catch (error) {\n        return false\n      }\n      \n      this.loading = true\n      this.error = null\n      \n      try {\n        const response = await getQuestionDetail(this.queryForm.id)\n        this.question = response.data\n        \n        // 填充表单\n        this.fillFormWithQuestion(this.question)\n        \n        this.loading = false\n      } catch (error) {\n        console.error('获取题目详情失败:', error)\n        this.error = '获取题目详情失败: ' + (error.message || '未知错误')\n        this.loading = false\n      }\n    },\n    \n    // 填充表单\n    fillFormWithQuestion(question) {\n      this.questionForm.id = question.id\n      this.questionForm.name = question.name\n      this.questionForm.ext_question_id = question.ext_question_id\n      this.questionForm.oj_platform = question.oj_platform\n      this.questionForm.difficulty = question.difficulty\n      this.questionForm.content = question.content\n      \n      // 处理标签\n      if (typeof question.algorithm_tags === 'string') {\n        this.questionForm.algorithm_tags = question.algorithm_tags\n          .split(',')\n          .map(tag => tag.trim())\n          .filter(tag => tag.length > 0)\n      } else if (Array.isArray(question.algorithm_tags)) {\n        this.questionForm.algorithm_tags = [...question.algorithm_tags]\n      } else {\n        this.questionForm.algorithm_tags = []\n      }\n    },\n    \n    // 重置查询\n    resetQuery() {\n      this.question = null\n      this.error = null\n      this.queryForm.id = ''\n      \n      if (this.$refs.queryFormRef) {\n        this.$refs.queryFormRef.resetFields()\n      }\n    },\n    \n    // 重置表单\n    resetForm() {\n      if (this.$refs.formRef) {\n        this.$refs.formRef.resetFields()\n      }\n      \n      // 重新填充原始数据\n      if (this.question) {\n        this.fillFormWithQuestion(this.question)\n      }\n    },\n    \n    // 提交表单\n    async submitForm() {\n      // 表单验证\n      try {\n        await this.$refs.formRef.validate()\n      } catch (error) {\n        return false\n      }\n      \n      this.loading = true\n      \n      try {\n        // 创建适合后端API的请求数据\n        const formData = {\n          id: this.questionForm.id,\n          name: this.questionForm.name,\n          ext_question_id: this.questionForm.ext_question_id,\n          oj_platform: this.questionForm.oj_platform,\n          difficulty: this.questionForm.difficulty,\n          content: this.questionForm.content,\n          // 确保算法标签是数组形式，与Postman测试保持一致\n          algorithm_tags: Array.isArray(this.questionForm.algorithm_tags) \n            ? [...this.questionForm.algorithm_tags] \n            : []\n        }\n        \n        // 可以添加url字段，如果后端需要\n        if (this.questionForm.oj_platform === 'leetcode') {\n          formData.url = `https://leetcode.cn/problems/${this.questionForm.ext_question_id}/`\n        } else if (this.questionForm.oj_platform === 'luogu') {\n          formData.url = `https://www.luogu.com.cn/problem/${this.questionForm.ext_question_id}`\n        }\n        \n        console.log('发送更新请求数据:', formData)\n        \n        // 调用更新API\n        await updateQuestion(formData.id, formData)\n        \n        // 显示成功消息\n        ElMessage({\n          message: '题目更新成功',\n          type: 'success'\n        })\n        \n        // 重新获取最新数据\n        this.fetchQuestion()\n      } catch (error) {\n        console.error('更新题目失败:', error)\n        ElMessage({\n          message: '更新题目失败: ' + (error.message || '未知错误'),\n          type: 'error'\n        })\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 删除已选标签\n    handleTagClose(tag) {\n      this.questionForm.algorithm_tags = this.questionForm.algorithm_tags.filter(t => t !== tag)\n    },\n    \n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.allTags.leetcode.some(t => t.value === tag)) {\n        return tag\n      }\n      \n      // 洛谷标签去掉前缀\n      const parts = tag.split('_')\n      if (parts.length > 1) {\n        return parts.slice(1).join('_')\n      }\n      return tag\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.question-update-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.page-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px;\n}\n\n.update-card {\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border: none;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(5px);\n}\n\n.card-header {\n  padding: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.card-header h2 {\n  font-size: 1.5rem;\n  color: #2c3e50;\n  font-weight: 600;\n  margin: 0;\n}\n\n.id-query-section,\n.question-form-container {\n  padding: 25px;\n}\n\n.loading-container,\n.error-container {\n  padding: 40px;\n  text-align: center;\n}\n\n/* 表单样式优化 */\n.el-form {\n  max-width: 900px;\n  margin: 0 auto;\n}\n\n.el-form-item {\n  margin-bottom: 22px;\n}\n\n.el-form-item:last-child {\n  margin-bottom: 0;\n}\n\n.el-input,\n.el-select,\n.el-textarea {\n  border-radius: 8px;\n}\n\n.el-textarea__inner {\n  min-height: 300px;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  line-height: 1.6;\n}\n\n/* 分割线样式 */\n.el-divider__text {\n  font-size: 1rem;\n  color: #606266;\n  font-weight: 500;\n}\n\n/* 标签容器 */\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 8px;\n  min-height: 48px;\n}\n\n.algorithm-tag {\n  transition: all 0.3s;\n  margin: 0;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 标签选择器 */\n.tag-select {\n  width: 100%;\n}\n\n/* 预览区域 */\n.preview-container {\n  padding: 20px;\n  border-radius: 8px;\n  background: #fff;\n  min-height: 300px;\n  max-height: 500px;\n  overflow-y: auto;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n/* Markdown/HTML内容样式 */\n.markdown-content,\n.html-content {\n  line-height: 1.8;\n}\n\n.markdown-content :deep(h1),\n.markdown-content :deep(h2),\n.markdown-content :deep(h3),\n.html-content :deep(h1),\n.html-content :deep(h2),\n.html-content :deep(h3) {\n  margin-top: 1.5em;\n  margin-bottom: 0.8em;\n  color: #2c3e50;\n  font-weight: 600;\n}\n\n.markdown-content :deep(pre),\n.html-content :deep(pre) {\n  background-color: #f8f9fa;\n  padding: 16px;\n  border-radius: 8px;\n  overflow: auto;\n  border-left: 4px solid #409eff;\n}\n\n.markdown-content :deep(code),\n.html-content :deep(code) {\n  background-color: rgba(175, 184, 193, 0.2);\n  padding: 0.2em 0.4em;\n  border-radius: 4px;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  color: #476582;\n}\n\n.markdown-content :deep(blockquote),\n.html-content :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin: 1em 0;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 0 4px 4px 0;\n}\n\n.markdown-content :deep(table),\n.html-content :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5em 0;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(th),\n.html-content :deep(th) {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.markdown-content :deep(th),\n.markdown-content :deep(td),\n.html-content :deep(th),\n.html-content :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 12px 16px;\n  text-align: left;\n}\n\n/* 按钮组样式 */\n.el-form-item:last-child {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.el-form-item:last-child .el-button {\n  min-width: 120px;\n  height: 40px;\n  margin: 0 8px;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .page-container {\n    padding: 15px;\n  }\n\n  .id-query-section,\n  .question-form-container {\n    padding: 15px;\n  }\n\n  .el-form-item:last-child .el-button {\n    width: 100%;\n    margin: 8px 0;\n  }\n\n  .el-col {\n    margin-bottom: 16px;\n  }\n}\n\n/* 动画效果 */\n.el-tag,\n.el-button {\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.1);\n}\n\n.el-tag:hover {\n  transform: translateY(-2px);\n}\n\n.el-button:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 标签页样式优化 */\n:deep(.el-tabs__nav-wrap) {\n  padding: 0 20px;\n  background: #f8f9fa;\n  border-radius: 8px 8px 0 0;\n}\n\n:deep(.el-tabs__item) {\n  padding: 0 24px;\n  height: 48px;\n  line-height: 48px;\n  font-weight: 500;\n}\n\n:deep(.el-tabs__content) {\n  padding: 0;\n}\n</style>","import { render } from \"./QuestionUpdate.vue?vue&type=template&id=ba7c0e66&scoped=true\"\nimport script from \"./QuestionUpdate.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionUpdate.vue?vue&type=script&lang=js\"\n\nimport \"./QuestionUpdate.vue?vue&type=style&index=0&id=ba7c0e66&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ba7c0e66\"]])\n\nexport default __exports__"],"names":["LeetcodeTags","LuoguDifficulties","LeetcodeDifficulties","class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_component_el_card","header","_withCtx","_cache","default","$data","question","loading","_hoisted_4","_component_el_skeleton","rows","animated","error","_hoisted_5","_component_el_alert","title","type","closable","onClose","$options","resetQuery","_component_el_button","onClick","_createTextVNode","_","_hoisted_6","_component_el_form","model","questionForm","rules","ref","_component_el_divider","_component_el_row","gutter","_component_el_col","span","_component_el_form_item","label","prop","_component_el_input","modelValue","name","$event","placeholder","ext_question_id","_component_el_select","oj_platform","style","onChange","handlePlatformChange","_component_el_option","value","difficulty","_Fragment","_hoisted_7","_renderList","algorithm_tags","tag","_createBlock","_component_el_tag","getTagType","handleTagClose","_toDisplayString","getTagName","tagSearchValue","filterable","remote","searchTags","tagSearchLoading","handleTagSelect","clearable","tagCategoryTitle","_component_el_option_group","filteredTags","required","message","trigger","_component_el_tabs","contentTabActive","_component_el_tab_pane","content","innerHTML","previewHtml","_hoisted_8","previewMarkdown","_hoisted_9","submitForm","resetForm","_hoisted_3","queryForm","queryRules","id","fetchQuestion","components","AppHeader","data","pattern","min","max","tagInputVisible","tagInputValue","allTags","leetcode","map","luogu","Algorithm","Source","Time","Region","Other","mdi","MarkdownIt","html","linkify","typographer","computed","this","String","render","DOMPurify","sanitize","e","console","USE_PROFILES","ALLOWED_TAGS","mounted","loadAllTags","urlId","$route","params","methods","res","getAllTags","code","ElMessage","confirm","query","trim","setTimeout","filter","toLowerCase","includes","allLuoguTags","category","matchedTags","length","getCategoryName","categoryMap","warning","push","success","$refs","queryFormRef","validate","response","getQuestionDetail","fillFormWithQuestion","split","Array","isArray","resetFields","formRef","formData","url","log","updateQuestion","t","some","parts","slice","join","platform","prefix","__exports__"],"sourceRoot":""}