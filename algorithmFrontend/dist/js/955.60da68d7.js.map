{"version":3,"file":"js/955.60da68d7.js","mappings":"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","sources":["webpack://vue-django-frontend/./src/views/QuestionDetailView.vue","webpack://vue-django-frontend/./src/views/QuestionDetailView.vue?db3b"],"sourcesContent":["<template>\n  <div class=\"question-detail-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      \n      <div v-else-if=\"error\" class=\"error-container\">\n        <el-alert\n          :title=\"error\"\n          type=\"error\"\n          :closable=\"false\"\n        />\n      </div>\n      \n      <div v-else class=\"question-content\">\n        <div class=\"left-section\">\n          <el-card class=\"question-description-card\">\n            <!-- 根据平台选择不同的渲染方式 -->\n            <div v-if=\"question.oj_platform === 'leetcode'\" v-html=\"compiledHtml\" class=\"html-content\"></div>\n            <div v-else v-html=\"compiledMarkdown\" class=\"markdown-content\"></div>\n          </el-card>\n        </div>\n        \n        <div class=\"right-section\">\n          <el-card class=\"question-info-card\">\n            <h2>{{ question.name }}</h2>\n            <div class=\"info-meta\">\n              <div>题目ID: {{ question.id }}</div>\n              <div>外部ID: {{ question.ext_question_id }}</div>\n              <div>\n                平台: \n                <el-tag :type=\"getPlatformTagType(question.oj_platform)\" size=\"small\">\n                  {{ getPlatformName(question.oj_platform) }}\n                </el-tag>\n              </div>\n              <div>创建时间: {{ formatDate(question.created_at) }}</div>\n              <div v-if=\"question.is_deleted\" class=\"deleted-status\">\n                <el-tag type=\"danger\" effect=\"dark\">已删除</el-tag>\n              </div>\n            </div>\n            \n            <div class=\"action-buttons\">\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit\" :disabled=\"question.is_deleted\">\n                <el-icon><EditPen /></el-icon>\n                编辑\n              </el-button>\n              \n              <!-- 根据is_deleted显示不同的按钮 -->\n              <el-button \n                v-if=\"!question.is_deleted\" \n                type=\"danger\" \n                size=\"small\" \n                @click=\"handleDelete\"\n              >\n                <el-icon><Delete /></el-icon>\n                删除\n              </el-button>\n              \n              <el-button \n                v-else \n                type=\"success\" \n                size=\"small\" \n                @click=\"handleRestore\"\n              >\n                <el-icon><RefreshRight /></el-icon>\n                恢复\n              </el-button>\n              \n              <el-button \n                type=\"success\" \n                size=\"small\" \n                @click=\"handleCreateSolution\" \n                :disabled=\"question.is_deleted\"\n              >\n                <el-icon><Plus /></el-icon>\n                创建题解\n              </el-button>\n            </div>\n          </el-card>\n          \n          <el-card class=\"question-tags-card\">\n            <div class=\"difficulty-section\">\n              <h3>难度级别</h3>\n              <el-tag \n                :type=\"getDifficultyTagType(question)\"\n                effect=\"dark\"\n              >\n                {{ question.difficulty }}\n              </el-tag>\n            </div>\n            \n            <div class=\"tags-section\">\n              <h3>算法标签</h3>\n              <div class=\"tags-container\">\n                <el-tag \n                  v-for=\"tag in question.algorithm_tags\" \n                  :key=\"tag\"\n                  :type=\"getTagType(tag, question.oj_platform)\"\n                  class=\"algorithm-tag\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </div>\n          </el-card>\n          \n          <!-- 可以添加更多卡片，如相关题目等 -->\n          <el-card class=\"related-questions-card\" v-if=\"false\">\n            <h3>相关题目</h3>\n            <div class=\"related-questions-list\">\n              <!-- 相关题目列表，暂不实现 -->\n            </div>\n          </el-card>\n        </div>\n      </div>\n    </main>\n\n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"确认删除\"\n      width=\"30%\"\n    >\n      <span>确定要删除题目 \"{{ question ? question.name : '' }}\" 吗？此操作不可逆。</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"processing\">确认删除</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 恢复确认对话框 -->\n    <el-dialog\n      v-model=\"restoreDialogVisible\"\n      title=\"确认恢复\"\n      width=\"30%\"\n    >\n      <span>确定要恢复题目 \"{{ question ? question.name : '' }}\" 吗？</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"restoreDialogVisible = false\">取消</el-button>\n          <el-button type=\"success\" @click=\"confirmRestore\" :loading=\"processing\">确认恢复</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { getQuestionDetail, deleteQuestion, restoreQuestion } from '@/api/question'\nimport MarkdownIt from 'markdown-it'\nimport DOMPurify from 'dompurify'\nimport { EditPen, Delete, Plus, RefreshRight } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\n\n/* global MathJax */\n\nexport default {\n  name: 'QuestionDetailView',\n  components: {\n    AppHeader,\n    EditPen,\n    Delete,\n    Plus,\n    RefreshRight\n  },\n  data() {\n    return {\n      questionId: this.$route.params.id,\n      question: null,\n      loading: true,\n      error: null,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      mathJaxLoaded: false,\n      \n      // 删除和恢复相关状态\n      deleteDialogVisible: false,\n      restoreDialogVisible: false,\n      processing: false\n    }\n  },\n  computed: {\n    // 用于洛谷等平台 - Markdown 渲染\n    compiledMarkdown() {\n      if (!this.question || !this.question.content) return ''\n      \n      try {\n        const content = String(this.question.content || '')\n        const html = this.mdi.render(content)\n        return DOMPurify.sanitize(html)\n      } catch (e) {\n        console.error('Markdown处理错误:', e)\n        return '内容解析出错'\n      }\n    },\n    \n    // 用于LeetCode平台 - HTML直接渲染\n    compiledHtml() {\n      if (!this.question || !this.question.content) return ''\n      \n      try {\n        let content = String(this.question.content || '')\n        \n        // 检查是否需要HTML包装\n        if (!content.trim().startsWith('<')) {\n          // 如果内容不是以HTML标签开始，则添加基本HTML包装\n          content = `<div>${content}</div>`\n        }\n        \n        // 处理LeetCode特有的代码块格式\n        content = this.processLeetcodeHtml(content)\n        \n        // 添加示例块样式处理\n        content = this.wrapExamples(content)\n        \n        // 清洗HTML以确保安全\n        return DOMPurify.sanitize(content, {\n          USE_PROFILES: { html: true },\n          ALLOWED_TAGS: [\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'br', 'hr',\n            'ol', 'ul', 'li', 'pre', 'code', 'blockquote',\n            'table', 'thead', 'tbody', 'tr', 'th', 'td',\n            'strong', 'em', 'b', 'i', 'u', 'strike', 's',\n            'a', 'img', 'span', 'div', 'section', 'article',\n            'meta'\n          ],\n          ALLOWED_ATTR: [\n            'href', 'name', 'target', 'src', 'alt', 'class', 'id',\n            'width', 'height', 'style', 'charset', 'content'\n          ]\n        })\n      } catch (e) {\n        console.error('HTML处理错误:', e)\n        return '内容解析出错'\n      }\n    }\n  },\n  watch: {\n    // 当内容变化时更新MathJax渲染\n    question: {\n      handler() {\n        this.$nextTick(() => this.renderMathJax())\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.fetchQuestionDetail()\n    this.initMathJax()\n  },\n  methods: {\n    // 编辑按钮处理\n    handleEdit() {\n      if (!this.question || this.question.is_deleted) return\n      // 跳转到更新题目页面\n      this.$router.push(`/questions/update/${this.question.id}`)\n    },\n    \n    // 删除按钮处理\n    handleDelete() {\n      if (!this.question || this.question.is_deleted) return\n      this.deleteDialogVisible = true\n    },\n    \n    // 恢复按钮处理\n    handleRestore() {\n      if (!this.question || !this.question.is_deleted) return\n      this.restoreDialogVisible = true\n    },\n    \n    // 确认删除\n    async confirmDelete() {\n      if (!this.question) return\n      \n      this.processing = true\n      try {\n        await deleteQuestion({ id: this.question.id })\n        \n        ElMessage({\n          type: 'success',\n          message: '题目删除成功'\n        })\n        \n        // 关闭对话框\n        this.deleteDialogVisible = false\n        \n        // 刷新数据\n        this.fetchQuestionDetail()\n      } catch (error) {\n        console.error('删除题目失败:', error)\n        ElMessage({\n          type: 'error',\n          message: '删除题目失败: ' + (error.message || '未知错误')\n        })\n      } finally {\n        this.processing = false\n      }\n    },\n    \n    // 确认恢复\n    async confirmRestore() {\n      if (!this.question) return\n      \n      this.processing = true\n      try {\n        await restoreQuestion({ id: this.question.id })\n        \n        ElMessage({\n          type: 'success',\n          message: '题目恢复成功'\n        })\n        \n        // 关闭对话框\n        this.restoreDialogVisible = false\n        \n        // 刷新数据\n        this.fetchQuestionDetail()\n      } catch (error) {\n        console.error('恢复题目失败:', error)\n        ElMessage({\n          type: 'error',\n          message: '恢复题目失败: ' + (error.message || '未知错误')\n        })\n      } finally {\n        this.processing = false\n      }\n    },\n    \n    // 创建题解按钮处理\n    handleCreateSolution() {\n      if (!this.question || this.question.is_deleted) return\n      // 跳转到创建题解页面，传递题目ID\n      this.$router.push(`/create/solution?question_id=${this.question.id}`)\n    },\n    \n    // 处理LeetCode HTML内容\n    processLeetcodeHtml(content) {\n      try {\n        // 检查内容类型\n        if (content.includes('\\\\n') || content.includes('&lt;') || content.includes('&gt;')) {\n          // 这是LeetCode转义后的文本，需要先转换\n          content = this.convertLeetcodeEscapedContent(content)\n        }\n        \n        // 创建临时DOM元素来处理HTML\n        const tempDiv = document.createElement('div')\n        tempDiv.innerHTML = content\n        \n        // 确保所有代码块都有正确的样式\n        const preTags = tempDiv.querySelectorAll('pre')\n        preTags.forEach(preTag => {\n          // 添加类名以确保正确样式\n          preTag.classList.add('leetcode-code-block')\n          \n          // 处理内部的code标签\n          const codeTag = preTag.querySelector('code')\n          if (codeTag) {\n            // 如果没有语言类，添加一个默认类\n            if (!codeTag.className.includes('language-')) {\n              codeTag.classList.add('language-plain')\n            }\n          }\n        })\n        \n        // 确保在表格外添加包装以提高可滚动性\n        const tables = tempDiv.querySelectorAll('table')\n        tables.forEach(table => {\n          const wrapper = document.createElement('div')\n          wrapper.className = 'table-responsive'\n          table.parentNode.insertBefore(wrapper, table)\n          wrapper.appendChild(table)\n        })\n        \n        // 处理示例中的加粗内容\n        const boldPatterns = tempDiv.querySelectorAll('*:not(strong):not(b)')\n        boldPatterns.forEach(el => {\n          const text = el.innerHTML\n          if (text && typeof text === 'string') {\n            // 查找并替换 **文本** 格式为 <strong>文本</strong>\n            if (text.includes('**')) {\n              el.innerHTML = text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            }\n          }\n        })\n        \n        // 为LeetCode内容添加meta标签，指示渲染模式\n        const metaTag = document.createElement('meta')\n        metaTag.setAttribute('name', 'rendering-mode')\n        metaTag.setAttribute('content', 'leetcode-html')\n        tempDiv.insertBefore(metaTag, tempDiv.firstChild)\n        \n        return tempDiv.innerHTML\n      } catch (error) {\n        console.error('处理LeetCode HTML时出错:', error)\n        return content // 出错时返回原始内容\n      }\n    },\n    \n    // 转换LeetCode转义的内容为格式化HTML\n    convertLeetcodeEscapedContent(content) {\n      // 处理转义字符\n      content = content\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&nbsp;/g, ' ')\n        .replace(/&amp;/g, '&')\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\")\n      \n      // 处理换行符 \\n 转为实际的HTML换行\n      content = content.replace(/\\\\n/g, '<br>')\n      \n      // 处理制表符\n      content = content.replace(/\\\\t/g, '&emsp;&emsp;')\n      \n      // 如果有空行，添加段落标签以保持间距\n      content = content\n        .replace(/(<br>){2,}/g, '</p><p>')  // 多个连续换行符转为段落\n        .replace(/<br>/g, '<br>\\n')  // 单个换行符后添加实际换行符以改善源码可读性\n      \n      // 处理示例部分的格式\n      content = content\n        .replace(/示例 (\\d+):/g, '<h3>示例 $1</h3>')\n        .replace(/输入: /g, '<strong>输入</strong>: ')\n        .replace(/输出: /g, '<strong>输出</strong>: ')\n        .replace(/解释: /g, '<strong>解释</strong>: ')\n      \n      // 处理提示/注意部分\n      content = content.replace(/提示:|注意:/g, '<h3>$&</h3>')\n      \n      // 确保内容被包裹在段落标签中\n      if (!content.startsWith('<') || !['<p', '<div', '<h'].includes(content.substring(0, 2))) {\n        content = '<p>' + content + '</p>'\n      }\n      \n      return content\n    },\n    \n    // 包装示例部分为特殊的样式块\n    wrapExamples(content) {\n      try {\n        const tempDiv = document.createElement('div')\n        tempDiv.innerHTML = content\n        \n        // 查找所有示例标题\n        const exampleHeadings = tempDiv.querySelectorAll('h3')\n        exampleHeadings.forEach(heading => {\n          if (heading.textContent.includes('示例')) {\n            // 找到包含此示例的所有内容\n            let exampleContent = []\n            let currentNode = heading.nextElementSibling\n            \n            // 收集直到下一个标题或某个终止条件的所有内容\n            while (currentNode && \n                  (currentNode.tagName !== 'H3' && \n                   !currentNode.textContent.includes('提示') && \n                   !currentNode.textContent.includes('注意'))) {\n              exampleContent.push(currentNode.cloneNode(true))\n              currentNode = currentNode.nextElementSibling\n            }\n            \n            // 创建示例块容器\n            const exampleBlock = document.createElement('div')\n            exampleBlock.className = 'example-block'\n            \n            // 添加标题和内容\n            exampleBlock.appendChild(heading.cloneNode(true))\n            exampleContent.forEach(node => {\n              exampleBlock.appendChild(node)\n            })\n            \n            // 替换原始内容\n            heading.parentNode.insertBefore(exampleBlock, heading)\n            \n            // 移除原始元素\n            heading.remove()\n            exampleContent.forEach(node => {\n              const originalNode = tempDiv.querySelector(`*:nth-child(${Array.from(tempDiv.children).indexOf(node) + 1})`)\n              if (originalNode) {\n                originalNode.remove()\n              }\n            })\n          }\n        })\n        \n        return tempDiv.innerHTML\n      } catch (error) {\n        console.error('包装示例部分时出错:', error)\n        return content // 出错时返回原始内容\n      }\n    },\n    \n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise && this.mathJaxLoaded) {\n        MathJax.typesetPromise()\n      }\n    },\n    \n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true\n        return\n      }\n\n      // 配置MathJax\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady()\n            this.mathJaxLoaded = true\n            this.$nextTick(() => this.renderMathJax())\n          }\n        }\n      }\n\n      // 加载MathJax脚本\n      const script = document.createElement('script')\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n      script.async = true\n      script.onload = () => {\n        this.mathJaxLoaded = true\n      }\n      document.head.appendChild(script)\n    },\n    \n    async fetchQuestionDetail() {\n      this.loading = true\n      this.error = null\n      \n      try {\n        const response = await getQuestionDetail(this.questionId)\n        this.question = response.data\n        \n        // 确保算法标签是数组\n        if (typeof this.question.algorithm_tags === 'string') {\n          this.question.algorithm_tags = this.question.algorithm_tags\n            .split(',')\n            .map(tag => tag.trim())\n            .filter(tag => tag.length > 0)\n        }\n      } catch (error) {\n        console.error('获取题目详情失败:', error)\n        this.error = '获取题目详情失败: ' + (error.message || '未知错误')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 平台相关方法\n    getPlatformName(platform) {\n      const platforms = {\n        'luogu': '洛谷',\n        'leetcode': 'LeetCode',\n        // 可以添加更多平台\n      }\n      return platforms[platform] || platform\n    },\n    \n    // 平台标签样式\n    getPlatformTagType(platform) {\n      return {\n        luogu: 'success',\n        leetcode: 'warning'\n      }[platform] || 'info'\n    },\n    \n    // 日期格式化\n    formatDate(dateString) {\n      if (!dateString) return ''\n      \n      const date = new Date(dateString)\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    },\n    \n    // 难度标签样式\n    getDifficultyTagType(row) {\n      if (row.oj_platform === 'luogu') {\n        const levelMap = {\n          '入门': 'info',\n          '普及-': 'success',\n          '普及/提高-': 'success',\n          '普及+/提高': 'warning',\n          '提高+/省选-': 'danger',\n          '省选/NOI-': 'danger',\n          'NOI/NOI+': 'danger',\n          'CTSC': 'danger'\n        }\n        return levelMap[row.difficulty] || 'info'\n      }\n      \n      // LeetCode难度\n      return {\n        '简单': 'success',\n        '中等': 'warning',\n        '困难': 'danger'\n      }[row.difficulty] || 'info'\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    },\n    \n    // 获取标签名称\n    getTagName(tag) {\n      // 洛谷标签去掉前缀\n      const parts = tag.split('_')\n      if (parts.length > 1) {\n        return parts.slice(1).join('_')\n      }\n      return tag\n    },\n    \n    // 生成题目链接\n    generateOjLink(row) {\n      const baseUrls = {\n        luogu: `https://www.luogu.com.cn/problem/${row.ext_question_id}`,\n        leetcode: `https://leetcode.cn/problems/${row.ext_question_id}/`\n      }\n      return baseUrls[row.oj_platform] || '#'\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 基础布局优化 */\n.question-detail-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n}\n\n.page-container {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n/* 加载状态优化 */\n.loading-container {\n  padding: 3rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 错误状态优化 */\n.error-container {\n  padding: 2rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 主内容区网格布局 */\n.question-content {\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 340px;\n  gap: 2rem;\n  align-items: start;\n}\n\n/* 左侧题目内容区 */\n.left-section {\n  position: sticky;\n  top: 1rem;\n}\n\n/* 右侧信息卡片区 */\n.right-section {\n  display: grid;\n  gap: 1.5rem;\n  position: sticky;\n  top: 1rem;\n  align-self: start;\n}\n\n/* 卡片通用样式 */\n.el-card {\n  border-radius: 12px;\n  border: none;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n  margin-bottom: 1.5rem;\n}\n\n.el-card:hover {\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n/* 题目描述卡片 */\n.question-description-card {\n  padding: 2rem;\n  background: white;\n}\n\n/* 题目信息卡片 */\n.question-info-card {\n  padding: 1.5rem;\n}\n\n.question-info-card h2 {\n  font-size: 1.4rem;\n  color: #2d3748;\n  margin-bottom: 1rem;\n  font-weight: 600;\n  line-height: 1.3;\n}\n\n.info-meta {\n  display: grid;\n  gap: 0.8rem;\n  color: #4a5568;\n  font-size: 0.95rem;\n  margin: 1.5rem 0;\n}\n\n.info-meta div {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n/* 标签卡片 */\n.question-tags-card {\n  padding: 1.5rem;\n}\n\n.difficulty-section,\n.tags-section {\n  margin-bottom: 1.5rem;\n}\n\n.difficulty-section h3,\n.tags-section h3 {\n  font-size: 1.1rem;\n  color: #2d3748;\n  margin-bottom: 0.8rem;\n  font-weight: 500;\n}\n\n/* 操作按钮组 */\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n.action-buttons .el-button {\n  flex: 1 0 auto;\n  min-width: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: all 0.3s ease;\n}\n\n/* 标签容器 */\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.6rem;\n}\n\n.algorithm-tag {\n  transition: all 0.3s ease;\n  margin: 0;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 内容渲染样式优化 */\n.markdown-content,\n.html-content {\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n  color: #2d3748;\n  line-height: 1.7;\n  font-size: 1rem;\n}\n\n/* 标题样式 */\n.markdown-content :deep(h1),\n.markdown-content :deep(h2),\n.markdown-content :deep(h3),\n.html-content :deep(h1),\n.html-content :deep(h2),\n.html-content :deep(h3) {\n  color: #1a202c;\n  font-weight: 600;\n  margin: 1.8rem 0 1rem;\n  scroll-margin-top: 80px; /* 为锚点跳转留出空间 */\n}\n\n.markdown-content :deep(h1),\n.html-content :deep(h1) {\n  font-size: 1.8rem;\n  border-bottom: 1px solid #e2e8f0;\n  padding-bottom: 0.5rem;\n}\n\n.markdown-content :deep(h2),\n.html-content :deep(h2) {\n  font-size: 1.5rem;\n}\n\n.markdown-content :deep(h3),\n.html-content :deep(h3) {\n  font-size: 1.2rem;\n}\n\n/* 段落样式 */\n.markdown-content :deep(p),\n.html-content :deep(p) {\n  margin: 1.2rem 0;\n  color: #4a5568;\n}\n\n/* 代码块样式 */\n.markdown-content :deep(pre),\n.html-content :deep(pre) {\n  background: #1e293b;\n  border-radius: 8px;\n  padding: 1.2rem;\n  margin: 1.5rem 0;\n  overflow-x: auto;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(code),\n.html-content :deep(code) {\n  font-family: 'Fira Code', 'SFMono-Regular', Consolas, monospace;\n  background: transparent;\n  color: #f8fafc;\n  padding: 0;\n  font-size: 0.9em;\n}\n\n/* 行内代码 */\n.markdown-content :deep(p > code),\n.html-content :deep(p > code) {\n  background: #edf2f7;\n  color: #c53030;\n  padding: 0.2em 0.4em;\n  border-radius: 4px;\n  font-size: 0.9em;\n}\n\n/* 引用块 */\n.markdown-content :deep(blockquote),\n.html-content :deep(blockquote) {\n  border-left: 4px solid #4299e1;\n  background: #ebf8ff;\n  color: #2b6cb0;\n  padding: 1rem 1.5rem;\n  margin: 1.5rem 0;\n  border-radius: 0 4px 4px 0;\n}\n\n/* 表格样式 */\n.markdown-content :deep(table),\n.html-content :deep(table) {\n  width: 100%;\n  margin: 1.5rem 0;\n  border-collapse: collapse;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(th),\n.markdown-content :deep(td),\n.html-content :deep(th),\n.html-content :deep(td) {\n  border: 1px solid #e2e8f0;\n  padding: 0.75rem 1rem;\n  text-align: left;\n}\n\n.markdown-content :deep(th),\n.html-content :deep(th) {\n  background: #f7fafc;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n/* 列表样式 */\n.markdown-content :deep(ul),\n.markdown-content :deep(ol),\n.html-content :deep(ul),\n.html-content :deep(ol) {\n  margin: 1.5rem 0;\n  padding-left: 2rem;\n}\n\n.markdown-content :deep(li),\n.html-content :deep(li) {\n  margin: 0.5rem 0;\n  color: #4a5568;\n}\n\n/* 链接样式 */\n.markdown-content :deep(a),\n.html-content :deep(a) {\n  color: #4299e1;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.markdown-content :deep(a:hover),\n.html-content :deep(a:hover) {\n  color: #2b6cb0;\n  text-decoration: underline;\n}\n\n/* 图片样式 */\n.markdown-content :deep(img),\n.html-content :deep(img) {\n  max-width: 100%;\n  height: auto;\n  border-radius: 6px;\n  margin: 1.5rem auto;\n  display: block;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n/* LeetCode 特定样式 */\n.html-content :deep(.example-block) {\n  background: #f0f9ff;\n  border-left: 3px solid #63b3ed;\n  padding: 1.2rem;\n  margin: 1.8rem 0;\n  border-radius: 0 6px 6px 0;\n}\n\n.html-content :deep(.example-block h3) {\n  margin-top: 0;\n  color: #2c5282;\n}\n\n.html-content :deep(.table-responsive) {\n  overflow-x: auto;\n  margin: 1.8rem 0;\n  border-radius: 6px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n/* 对话框样式优化 */\n.el-dialog {\n  border-radius: 12px;\n  max-width: 500px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 1024px) {\n  .question-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .right-section {\n    position: static;\n  }\n}\n\n@media (max-width: 768px) {\n  .page-container {\n    padding: 1rem;\n  }\n  \n  .action-buttons {\n    /* 保持水平排列 */\n    display: flex;\n    flex-wrap: wrap;\n  }\n  \n  .question-description-card,\n  .question-info-card,\n  .question-tags-card {\n    padding: 1.2rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .action-buttons {\n    flex-direction: column;\n  }\n  \n  .action-buttons .el-button {\n    width: 100%;\n  }\n}\n\n/* 动画效果 */\n.el-card,\n.el-button,\n.el-tag {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f5f9;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #cbd5e0;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a0aec0;\n}\n</style>","import { render } from \"./QuestionDetailView.vue?vue&type=template&id=4373e632&scoped=true\"\nimport script from \"./QuestionDetailView.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionDetailView.vue?vue&type=script&lang=js\"\n\nimport \"./QuestionDetailView.vue?vue&type=style&index=0&id=4373e632&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4373e632\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","$data","loading","_hoisted_3","_component_el_skeleton","rows","animated","error","_hoisted_4","_component_el_alert","title","type","closable","_hoisted_5","_hoisted_6","_component_el_card","default","_withCtx","question","oj_platform","innerHTML","$options","compiledHtml","_hoisted_7","compiledMarkdown","_hoisted_8","_","_hoisted_9","_toDisplayString","name","_hoisted_10","id","ext_question_id","_createTextVNode","_component_el_tag","getPlatformTagType","size","getPlatformName","formatDate","created_at","is_deleted","_hoisted_11","effect","_cache","_createCommentVNode","_hoisted_12","_component_el_button","onClick","handleEdit","disabled","_component_el_icon","_component_EditPen","_createBlock","handleRestore","_component_RefreshRight","handleDelete","_component_Delete","handleCreateSolution","_component_Plus","_hoisted_13","getDifficultyTagType","difficulty","_hoisted_14","_hoisted_15","_Fragment","_renderList","algorithm_tags","tag","getTagType","getTagName","_component_el_dialog","modelValue","deleteDialogVisible","$event","width","footer","_hoisted_16","confirmDelete","processing","restoreDialogVisible","_hoisted_17","confirmRestore","components","AppHeader","EditPen","Delete","Plus","RefreshRight","data","questionId","this","$route","params","mdi","MarkdownIt","html","linkify","typographer","mathJaxLoaded","computed","content","String","render","DOMPurify","sanitize","e","console","trim","startsWith","processLeetcodeHtml","wrapExamples","USE_PROFILES","ALLOWED_TAGS","ALLOWED_ATTR","watch","handler","$nextTick","renderMathJax","deep","mounted","fetchQuestionDetail","initMathJax","methods","$router","push","deleteQuestion","ElMessage","message","restoreQuestion","includes","convertLeetcodeEscapedContent","tempDiv","document","createElement","preTags","querySelectorAll","forEach","preTag","classList","add","codeTag","querySelector","className","tables","table","wrapper","parentNode","insertBefore","appendChild","boldPatterns","el","text","replace","metaTag","setAttribute","firstChild","substring","exampleHeadings","heading","textContent","exampleContent","currentNode","nextElementSibling","tagName","cloneNode","exampleBlock","node","remove","originalNode","Array","from","children","indexOf","MathJax","typesetPromise","window","tex","inlineMath","displayMath","processEscapes","options","skipHtmlTags","startup","ready","defaultReady","script","src","async","onload","head","response","getQuestionDetail","split","map","filter","length","platform","platforms","luogu","leetcode","dateString","date","Date","toLocaleString","year","month","day","hour","minute","row","levelMap","prefix","parts","slice","join","generateOjLink","baseUrls","__exports__"],"sourceRoot":""}