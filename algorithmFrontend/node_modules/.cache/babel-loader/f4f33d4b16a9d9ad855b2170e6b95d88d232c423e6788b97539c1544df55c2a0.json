{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, TransitionGroup as _TransitionGroup } from \"vue\";\nconst _hoisted_1 = {\n  class: \"solutions-view\"\n};\nconst _hoisted_2 = {\n  class: \"page-container\"\n};\nconst _hoisted_3 = {\n  class: \"solutions-header\"\n};\nconst _hoisted_4 = {\n  class: \"filter-container\"\n};\nconst _hoisted_5 = {\n  class: \"search-box\"\n};\nconst _hoisted_6 = {\n  class: \"language-filter\"\n};\nconst _hoisted_7 = {\n  class: \"content-area\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"empty-state\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"solution-card-header\"\n};\nconst _hoisted_12 = {\n  class: \"header-left-section\"\n};\nconst _hoisted_13 = {\n  class: \"problem-id-highlight\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"platform-tag\"\n};\nconst _hoisted_15 = {\n  class: \"solution-card-content\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  key: 0\n};\nconst _hoisted_20 = {\n  key: 1\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"tags-container\"\n};\nconst _hoisted_22 = {\n  class: \"tag-container\"\n};\nconst _hoisted_23 = {\n  class: \"solution-preview\"\n};\nconst _hoisted_24 = {\n  class: \"solution-card-footer\"\n};\nconst _hoisted_25 = {\n  class: \"solution-meta\"\n};\nconst _hoisted_26 = {\n  class: \"solution-date\"\n};\nconst _hoisted_27 = {\n  key: 3,\n  class: \"pagination-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"草稿回收站\", -1)), _cache[5] || (_cache[5] = _createElementVNode(\"p\", {\n    class: \"solutions-subtitle\"\n  }, \"管理你的解题思路草稿，随时继续编辑\", -1)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n    modelValue: $data.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"输入题目ID进行搜索\",\n    \"prefix-icon\": \"el-icon-search\",\n    clearable: \"\",\n    onKeyup: _withKeys($options.handleSearch, [\"enter\"])\n  }, {\n    append: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: $options.handleSearch\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"搜索\")])),\n      _: 1\n    }, 8, [\"onClick\"])]),\n    _: 1\n  }, 8, [\"modelValue\", \"onKeyup\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_select, {\n    modelValue: $data.selectedLanguage,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedLanguage = $event),\n    placeholder: \"编程语言筛选\",\n    clearable: \"\",\n    onChange: $options.handleLanguageChange\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.languageOptions, lang => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: lang.value,\n        label: lang.label,\n        value: lang.value\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"span\", {\n          class: _normalizeClass([\"language-icon\", 'lang-' + lang.value.toLowerCase()])\n        }, null, 2), _createTextVNode(\" \" + _toDisplayString(lang.label), 1)]),\n        _: 2\n      }, 1032, [\"label\", \"value\"]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"modelValue\", \"onChange\"])])])]), _createElementVNode(\"div\", _hoisted_7, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_skeleton, {\n    rows: 10,\n    animated: \"\"\n  })])) : $data.solutions.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"empty-icon\"\n  }, [_createElementVNode(\"i\", {\n    class: \"el-icon-document\"\n  })], -1)), _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"暂无草稿\", -1)), _createElementVNode(\"p\", null, _toDisplayString($options.getEmptyStateMessage()), 1), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.resetFilters\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"清除筛选条件\")])),\n    _: 1\n  }, 8, [\"onClick\"])])) : (_openBlock(), _createBlock(_TransitionGroup, {\n    key: 2,\n    name: \"solution-list\",\n    tag: \"div\",\n    class: \"solutions-grid\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.solutions, solution => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: solution.id,\n        class: \"solution-card\",\n        onClick: $event => $options.viewDraftDetail(solution.id)\n      }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, \" #\" + _toDisplayString(solution.question_id), 1), $data.questionDetails[solution.question_id]?.oj_platform ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createVNode(_component_el_tag, {\n        type: $options.getPlatformTagType($data.questionDetails[solution.question_id]?.oj_platform),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getPlatformName($data.questionDetails[solution.question_id]?.oj_platform)), 1)]),\n        _: 2\n      }, 1032, [\"type\"])])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"language-tag\", 'lang-bg-' + $options.getNormalizedLanguage(solution.language)])\n      }, _toDisplayString($options.getDisplayLanguage(solution.language)), 3)]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"h3\", {\n        class: \"solution-title\",\n        onClick: _withModifiers($event => $options.goToProblem(solution.question_id), [\"stop\"])\n      }, [$data.questionDetails[solution.question_id] ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, _toDisplayString($data.questionDetails[solution.question_id].name || `题目 #${solution.question_id}`), 1)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_18, [$data.detailsLoading[solution.question_id] ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"加载中...\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_20, \"题目 #\" + _toDisplayString(solution.question_id), 1))])), _cache[9] || (_cache[9] = _createElementVNode(\"i\", {\n        class: \"el-icon-link\"\n      }, null, -1))], 8, _hoisted_16), $data.questionDetails[solution.question_id]?.algorithm_tags?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getFilteredTags($data.questionDetails[solution.question_id].algorithm_tags, $data.questionDetails[solution.question_id].oj_platform), tag => {\n        return _openBlock(), _createBlock(_component_el_tag, {\n          key: tag,\n          type: $options.getTagType(tag, $data.questionDetails[solution.question_id].oj_platform),\n          size: \"small\",\n          class: \"tag-item\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n          _: 2\n        }, 1032, [\"type\"]);\n      }), 128))])])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_23, _toDisplayString($options.getSolutionPreview(solution.content_text)), 1)]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", _hoisted_26, [_cache[10] || (_cache[10] = _createElementVNode(\"i\", {\n        class: \"el-icon-time\"\n      }, null, -1)), _createTextVNode(\" \" + _toDisplayString($options.formatDate(solution.updated_at || solution.created_at)), 1)])]), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"text\"\n      }, {\n        default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"查看全文\")])),\n        _: 1\n      })])], 8, _hoisted_10);\n    }), 128))]),\n    _: 1\n  })), $data.total > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createVNode(_component_el_pagination, {\n    background: \"\",\n    layout: \"prev, pager, next, jumper\",\n    total: $data.total,\n    \"page-size\": $data.pageSize,\n    \"current-page\": $data.currentPage,\n    \"onUpdate:currentPage\": _cache[2] || (_cache[2] = $event => $data.currentPage = $event),\n    onCurrentChange: $options.handlePageChange\n  }, null, 8, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])) : _createCommentVNode(\"\", true)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_el_input","modelValue","$data","searchQuery","_cache","$event","placeholder","clearable","onKeyup","_withKeys","$options","handleSearch","append","_withCtx","_component_el_button","onClick","default","_createTextVNode","_","_hoisted_6","_component_el_select","selectedLanguage","onChange","handleLanguageChange","_Fragment","_renderList","languageOptions","lang","_createBlock","_component_el_option","value","label","_normalizeClass","toLowerCase","_toDisplayString","_hoisted_7","loading","_hoisted_8","_component_el_skeleton","rows","animated","solutions","length","_hoisted_9","getEmptyStateMessage","type","resetFilters","_TransitionGroup","name","tag","solution","id","viewDraftDetail","_hoisted_11","_hoisted_12","_hoisted_13","question_id","questionDetails","oj_platform","_hoisted_14","_component_el_tag","getPlatformTagType","size","getPlatformName","_createCommentVNode","getNormalizedLanguage","language","getDisplayLanguage","_hoisted_15","_withModifiers","goToProblem","_hoisted_17","_hoisted_18","detailsLoading","_hoisted_19","_hoisted_20","_hoisted_16","algorithm_tags","_hoisted_21","_hoisted_22","getFilteredTags","getTagType","getTagName","_hoisted_23","getSolutionPreview","content_text","_hoisted_24","_hoisted_25","_hoisted_26","formatDate","updated_at","created_at","_hoisted_10","total","_hoisted_27","_component_el_pagination","background","layout","pageSize","currentPage","onCurrentChange","handlePageChange"],"sources":["/Users/hsd/File/Code/Project/AlgorithmWeb/algorithmFrontend/src/views/DraftTrashView.vue"],"sourcesContent":["<template>\n  <div class=\"solutions-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <div class=\"solutions-header\">\n        <h1>草稿回收站</h1>\n        <p class=\"solutions-subtitle\">管理你的解题思路草稿，随时继续编辑</p>\n        \n        <!-- 搜索和筛选区域 -->\n        <div class=\"filter-container\">\n          <div class=\"search-box\">\n            <el-input\n              v-model=\"searchQuery\"\n              placeholder=\"输入题目ID进行搜索\"\n              prefix-icon=\"el-icon-search\"\n              clearable\n              @keyup.enter=\"handleSearch\"\n            >\n              <template #append>\n                <el-button @click=\"handleSearch\">搜索</el-button>\n              </template>\n            </el-input>\n          </div>\n          \n          <div class=\"language-filter\">\n            <el-select\n              v-model=\"selectedLanguage\"\n              placeholder=\"编程语言筛选\"\n              clearable\n              @change=\"handleLanguageChange\"\n            >\n              <el-option\n                v-for=\"lang in languageOptions\"\n                :key=\"lang.value\"\n                :label=\"lang.label\"\n                :value=\"lang.value\"\n              >\n                <span class=\"language-icon\" :class=\"'lang-' + lang.value.toLowerCase()\"></span>\n                {{ lang.label }}\n              </el-option>\n            </el-select>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 内容展示区 -->\n      <div class=\"content-area\">\n        <div v-if=\"loading\" class=\"loading-container\">\n          <el-skeleton :rows=\"10\" animated />\n        </div>\n        \n        <div v-else-if=\"solutions.length === 0\" class=\"empty-state\">\n          <div class=\"empty-icon\">\n            <i class=\"el-icon-document\"></i>\n          </div>\n          <h3>暂无草稿</h3>\n          <p>{{ getEmptyStateMessage() }}</p>\n          <el-button type=\"primary\" @click=\"resetFilters\">清除筛选条件</el-button>\n        </div>\n        \n        <transition-group \n          name=\"solution-list\" \n          tag=\"div\" \n          class=\"solutions-grid\"\n          v-else\n        >\n          <div \n            v-for=\"solution in solutions\" \n            :key=\"solution.id\" \n            class=\"solution-card\"\n            @click=\"viewDraftDetail(solution.id)\"\n          >\n            <div class=\"solution-card-header\">\n              <div class=\"header-left-section\">\n                <div class=\"problem-id-highlight\">\n                  #{{ solution.question_id }}\n                </div>\n                <div v-if=\"questionDetails[solution.question_id]?.oj_platform\" class=\"platform-tag\">\n                  <el-tag \n                    :type=\"getPlatformTagType(questionDetails[solution.question_id]?.oj_platform)\" \n                    size=\"small\"\n                  >\n                    {{ getPlatformName(questionDetails[solution.question_id]?.oj_platform) }}\n                  </el-tag>\n                </div>\n              </div>\n              <div class=\"language-tag\" :class=\"'lang-bg-' + getNormalizedLanguage(solution.language)\">\n                {{ getDisplayLanguage(solution.language) }}\n              </div>\n            </div>\n            \n            <div class=\"solution-card-content\">\n              <h3 class=\"solution-title\" @click.stop=\"goToProblem(solution.question_id)\">\n                <span v-if=\"questionDetails[solution.question_id]\">\n                  {{ questionDetails[solution.question_id].name || `题目 #${solution.question_id}` }}\n                </span>\n                <span v-else>\n                  <span v-if=\"detailsLoading[solution.question_id]\">加载中...</span>\n                  <span v-else>题目 #{{ solution.question_id }}</span>\n                </span>\n                <i class=\"el-icon-link\"></i>\n              </h3>\n              \n              <!-- 算法标签区域 -->\n              <div class=\"tags-container\" v-if=\"questionDetails[solution.question_id]?.algorithm_tags?.length\">\n                <div class=\"tag-container\">\n                  <el-tag\n                    v-for=\"tag in getFilteredTags(\n                      questionDetails[solution.question_id].algorithm_tags,\n                      questionDetails[solution.question_id].oj_platform\n                    )\"\n                    :key=\"tag\"\n                    :type=\"getTagType(tag, questionDetails[solution.question_id].oj_platform)\"\n                    size=\"small\"\n                    class=\"tag-item\"\n                  >\n                    {{ getTagName(tag) }}\n                  </el-tag>\n                </div>\n              </div>\n              \n              <div class=\"solution-preview\">\n                {{ getSolutionPreview(solution.content_text) }}\n              </div>\n            </div>\n            \n            <div class=\"solution-card-footer\">\n              <div class=\"solution-meta\">\n                <span class=\"solution-date\">\n                  <i class=\"el-icon-time\"></i>\n                  {{ formatDate(solution.updated_at || solution.created_at) }}\n                </span>\n              </div>\n              <el-button size=\"small\" type=\"text\">查看全文</el-button>\n            </div>\n          </div>\n        </transition-group>\n        \n        <!-- 分页控件 -->\n        <div class=\"pagination-container\" v-if=\"total > 0\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next, jumper\"\n            :total=\"total\"\n            :page-size=\"pageSize\"\n            v-model:current-page=\"currentPage\"\n            @current-change=\"handlePageChange\"\n          ></el-pagination>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { getDraftTrashList } from '@/api/solution'\nimport { getQuestionDetail } from '@/api/question'\nimport { LeetcodeTags } from '@/constants/tags'\nexport default {\n  name: 'DraftView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      solutions: [],\n      loading: true,\n      total: 0,\n      currentPage: 1,\n      pageSize: 12, // 每页显示的题解数量\n      searchQuery: '',\n      selectedLanguage: '',\n      questionDetails: {}, // 存储题目详细信息\n      detailsLoading: {}, // 跟踪各题目详情的加载状态\n      \n      // 预设语言选项\n      languageOptions: [\n        { value: 'Python', label: 'Python' },\n        { value: 'Java', label: 'Java' },\n        { value: 'C++', label: 'C++' },\n        { value: 'JavaScript', label: 'JavaScript' },\n        { value: 'Go', label: 'Go' },\n        { value: 'Rust', label: 'Rust' },\n        { value: 'C#', label: 'C#' },\n        { value: 'Ruby', label: 'Ruby' },\n        { value: 'Swift', label: 'Swift' },\n        { value: 'Kotlin', label: 'Kotlin' }\n      ],\n      \n      // 语言名称到API参数的映射\n      languageParamMap: {\n        'c++': 'cpp',\n        'c#': 'csharp'\n      },\n      \n      // 语言API参数到显示名称的映射\n      languageDisplayMap: {\n        'cpp': 'C++',\n        'csharp': 'C#'\n      },\n      \n      // 平台映射\n      platformMap: {\n        luogu: '洛谷',\n        leetcode: 'LeetCode'\n      },\n      \n      // LeetCode标签列表\n      leetcodeTags : LeetcodeTags\n    }\n  },\n  created() {\n    this.fetchSolutions()\n  },\n  methods: {\n    // 获取题解列表\n    async fetchSolutions() {\n      this.loading = true\n      \n      try {\n        // 构建查询参数\n        const params = {\n          page: this.currentPage\n        }\n        \n        // 仅当有值时才添加可选参数\n        if (this.searchQuery.trim()) {\n          params.question_id = this.searchQuery.trim()\n        }\n        \n        // 处理语言参数，转换为小写并应用映射\n        if (this.selectedLanguage) {\n          const languageParam = this.selectedLanguage.toLowerCase()\n          // 检查是否需要特殊映射（如 c++ -> cpp）\n          params.language = this.languageParamMap[languageParam] || languageParam\n        }\n        \n        // 调用API\n        const response = await getDraftTrashList(params)\n        \n        // 检查响应格式\n        if (response.data) {\n          // 直接使用response.data作为数据源，适应不同的API响应格式\n          if (Array.isArray(response.data)) {\n            // 如果是数组，表示直接返回了项目列表\n            this.solutions = response.data\n            this.total = response.data.length\n          } else if (response.data.code === 200 && response.data.data) {\n            // 如果是带有code的标准格式\n            if (Array.isArray(response.data.data)) {\n              this.solutions = response.data.data\n              this.total = response.data.data.length\n            } else if (response.data.data.items) {\n              this.solutions = response.data.data.items || []\n              this.total = response.data.data.total || this.solutions.length\n            } else {\n              this.solutions = []\n              this.total = 0\n            }\n          } else {\n            // 其他情况，尝试解析各种可能的格式\n            this.solutions = response.data.items || response.data.results || response.data.data || []\n            this.total = response.data.total || response.data.count || this.solutions.length || 0\n          }\n        } else {\n          this.solutions = []\n          this.total = 0\n        }\n        \n        // 获取题目详情\n        this.fetchQuestionDetails()\n      } catch (error) {\n        this.$message.error('获取草稿列表失败: ' + (error.message || '未知错误'))\n        \n        // 在开发环境下使用模拟数据\n        if (process.env.NODE_ENV === 'development') {\n          this.useMockData()\n        } else {\n          this.solutions = []\n          this.total = 0\n        }\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 获取题目详情\n    async fetchQuestionDetails() {\n      // 获取唯一题目ID列表\n      const questionIds = [...new Set(this.solutions.map(solution => solution.question_id))]\n      \n      // 为每个题目ID获取详情\n      for (const id of questionIds) {\n        // 避免重复请求\n        if (this.questionDetails[id] || this.detailsLoading[id]) {\n          continue\n        }\n        \n        // 标记为加载中\n        this.detailsLoading[id] = true\n        \n        try {\n          const response = await getQuestionDetail(id)\n          \n          if (response.data && response.data.code === 200) {\n            // 如果返回标准格式\n            this.questionDetails[id] = response.data.data\n          } else if (response.data) {\n            // 处理其他可能的响应格式\n            this.questionDetails[id] = response.data\n          }\n        } catch (error) {\n          // 在开发模式下使用模拟数据\n          if (process.env.NODE_ENV === 'development') {\n            this.questionDetails[id] = {\n              id: id,\n              name: `模拟题目 #${id}`,\n              oj_platform: ['leetcode', 'luogu'][Math.floor(Math.random() * 2)],\n              algorithm_tags: ['数组', '动态规划', 'Algorithm_贪心', 'Source_CSP']\n            }\n          }\n        } finally {\n          this.detailsLoading[id] = false\n        }\n      }\n    },\n    \n    // 开发阶段使用模拟数据\n    useMockData() {\n      this.solutions = [\n        {\n          id: 1,\n          question_id: '101',\n          content: '# 解题思路\\n\\n这道题可以使用动态规划来解决...',\n          content_text: '解题思路\\n\\n这道题可以使用动态规划来解决，我们定义dp[i]表示到达第i个台阶的方法数，则dp[i] = dp[i-1] + dp[i-2]。边界条件是dp[1]=1, dp[2]=2...',\n          language: 'Python',\n          created_at: '2025-05-01T10:30:00Z',\n          updated_at: '2025-05-01T10:30:00Z'\n        },\n        {\n          id: 2,\n          question_id: '102',\n          content: '# 双指针解法\\n\\n使用双指针技巧，可以在O(n)时间内解决...',\n          content_text: '双指针解法\\n\\n使用双指针技巧，可以在O(n)时间内解决这个问题。首先初始化左指针left=0和右指针right=n-1，然后向中间移动...',\n          language: 'Java',\n          created_at: '2025-04-28T15:20:00Z',\n          updated_at: '2025-04-29T09:15:00Z'\n        },\n        {\n          id: 3,\n          question_id: '103',\n          content: '# 二分查找\\n\\n对于有序数组，二分查找是最优选择...',\n          content_text: '二分查找\\n\\n对于有序数组，二分查找是最优选择。时间复杂度为O(log n)，远优于线性搜索...',\n          language: 'C++',\n          created_at: '2025-04-25T20:10:00Z',\n          updated_at: '2025-04-25T20:10:00Z'\n        }\n      ]\n      this.total = this.solutions.length\n      \n      // 在开发环境中添加模拟的题目详情\n      this.questionDetails = {\n        '101': {\n          id: '101',\n          name: '爬楼梯',\n          difficulty: '简单',\n          oj_platform: 'leetcode',\n          algorithm_tags: ['动态规划', '数学', '记忆化']\n        },\n        '102': {\n          id: '102',\n          name: '两数之和',\n          difficulty: '简单',\n          oj_platform: 'leetcode',\n          algorithm_tags: ['数组', '哈希表']\n        },\n        '103': {\n          id: '103',\n          name: '二分查找',\n          difficulty: '普及-',\n          oj_platform: 'luogu',\n          algorithm_tags: ['Algorithm_二分查找', 'Source_CSP', 'Region_中国']\n        }\n      }\n    },\n    \n    // 获取规范化后的语言名称（用于CSS类名）\n    getNormalizedLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 特殊处理，比如将 'cpp' 转为 'c++'\n      const reverseMap = {\n        'cpp': 'c++',\n        'csharp': 'c#'\n      };\n      \n      return reverseMap[lowercased] || lowercased;\n    },\n    \n    // 获取显示用的语言名称\n    getDisplayLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 从特殊映射中获取显示名称\n      if (this.languageDisplayMap[lowercased]) {\n        return this.languageDisplayMap[lowercased];\n      }\n      \n      // 首字母大写\n      return language.charAt(0).toUpperCase() + language.slice(1);\n    },\n    \n    // 获取题解预览文本\n    getSolutionPreview(content) {\n      if (!content) return '无预览内容'\n      \n      // 移除Markdown标记，限制长度\n      const plainText = content\n        .replace(/#{1,6}\\s/g, '')\n        .replace(/\\*\\*|\\*|~~|`|>/g, '')\n      \n      return plainText.length > 100 \n        ? plainText.substring(0, 100) + '...' \n        : plainText\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '未知时间'\n      \n      const date = new Date(dateString)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n    },\n    \n    // 处理页面变化\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchSolutions()\n      // 滚动到页面顶部\n      window.scrollTo(0, 0)\n    },\n    \n    // 处理搜索\n    handleSearch() {\n      this.currentPage = 1 // 重置到第一页\n      this.fetchSolutions()\n    },\n    \n    // 处理语言筛选变化\n    handleLanguageChange() {\n      this.currentPage = 1 // 重置到第一页\n      this.fetchSolutions()\n    },\n    \n    // 重置所有筛选条件\n    resetFilters() {\n      this.searchQuery = ''\n      this.selectedLanguage = ''\n      this.currentPage = 1\n      this.fetchSolutions()\n    },\n    \n    // 获取空状态消息\n    getEmptyStateMessage() {\n      if (this.searchQuery && this.selectedLanguage) {\n        return `没有找到关于题目 #${this.searchQuery} 的 ${this.selectedLanguage} 语言草稿`\n      } else if (this.searchQuery) {\n        return `没有找到关于题目 #${this.searchQuery} 的草稿`\n      } else if (this.selectedLanguage) {\n        return `没有找到使用 ${this.selectedLanguage} 语言的草稿`\n      }\n      return '暂时没有任何草稿，开始编写你的第一个解题思路吧！'\n    },\n    \n    // 查看草稿详情\n    viewDraftDetail(draftId) {\n      this.$router.push(`/${draftId}/drafts`)\n    },\n    \n    // 跳转到题目页面\n    goToProblem(questionId) {\n      this.$router.push(`/${questionId}/problems`)\n    },\n    \n    // 获取平台名称\n    getPlatformName(platform) {\n      return this.platformMap[platform] || platform\n    },\n    \n    // 平台标签样式\n    getPlatformTagType(platform) {\n      return {\n        luogu: 'success',\n        leetcode: 'warning'\n      }[platform] || 'info'\n    },\n    \n    // 标签分类过滤\n    getFilteredTags(tags, platform) {\n      if (!tags) return []\n      \n      // 默认只显示少量标签，避免卡片过大\n      const maxTagsToShow = 3\n      \n      // LeetCode题目只显示算法标签\n      if (platform === 'leetcode') {\n        return tags.filter(tag => this.leetcodeTags.includes(tag)).slice(0, maxTagsToShow)\n      }\n      \n      // 洛谷题目优先显示算法标签\n      const algorithmTags = tags.filter(tag => tag.startsWith('Algorithm_'))\n      if (algorithmTags.length > 0) {\n        return algorithmTags.slice(0, maxTagsToShow)\n      }\n      \n      return tags.slice(0, maxTagsToShow)\n    },\n    \n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.leetcodeTags.includes(tag)) return tag\n      \n      // 洛谷标签去掉前缀\n      return tag.split('_').slice(1).join('_') || tag\n    },\n    \n    // 标签样式分类\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.solutions-view {\n  min-height: 100vh;\n  background-color: #f8f9fc;\n}\n\n.page-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px;\n}\n\n.solutions-header {\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.solutions-header h1 {\n  font-size: 2.5rem;\n  color: #2c3e50;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n}\n\n.solutions-subtitle {\n  color: #606f7b;\n  font-size: 1.1rem;\n  margin-bottom: 30px;\n}\n\n.filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 30px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.search-box {\n  flex: 1;\n  min-width: 280px;\n}\n\n.language-filter {\n  width: 200px;\n}\n\n.content-area {\n  position: relative;\n  min-height: 400px;\n}\n\n.loading-container {\n  padding: 20px;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 60px 20px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 60px;\n  color: #dce0e6;\n  margin-bottom: 20px;\n}\n\n.empty-state h3 {\n  font-size: 20px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n\n.empty-state p {\n  color: #909399;\n  margin-bottom: 20px;\n  max-width: 500px;\n}\n\n.solutions-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-bottom: 40px;\n}\n\n.solution-card {\n  background-color: #fff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.solution-card:hover {\n  box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.09);\n  transform: translateY(-3px);\n}\n\n.solution-card-header {\n  padding: 12px 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n/* Header layout styles */\n.header-left-section {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.problem-id-highlight {\n  background-color: #4caf50;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-weight: bold;\n  font-size: 0.9rem;\n  min-width: 40px;\n  text-align: center;\n}\n\n.platform-tag {\n  font-weight: 600;\n  color: #606266;\n  font-size: 0.9rem;\n}\n\n.language-tag {\n  padding: 2px 8px;\n  border-radius: 4px;\n  color: white;\n  font-size: 0.8rem;\n  font-weight: 500;\n}\n\n/* 不同语言的背景色 */\n.lang-bg-python {\n  background-color: #3776ab;\n}\n\n.lang-bg-java {\n  background-color: #f89820;\n}\n\n.lang-bg-c\\+\\+ {\n  background-color: #00599c;\n}\n\n.lang-bg-javascript {\n  background-color: #f7df1e;\n  color: #000;\n}\n\n.lang-bg-go {\n  background-color: #00acd7;\n}\n\n.lang-bg-rust {\n  background-color: #b7410e;\n}\n\n.lang-bg-c\\# {\n  background-color: #68217a;\n}\n\n.lang-bg-ruby {\n  background-color: #cc342d;\n}\n\n.lang-bg-swift {\n  background-color: #f05138;\n}\n\n.lang-bg-kotlin {\n  background-color: #7f52ff;\n}\n\n/* 其他语言使用默认颜色 */\n[class*=\"lang-bg-\"]:not(\n  .lang-bg-python,\n  .lang-bg-java,\n  .lang-bg-c\\+\\+,\n  .lang-bg-javascript,\n  .lang-bg-go,\n  .lang-bg-rust,\n  .lang-bg-c\\#,\n  .lang-bg-ruby,\n  .lang-bg-swift,\n  .lang-bg-kotlin\n) {\n  background-color: #909399;\n}\n\n.solution-card-content {\n  padding: 16px;\n  flex-grow: 1;\n}\n\n.solution-title {\n  font-size: 1.1rem;\n  margin: 0 0 12px;\n  color: #303133;\n  display: flex;\n  align-items: center;\n  line-height: 1.4;\n}\n\n.solution-title i {\n  margin-left: 6px;\n  font-size: 14px;\n  opacity: 0.6;\n}\n\n.solution-title:hover {\n  color: #409eff;\n}\n\n.solution-title:hover i {\n  opacity: 1;\n}\n\n/* 算法标签样式 */\n.tags-container {\n  margin-bottom: 12px;\n}\n\n.tag-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n}\n\n.tag-item {\n  transition: all 0.3s;\n  font-size: 0.7rem;\n}\n\n.solution-preview {\n  color: #606266;\n  font-size: 0.95rem;\n  line-height: 1.6;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.solution-card-footer {\n  padding: 12px 16px;\n  border-top: 1px solid #f0f0f0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.solution-meta {\n  color: #909399;\n  font-size: 0.85rem;\n}\n\n.solution-date i {\n  margin-right: 4px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n/* 语言图标 */\n.language-icon {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  vertical-align: middle;\n}\n\n/* 动画效果 */\n.solution-list-enter-active, .solution-list-move {\n  transition: all 0.5s ease;\n}\n\n.solution-list-enter {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n.solution-list-leave-active {\n  position: absolute;\n  opacity: 0;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .solutions-header h1 {\n    font-size: 2rem;\n  }\n  \n  .filter-container {\n    flex-direction: column;\n  }\n  \n  .search-box, .language-filter {\n    width: 100%;\n  }\n  \n  .solutions-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}