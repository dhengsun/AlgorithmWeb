{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport AppHeader from '@/components/AppHeader.vue';\nimport { Document } from '@element-plus/icons-vue';\nimport { extractQuestion, createQuestion, getAllTags } from '@/api/question';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\nimport { ElMessage } from 'element-plus';\nimport { LeetcodeTags } from '@/constants/tags';\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'CreateView',\n  components: {\n    AppHeader,\n    Document\n  },\n  data() {\n    return {\n      fetching: false,\n      saving: false,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      form: {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      },\n      mathJaxLoaded: false,\n      // 标签相关数据\n      selectedTags: [],\n      // 已选择的标签\n      tagSearchValue: '',\n      tagSearchLoading: false,\n      tagCategoryTitle: '',\n      // 标签数据\n      allTags: {\n        leetcode: LeetcodeTags.map(tag => ({\n          label: tag,\n          value: tag\n        })),\n        luogu: {\n          Algorithm: [],\n          Source: [],\n          Time: [],\n          Region: [],\n          Other: []\n        }\n      },\n      filteredTags: [] // 筛选后的标签\n    };\n  },\n  computed: {\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    }\n  },\n  watch: {\n    'form.content'() {\n      if (this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax());\n      }\n    }\n  },\n  mounted() {\n    this.initMathJax();\n    this.loadAllTags();\n  },\n  methods: {\n    // 获取难度对应的CSS类名\n    getDifficultyClass() {\n      const difficulty = this.form.difficulty;\n      if (!difficulty) return '';\n      if (this.form.oj_platform === 'leetcode') {\n        const classMap = {\n          '简单': 'diff-easy',\n          '中等': 'diff-medium',\n          '困难': 'diff-hard'\n        };\n        return classMap[difficulty] || '';\n      } else if (this.form.oj_platform === 'luogu') {\n        if (difficulty.includes('入门')) return 'diff-easy';\n        if (difficulty.includes('普及')) return 'diff-medium';\n        return 'diff-hard';\n      }\n      return '';\n    },\n    // 加载所有标签\n    async loadAllTags() {\n      try {\n        // LeetCode标签已从常量导入\n\n        // 加载洛谷标签\n        const res = await getAllTags();\n        if (res.data && res.data.code === 200) {\n          this.allTags.luogu = res.data.data;\n        }\n      } catch (error) {\n        console.error('加载标签失败:', error);\n        ElMessage.error('加载标签数据失败');\n      }\n    },\n    // 平台变更时重置标签搜索\n    handlePlatformChange() {\n      this.tagSearchValue = '';\n      this.filteredTags = [];\n\n      // 如果切换了平台，清空已选标签\n      if (this.selectedTags.length > 0) {\n        if (confirm('切换平台将清空已选标签，是否继续？')) {\n          this.selectedTags = [];\n        } else {\n          // 恢复原平台\n          this.form.oj_platform = this.form.oj_platform === 'leetcode' ? 'luogu' : 'leetcode';\n        }\n      }\n    },\n    // 标签搜索功能\n    searchTags(query) {\n      this.tagSearchLoading = true;\n      this.tagCategoryTitle = '';\n      if (query.trim() === '') {\n        this.filteredTags = [];\n        this.tagSearchLoading = false;\n        return;\n      }\n      setTimeout(() => {\n        if (this.form.oj_platform === 'leetcode') {\n          // 搜索LeetCode标签\n          this.filteredTags = this.allTags.leetcode.filter(tag => tag.label.toLowerCase().includes(query.toLowerCase()));\n        } else if (this.form.oj_platform === 'luogu') {\n          // 搜索洛谷标签，合并所有类别\n          let allLuoguTags = [];\n\n          // 遍历所有类别\n          for (const category in this.allTags.luogu) {\n            // 过滤符合条件的标签并格式化\n            const matchedTags = this.allTags.luogu[category].filter(tag => tag.name.toLowerCase().includes(query.toLowerCase())).map(tag => ({\n              label: tag.name,\n              value: `${category}_${tag.name}`,\n              category\n            }));\n            if (matchedTags.length) {\n              this.tagCategoryTitle = this.getCategoryName(category);\n              allLuoguTags = [...allLuoguTags, ...matchedTags];\n            }\n          }\n          this.filteredTags = allLuoguTags;\n        }\n        this.tagSearchLoading = false;\n      }, 200);\n    },\n    // 获取分类中文名称\n    getCategoryName(category) {\n      const categoryMap = {\n        'Algorithm': '算法标签',\n        'Source': '来源标签',\n        'Time': '时间标签',\n        'Region': '地区标签',\n        'Other': '其他标签'\n      };\n      return categoryMap[category] || category;\n    },\n    // 标签选择处理\n    handleTagSelect(value) {\n      if (!value) return;\n\n      // 检查是否已选择该标签\n      if (this.selectedTags.includes(value)) {\n        ElMessage.warning('该标签已添加');\n      } else {\n        this.selectedTags.push(value);\n        ElMessage.success('标签添加成功');\n      }\n\n      // 清空选择框\n      this.tagSearchValue = '';\n    },\n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.allTags.leetcode.some(t => t.value === tag)) {\n        return tag;\n      }\n\n      // 洛谷标签去掉前缀\n      const parts = tag.split('_');\n      if (parts.length > 1) {\n        return parts.slice(1).join('_');\n      }\n      return tag;\n    },\n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary';\n\n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0];\n      return {\n        'Algorithm': 'primary',\n        // 算法 - 蓝色\n        'Source': 'success',\n        // 来源 - 绿色\n        'Time': 'warning',\n        // 时间 - 黄色\n        'Region': 'danger',\n        // 地区 - 红色\n        'Other': 'info' // 其他 - 灰色\n      }[prefix] || 'info';\n    },\n    // 删除已选标签\n    handleTagClose(tag) {\n      this.selectedTags = this.selectedTags.filter(t => t !== tag);\n    },\n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        MathJax.typesetPromise();\n      }\n    },\n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true;\n        return;\n      }\n\n      // 配置MathJax - 使用单引号避免转义字符警告\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady();\n            this.mathJaxLoaded = true;\n            this.$nextTick(() => this.renderMathJax());\n          }\n        }\n      };\n\n      // 加载MathJax脚本\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n      script.async = true;\n      script.onload = () => {\n        this.mathJaxLoaded = true;\n      };\n      document.head.appendChild(script);\n    },\n    async fetchQuestionInfo() {\n      if (!this.form.url) {\n        ElMessage.error('请输入题目URL');\n        return;\n      }\n      this.fetching = true;\n      try {\n        const response = await extractQuestion({\n          url: this.form.url\n        });\n        const data = response.data;\n\n        // 更新基本表单数据\n        this.form = {\n          ...this.form,\n          url: data.url || this.form.url,\n          oj_platform: data.oj_platform || this.form.oj_platform,\n          ext_question_id: data.ext_question_id || this.form.ext_question_id,\n          name: data.name || this.form.name,\n          difficulty: data.difficulty || this.form.difficulty,\n          content: data.content || this.form.content\n        };\n\n        // 处理算法标签\n        if (data.algorithm_tags && Array.isArray(data.algorithm_tags)) {\n          this.selectedTags = [...data.algorithm_tags];\n        }\n        ElMessage.success('题目信息抓取成功');\n      } catch (error) {\n        console.error('抓取题目信息失败:', error);\n        ElMessage.error('抓取题目信息失败');\n      } finally {\n        this.fetching = false;\n      }\n    },\n    async saveProblem() {\n      if (!this.validateForm()) return;\n\n      // 准备请求数据\n      const requestData = {\n        ext_question_id: this.form.ext_question_id,\n        name: this.form.name,\n        url: this.form.url,\n        oj_platform: this.form.oj_platform,\n        difficulty: this.form.difficulty,\n        content: this.form.content,\n        algorithm_tags: this.selectedTags // 直接使用数组格式\n      };\n      this.saving = true;\n      try {\n        const response = await createQuestion(requestData);\n        const {\n          status,\n          message,\n          data\n        } = response.data;\n        if (status === 'success') {\n          ElMessage.success(message || '题目创建成功');\n          // 可以在这里处理返回的数据，例如跳转到详情页\n          console.log('创建的题目数据:', data);\n\n          // 重置表单\n          this.resetForm();\n        } else {\n          ElMessage.error(message || '题目创建失败');\n        }\n      } catch (error) {\n        console.error('保存题目失败:', error);\n        ElMessage.error('保存题目失败: ' + (error.message || '未知错误'));\n      } finally {\n        this.saving = false;\n      }\n    },\n    validateForm() {\n      if (!this.form.oj_platform) {\n        ElMessage.error('请选择平台');\n        return false;\n      }\n      if (!this.form.ext_question_id) {\n        ElMessage.error('请输入站外ID');\n        return false;\n      }\n      if (!this.form.name) {\n        ElMessage.error('请输入题目名称');\n        return false;\n      }\n      if (!this.form.content) {\n        ElMessage.error('请输入题目描述');\n        return false;\n      }\n      return true;\n    },\n    resetForm() {\n      this.form = {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      };\n      this.selectedTags = [];\n      this.tagSearchValue = '';\n    }\n  }\n};","map":{"version":3,"names":["AppHeader","Document","extractQuestion","createQuestion","getAllTags","MarkdownIt","DOMPurify","ElMessage","LeetcodeTags","name","components","data","fetching","saving","mdi","html","linkify","typographer","form","url","oj_platform","ext_question_id","difficulty","content","mathJaxLoaded","selectedTags","tagSearchValue","tagSearchLoading","tagCategoryTitle","allTags","leetcode","map","tag","label","value","luogu","Algorithm","Source","Time","Region","Other","filteredTags","computed","compiledMarkdown","String","render","sanitize","e","console","error","watch","form.content","$nextTick","renderMathJax","mounted","initMathJax","loadAllTags","methods","getDifficultyClass","classMap","includes","res","code","handlePlatformChange","length","confirm","searchTags","query","trim","setTimeout","filter","toLowerCase","allLuoguTags","category","matchedTags","getCategoryName","categoryMap","handleTagSelect","warning","push","success","getTagName","some","t","parts","split","slice","join","getTagType","platform","prefix","handleTagClose","MathJax","typesetPromise","window","tex","inlineMath","displayMath","processEscapes","options","skipHtmlTags","startup","ready","defaultReady","script","document","createElement","src","async","onload","head","appendChild","fetchQuestionInfo","response","algorithm_tags","Array","isArray","saveProblem","validateForm","requestData","status","message","log","resetForm"],"sources":["/var/www/AlgorithmWeb/algorithmFrontend/src/views/CreateQuestionView.vue"],"sourcesContent":["<template>\n  <div class=\"create-view\">\n    <AppHeader />\n    <div class=\"layout-container\">\n      <!-- 左侧操作面板 -->\n      <div class=\"control-panel\">\n        <h1>新建题目</h1>\n        \n        <el-form :model=\"form\" label-width=\"100px\" class=\"problem-form\">\n          <!-- URL输入和抓取按钮 -->\n          <el-form-item label=\"题目URL\">\n            <div class=\"url-input\">\n              <el-input v-model=\"form.url\" placeholder=\"输入题目URL\" />\n              <el-button \n                type=\"primary\" \n                @click=\"fetchQuestionInfo\"\n                :loading=\"fetching\"\n              >\n                提取题目信息\n              </el-button>\n            </div>\n          </el-form-item>\n\n          <!-- 基本信息 -->\n          <el-form-item label=\"平台\">\n            <el-select \n              v-model=\"form.oj_platform\" \n              placeholder=\"选择平台\"\n              @change=\"handlePlatformChange\"\n            >\n              <el-option label=\"洛谷\" value=\"luogu\" />\n              <el-option label=\"LeetCode\" value=\"leetcode\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"站外ID\">\n            <el-input v-model=\"form.ext_question_id\" />\n          </el-form-item>\n\n          <el-form-item label=\"题目名称\">\n            <el-input v-model=\"form.name\" />\n          </el-form-item>\n\n          <el-form-item label=\"难度\">\n            <el-select v-model=\"form.difficulty\" placeholder=\"选择难度\" style=\"width: 100%\">\n              <!-- LeetCode 难度 -->\n              <template v-if=\"form.oj_platform === 'leetcode'\">\n                <el-option label=\"简单\" value=\"简单\"></el-option>\n                <el-option label=\"中等\" value=\"中等\"></el-option>\n                <el-option label=\"困难\" value=\"困难\"></el-option>\n              </template>\n              \n              <!-- 洛谷难度 -->\n              <template v-else-if=\"form.oj_platform === 'luogu'\">\n                <el-option label=\"入门\" value=\"入门\"></el-option>\n                <el-option label=\"普及-\" value=\"普及-\"></el-option>\n                <el-option label=\"普及/提高-\" value=\"普及/提高-\"></el-option>\n                <el-option label=\"普及+/提高\" value=\"普及+/提高\"></el-option>\n                <el-option label=\"提高+/省选-\" value=\"提高+/省选-\"></el-option>\n                <el-option label=\"省选/NOI-\" value=\"省选/NOI-\"></el-option>\n                <el-option label=\"NOI/NOI+\" value=\"NOI/NOI+\"></el-option>\n                <el-option label=\"CTSC\" value=\"CTSC\"></el-option>\n              </template>\n              \n              <!-- 默认选项 -->\n              <template v-else>\n                <el-option label=\"简单\" value=\"简单\"></el-option>\n                <el-option label=\"中等\" value=\"中等\"></el-option>\n                <el-option label=\"困难\" value=\"困难\"></el-option>\n              </template>\n            </el-select>\n          </el-form-item>\n\n          <!-- 算法标签部分 -->\n          <el-form-item label=\"已选标签\">\n            <div class=\"tags-container\">\n              <el-tag\n                v-for=\"tag in selectedTags\"\n                :key=\"tag\"\n                closable\n                :type=\"getTagType(tag, form.oj_platform)\"\n                @close=\"handleTagClose(tag)\"\n                class=\"algorithm-tag\"\n              >\n                {{ getTagName(tag) }}\n              </el-tag>\n              <div v-if=\"selectedTags.length === 0\" class=\"no-tags-hint\">\n                暂无已选标签，请在下方添加\n              </div>\n            </div>\n          </el-form-item>\n              \n          <!-- 新增的模糊搜索标签选择 -->\n          <el-form-item label=\"添加标签\">\n            <el-select\n              v-model=\"tagSearchValue\"\n              filterable\n              remote\n              reserve-keyword\n              placeholder=\"输入关键词搜索标签\"\n              :remote-method=\"searchTags\"\n              :loading=\"tagSearchLoading\"\n              @change=\"handleTagSelect\"\n              class=\"tag-select\"\n              clearable\n            >\n              <!-- 显示分类标题 (仅洛谷) -->\n              <template v-if=\"form.oj_platform === 'luogu' && tagCategoryTitle\">\n                <el-option-group :label=\"tagCategoryTitle\">\n                  <el-option\n                    v-for=\"tag in filteredTags\"\n                    :key=\"tag.value\"\n                    :label=\"tag.label\"\n                    :value=\"tag.value\"\n                  />\n                </el-option-group>\n              </template>\n              \n              <!-- 无分类标题的选项 -->\n              <template v-else>\n                <el-option\n                  v-for=\"tag in filteredTags\"\n                  :key=\"tag.value\"\n                  :label=\"tag.label\"\n                  :value=\"tag.value\"\n                />\n              </template>\n            </el-select>\n          </el-form-item>\n\n          <!-- Markdown编辑器 -->\n          <el-form-item label=\"题目描述\">\n            <div class=\"markdown-editor\">\n              <textarea \n                v-model=\"form.content\" \n                class=\"editor-textarea\"\n                placeholder=\"输入题目描述（Markdown格式）\"\n              ></textarea>\n            </div>\n          </el-form-item>\n\n          <!-- 按钮组 -->\n          <el-form-item class=\"form-actions\">\n            <el-button type=\"primary\" @click=\"saveProblem\" :loading=\"saving\">保存</el-button>\n            <el-button @click=\"resetForm\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <!-- 右侧预览区域 -->\n      <div class=\"preview-panel\">\n        <div class=\"preview-header\">\n          <h2>预览</h2>\n          <div class=\"preview-meta\">\n            <div v-if=\"form.name\" class=\"preview-title\">{{ form.name }}</div>\n            <div v-if=\"form.difficulty\" class=\"preview-difficulty\" :class=\"getDifficultyClass()\">\n              {{ form.difficulty }}\n            </div>\n          </div>\n          <div class=\"preview-tags\" v-if=\"selectedTags.length > 0\">\n            <el-tag\n              v-for=\"tag in selectedTags\"\n              :key=\"tag\"\n              :type=\"getTagType(tag, form.oj_platform)\"\n              class=\"preview-tag\"\n              size=\"small\"\n            >\n              {{ getTagName(tag) }}\n            </el-tag>\n          </div>\n        </div>\n        <div class=\"preview-content\">\n          <div class=\"markdown-preview\" v-html=\"compiledMarkdown\"></div>\n          <div v-if=\"!form.content\" class=\"empty-preview\">\n            <el-icon><Document /></el-icon>\n            <p>在左侧输入内容后此处将显示预览</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { Document } from '@element-plus/icons-vue'\nimport { extractQuestion, createQuestion, getAllTags } from '@/api/question'\nimport MarkdownIt from 'markdown-it'\nimport DOMPurify from 'dompurify'\nimport { ElMessage } from 'element-plus'\nimport { LeetcodeTags } from '@/constants/tags'\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'CreateView',\n  components: {\n    AppHeader,\n    Document\n  },\n  data() {\n    return {\n      fetching: false,\n      saving: false,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      form: {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      },\n      mathJaxLoaded: false,\n      \n      // 标签相关数据\n      selectedTags: [], // 已选择的标签\n      tagSearchValue: '',\n      tagSearchLoading: false,\n      tagCategoryTitle: '',\n      \n      // 标签数据\n      allTags: {\n        leetcode: LeetcodeTags.map(tag => ({ label: tag, value: tag })),\n        luogu: {\n          Algorithm: [],\n          Source: [],\n          Time: [],\n          Region: [],\n          Other: []\n        }\n      },\n      filteredTags: [], // 筛选后的标签\n    }\n  },\n  computed: {\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content || '')\n        const html = this.mdi.render(content)\n        return DOMPurify.sanitize(html)\n      } catch (e) {\n        console.error('Markdown处理错误:', e)\n        return '内容解析出错'\n      }\n    }\n  },\n  watch: {\n    'form.content'() {\n      if (this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax())\n      }\n    }\n  },\n  mounted() {\n    this.initMathJax()\n    this.loadAllTags()\n  },\n  methods: {\n    // 获取难度对应的CSS类名\n    getDifficultyClass() {\n      const difficulty = this.form.difficulty;\n      if (!difficulty) return '';\n      \n      if (this.form.oj_platform === 'leetcode') {\n        const classMap = {\n          '简单': 'diff-easy',\n          '中等': 'diff-medium',\n          '困难': 'diff-hard'\n        };\n        return classMap[difficulty] || '';\n      } else if (this.form.oj_platform === 'luogu') {\n        if (difficulty.includes('入门')) return 'diff-easy';\n        if (difficulty.includes('普及')) return 'diff-medium';\n        return 'diff-hard';\n      }\n      \n      return '';\n    },\n    \n    // 加载所有标签\n    async loadAllTags() {\n      try {\n        // LeetCode标签已从常量导入\n        \n        // 加载洛谷标签\n        const res = await getAllTags()\n        if (res.data && res.data.code === 200) {\n          this.allTags.luogu = res.data.data\n        }\n      } catch (error) {\n        console.error('加载标签失败:', error)\n        ElMessage.error('加载标签数据失败')\n      }\n    },\n    \n    // 平台变更时重置标签搜索\n    handlePlatformChange() {\n      this.tagSearchValue = ''\n      this.filteredTags = []\n      \n      // 如果切换了平台，清空已选标签\n      if (this.selectedTags.length > 0) {\n        if (confirm('切换平台将清空已选标签，是否继续？')) {\n          this.selectedTags = []\n        } else {\n          // 恢复原平台\n          this.form.oj_platform = this.form.oj_platform === 'leetcode' ? 'luogu' : 'leetcode'\n        }\n      }\n    },\n    \n    // 标签搜索功能\n    searchTags(query) {\n      this.tagSearchLoading = true\n      this.tagCategoryTitle = ''\n      \n      if (query.trim() === '') {\n        this.filteredTags = []\n        this.tagSearchLoading = false\n        return\n      }\n      \n      setTimeout(() => {\n        if (this.form.oj_platform === 'leetcode') {\n          // 搜索LeetCode标签\n          this.filteredTags = this.allTags.leetcode\n            .filter(tag => tag.label.toLowerCase().includes(query.toLowerCase()))\n        } else if (this.form.oj_platform === 'luogu') {\n          // 搜索洛谷标签，合并所有类别\n          let allLuoguTags = [];\n          \n          // 遍历所有类别\n          for (const category in this.allTags.luogu) {\n            // 过滤符合条件的标签并格式化\n            const matchedTags = this.allTags.luogu[category]\n              .filter(tag => tag.name.toLowerCase().includes(query.toLowerCase()))\n              .map(tag => ({\n                label: tag.name,\n                value: `${category}_${tag.name}`,\n                category\n              }))\n            \n            if (matchedTags.length) {\n              this.tagCategoryTitle = this.getCategoryName(category)\n              allLuoguTags = [...allLuoguTags, ...matchedTags]\n            }\n          }\n          \n          this.filteredTags = allLuoguTags\n        }\n        \n        this.tagSearchLoading = false\n      }, 200)\n    },\n    \n    // 获取分类中文名称\n    getCategoryName(category) {\n      const categoryMap = {\n        'Algorithm': '算法标签',\n        'Source': '来源标签',\n        'Time': '时间标签',\n        'Region': '地区标签',\n        'Other': '其他标签'\n      }\n      return categoryMap[category] || category\n    },\n    \n    // 标签选择处理\n    handleTagSelect(value) {\n      if (!value) return\n      \n      // 检查是否已选择该标签\n      if (this.selectedTags.includes(value)) {\n        ElMessage.warning('该标签已添加')\n      } else {\n        this.selectedTags.push(value)\n        ElMessage.success('标签添加成功')\n      }\n      \n      // 清空选择框\n      this.tagSearchValue = ''\n    },\n    \n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.allTags.leetcode.some(t => t.value === tag)) {\n        return tag\n      }\n      \n      // 洛谷标签去掉前缀\n      const parts = tag.split('_')\n      if (parts.length > 1) {\n        return parts.slice(1).join('_')\n      }\n      return tag\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    },\n    \n    // 删除已选标签\n    handleTagClose(tag) {\n      this.selectedTags = this.selectedTags.filter(t => t !== tag)\n    },\n    \n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        MathJax.typesetPromise()\n      }\n    },\n    \n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true\n        return\n      }\n\n      // 配置MathJax - 使用单引号避免转义字符警告\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady()\n            this.mathJaxLoaded = true\n            this.$nextTick(() => this.renderMathJax())\n          }\n        }\n      }\n\n      // 加载MathJax脚本\n      const script = document.createElement('script')\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n      script.async = true\n      script.onload = () => {\n        this.mathJaxLoaded = true\n      }\n      document.head.appendChild(script)\n    },\n    \n    async fetchQuestionInfo() {\n      if (!this.form.url) {\n        ElMessage.error('请输入题目URL')\n        return\n      }\n\n      this.fetching = true\n      try {\n        const response = await extractQuestion({ url: this.form.url })\n        const data = response.data\n        \n        // 更新基本表单数据\n        this.form = {\n          ...this.form,\n          url: data.url || this.form.url,\n          oj_platform: data.oj_platform || this.form.oj_platform,\n          ext_question_id: data.ext_question_id || this.form.ext_question_id,\n          name: data.name || this.form.name,\n          difficulty: data.difficulty || this.form.difficulty,\n          content: data.content || this.form.content\n        }\n        \n        // 处理算法标签\n        if (data.algorithm_tags && Array.isArray(data.algorithm_tags)) {\n          this.selectedTags = [...data.algorithm_tags]\n        }\n        \n        ElMessage.success('题目信息抓取成功')\n      } catch (error) {\n        console.error('抓取题目信息失败:', error)\n        ElMessage.error('抓取题目信息失败')\n      } finally {\n        this.fetching = false\n      }\n    },\n    \n    async saveProblem() {\n      if (!this.validateForm()) return\n      \n      // 准备请求数据\n      const requestData = {\n        ext_question_id: this.form.ext_question_id,\n        name: this.form.name,\n        url: this.form.url,\n        oj_platform: this.form.oj_platform,\n        difficulty: this.form.difficulty,\n        content: this.form.content,\n        algorithm_tags: this.selectedTags // 直接使用数组格式\n      }\n      \n      this.saving = true\n      try {\n        const response = await createQuestion(requestData)\n        const { status, message, data } = response.data\n        \n        if (status === 'success') {\n          ElMessage.success(message || '题目创建成功')\n          // 可以在这里处理返回的数据，例如跳转到详情页\n          console.log('创建的题目数据:', data)\n          \n          // 重置表单\n          this.resetForm()\n        } else {\n          ElMessage.error(message || '题目创建失败')\n        }\n      } catch (error) {\n        console.error('保存题目失败:', error)\n        ElMessage.error('保存题目失败: ' + (error.message || '未知错误'))\n      } finally {\n        this.saving = false\n      }\n    },\n    \n    validateForm() {\n      if (!this.form.oj_platform) {\n        ElMessage.error('请选择平台')\n        return false\n      }\n      if (!this.form.ext_question_id) {\n        ElMessage.error('请输入站外ID')\n        return false\n      }\n      if (!this.form.name) {\n        ElMessage.error('请输入题目名称')\n        return false\n      }\n      if (!this.form.content) {\n        ElMessage.error('请输入题目描述')\n        return false\n      }\n      return true\n    },\n    \n    resetForm() {\n      this.form = {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      }\n      this.selectedTags = []\n      this.tagSearchValue = ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.create-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.layout-container {\n  display: flex;\n  max-width: 1600px;\n  margin: 0 auto;\n  gap: 24px;\n  padding: 24px;\n  height: calc(100vh - 60px); /* 减去顶栏高度 */\n}\n\n/* 左侧操作面板 */\n.control-panel {\n  flex: 1;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  overflow-y: auto;\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n}\n\n.control-panel h1 {\n  font-size: 1.8rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n}\n\n/* 右侧预览区域 */\n.preview-panel {\n  flex: 1;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  display: flex;\n  flex-direction: column;\n}\n\n.preview-header {\n  padding: 16px 24px;\n  border-bottom: 1px solid #eaeaea;\n  background: #f8f9fa;\n  border-radius: 12px 12px 0 0;\n}\n\n.preview-header h2 {\n  font-size: 1.4rem;\n  color: #2c3e50;\n  margin-bottom: 12px;\n}\n\n.preview-meta {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.preview-title {\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.preview-difficulty {\n  padding: 4px 10px;\n  border-radius: 12px;\n  font-size: 0.85rem;\n  font-weight: 500;\n}\n\n.diff-easy {\n  background-color: #e1f5e6;\n  color: #52c41a;\n}\n\n.diff-medium {\n  background-color: #fff7e6;\n  color: #fa8c16;\n}\n\n.diff-hard {\n  background-color: #fff1f0;\n  color: #f5222d;\n}\n\n.preview-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.preview-tag {\n  font-size: 0.8rem;\n}\n\n.preview-content {\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  background: #fcfcfc;\n}\n\n.empty-preview {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #bbb;\n  text-align: center;\n}\n\n.empty-preview .el-icon {\n  font-size: 48px;\n  margin-bottom: 16px;\n}\n\n.problem-form {\n  width: 100%;\n}\n\n.url-input {\n  display: flex;\n  gap: 12px;\n}\n\n.url-input .el-input {\n  flex: 1;\n}\n\n.url-input .el-button {\n  min-width: 120px;\n}\n\n.el-form-item {\n  margin-bottom: 18px;\n}\n\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  min-height: 40px;\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 6px;\n}\n\n.algorithm-tag {\n  margin: 2px;\n  transition: all 0.3s;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.no-tags-hint {\n  color: #909399;\n  font-size: 14px;\n  align-self: center;\n  padding: 0 10px;\n}\n\n.tag-select {\n  width: 100%;\n}\n\n.markdown-editor {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid #eaeaea;\n}\n\n.editor-textarea {\n  width: 100%;\n  min-height: 300px;\n  padding: 15px;\n  border: none;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  resize: vertical;\n  background: #fff;\n  color: #333;\n}\n\n.markdown-preview {\n  min-height: 300px;\n  background: #fff;\n  overflow: auto;\n}\n\n/* MathJax公式样式 */\n.markdown-preview :deep(.MathJax) {\n  color: #333;\n}\n\n/* 其他Markdown样式 */\n.markdown-preview :deep(h1),\n.markdown-preview :deep(h2),\n.markdown-preview :deep(h3) {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-preview :deep(pre) {\n  background-color: #f6f8fa;\n  padding: 12px;\n  border-radius: 6px;\n  overflow: auto;\n}\n\n.markdown-preview :deep(code) {\n  background-color: #f6f8fa;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n  color: #c7254e;\n}\n\n.markdown-preview :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin-left: 0;\n}\n\n.markdown-preview :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(th),\n.markdown-preview :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 0.6em 1em;\n}\n\n.markdown-preview :deep(ul),\n.markdown-preview :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(li) {\n  margin: 0.5em 0;\n}\n\n.markdown-preview :deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.markdown-preview :deep(a:hover) {\n  text-decoration: underline;\n}\n\n.markdown-preview :deep(img) {\n  max-width: 100%;\n  border-radius: 4px;\n}\n\n/* 按钮组样式 */\n.form-actions {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.form-actions .el-button {\n  min-width: 120px;\n  height: 40px;\n}\n\n/* 响应式调整 */\n@media (max-width: 1200px) {\n  .layout-container {\n    flex-direction: column;\n    height: auto;\n  }\n  \n  .control-panel, .preview-panel {\n    width: 100%;\n  }\n  \n  .preview-panel {\n    min-height: 500px;\n  }\n}\n\n@media (max-width: 768px) {\n  .layout-container {\n    padding: 16px;\n  }\n  \n  .control-panel, .preview-panel {\n    padding: 16px;\n  }\n  \n  .url-input {\n    flex-direction: column;\n  }\n  \n  .url-input .el-button {\n    width: 100%;\n  }\n  \n  .editor-textarea,\n  .markdown-preview {\n    min-height: 250px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}