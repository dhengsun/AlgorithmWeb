{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"create-view\"\n};\nconst _hoisted_2 = {\n  class: \"layout-container\"\n};\nconst _hoisted_3 = {\n  class: \"control-panel\"\n};\nconst _hoisted_4 = {\n  class: \"url-input\"\n};\nconst _hoisted_5 = {\n  class: \"tags-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"no-tags-hint\"\n};\nconst _hoisted_7 = {\n  class: \"markdown-editor\"\n};\nconst _hoisted_8 = {\n  class: \"preview-panel\"\n};\nconst _hoisted_9 = {\n  class: \"preview-header\"\n};\nconst _hoisted_10 = {\n  class: \"preview-meta\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"preview-title\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"preview-tags\"\n};\nconst _hoisted_13 = {\n  class: \"preview-content\"\n};\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = {\n  key: 0,\n  class: \"empty-preview\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_option_group = _resolveComponent(\"el-option-group\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_Document = _resolveComponent(\"Document\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[10] || (_cache[10] = _createElementVNode(\"h1\", null, \"新建题目\", -1)), _createVNode(_component_el_form, {\n    model: $data.form,\n    \"label-width\": \"100px\",\n    class: \"problem-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"题目URL\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n        modelValue: $data.form.url,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.url = $event),\n        placeholder: \"输入题目URL\"\n      }, null, 8, [\"modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.fetchQuestionInfo,\n        loading: $data.fetching\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" 提取题目信息 \")])),\n        _: 1\n      }, 8, [\"onClick\", \"loading\"])])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"平台\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $data.form.oj_platform,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.oj_platform = $event),\n        placeholder: \"选择平台\",\n        onChange: $options.handlePlatformChange\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_option, {\n          label: \"洛谷\",\n          value: \"luogu\"\n        }), _createVNode(_component_el_option, {\n          label: \"LeetCode\",\n          value: \"leetcode\"\n        })]),\n        _: 1\n      }, 8, [\"modelValue\", \"onChange\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"站外ID\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.ext_question_id,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.ext_question_id = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"题目名称\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.name,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.name = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"难度\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $data.form.difficulty,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.difficulty = $event),\n        placeholder: \"选择难度\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [$data.form.oj_platform === 'leetcode' ? (_openBlock(), _createElementBlock(_Fragment, {\n          key: 0\n        }, [_createVNode(_component_el_option, {\n          label: \"简单\",\n          value: \"简单\"\n        }), _createVNode(_component_el_option, {\n          label: \"中等\",\n          value: \"中等\"\n        }), _createVNode(_component_el_option, {\n          label: \"困难\",\n          value: \"困难\"\n        })], 64)) : $data.form.oj_platform === 'luogu' ? (_openBlock(), _createElementBlock(_Fragment, {\n          key: 1\n        }, [_createVNode(_component_el_option, {\n          label: \"入门\",\n          value: \"入门\"\n        }), _createVNode(_component_el_option, {\n          label: \"普及-\",\n          value: \"普及-\"\n        }), _createVNode(_component_el_option, {\n          label: \"普及/提高-\",\n          value: \"普及/提高-\"\n        }), _createVNode(_component_el_option, {\n          label: \"普及+/提高\",\n          value: \"普及+/提高\"\n        }), _createVNode(_component_el_option, {\n          label: \"提高+/省选-\",\n          value: \"提高+/省选-\"\n        }), _createVNode(_component_el_option, {\n          label: \"省选/NOI-\",\n          value: \"省选/NOI-\"\n        }), _createVNode(_component_el_option, {\n          label: \"NOI/NOI+\",\n          value: \"NOI/NOI+\"\n        }), _createVNode(_component_el_option, {\n          label: \"CTSC\",\n          value: \"CTSC\"\n        })], 64)) : (_openBlock(), _createElementBlock(_Fragment, {\n          key: 2\n        }, [_createVNode(_component_el_option, {\n          label: \"简单\",\n          value: \"简单\"\n        }), _createVNode(_component_el_option, {\n          label: \"中等\",\n          value: \"中等\"\n        }), _createVNode(_component_el_option, {\n          label: \"困难\",\n          value: \"困难\"\n        })], 64))]),\n        _: 1\n      }, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"已选标签\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedTags, tag => {\n        return _openBlock(), _createBlock(_component_el_tag, {\n          key: tag,\n          closable: \"\",\n          type: $options.getTagType(tag, $data.form.oj_platform),\n          onClose: $event => $options.handleTagClose(tag),\n          class: \"algorithm-tag\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n          _: 2\n        }, 1032, [\"type\", \"onClose\"]);\n      }), 128)), $data.selectedTags.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" 暂无已选标签，请在下方添加 \")) : _createCommentVNode(\"\", true)])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"添加标签\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $data.tagSearchValue,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.tagSearchValue = $event),\n        filterable: \"\",\n        remote: \"\",\n        \"reserve-keyword\": \"\",\n        placeholder: \"输入关键词搜索标签\",\n        \"remote-method\": $options.searchTags,\n        loading: $data.tagSearchLoading,\n        onChange: $options.handleTagSelect,\n        class: \"tag-select\",\n        clearable: \"\"\n      }, {\n        default: _withCtx(() => [$data.form.oj_platform === 'luogu' && $data.tagCategoryTitle ? (_openBlock(), _createBlock(_component_el_option_group, {\n          key: 0,\n          label: $data.tagCategoryTitle\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredTags, tag => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: tag.value,\n              label: tag.label,\n              value: tag.value\n            }, null, 8, [\"label\", \"value\"]);\n          }), 128))]),\n          _: 1\n        }, 8, [\"label\"])) : (_openBlock(true), _createElementBlock(_Fragment, {\n          key: 1\n        }, _renderList($data.filteredTags, tag => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: tag.value,\n            label: tag.label,\n            value: tag.value\n          }, null, 8, [\"label\", \"value\"]);\n        }), 128))]),\n        _: 1\n      }, 8, [\"modelValue\", \"remote-method\", \"loading\", \"onChange\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"题目描述\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"textarea\", {\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.form.content = $event),\n        class: \"editor-textarea\",\n        placeholder: \"输入题目描述（Markdown格式）\"\n      }, null, 512), [[_vModelText, $data.form.content]])])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      class: \"form-actions\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.saveProblem,\n        loading: $data.saving\n      }, {\n        default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"保存\")])),\n        _: 1\n      }, 8, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n        onClick: $options.resetForm\n      }, {\n        default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"重置\")])),\n        _: 1\n      }, 8, [\"onClick\"])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"model\"])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"预览\", -1)), _createElementVNode(\"div\", _hoisted_10, [$data.form.name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString($data.form.name), 1)) : _createCommentVNode(\"\", true), $data.form.difficulty ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"preview-difficulty\", $options.getDifficultyClass()])\n  }, _toDisplayString($data.form.difficulty), 3)) : _createCommentVNode(\"\", true)]), $data.selectedTags.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedTags, tag => {\n    return _openBlock(), _createBlock(_component_el_tag, {\n      key: tag,\n      type: $options.getTagType(tag, $data.form.oj_platform),\n      class: \"preview-tag\",\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n      _: 2\n    }, 1032, [\"type\"]);\n  }), 128))])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", {\n    class: \"markdown-preview\",\n    innerHTML: $options.compiledMarkdown\n  }, null, 8, _hoisted_14), !$data.form.content ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_Document)]),\n    _: 1\n  }), _cache[12] || (_cache[12] = _createElementVNode(\"p\", null, \"在左侧输入内容后此处将显示预览\", -1))])) : _createCommentVNode(\"\", true)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_form","model","$data","form","default","_withCtx","_component_el_form_item","label","_hoisted_4","_component_el_input","modelValue","url","_cache","$event","placeholder","_component_el_button","type","onClick","$options","fetchQuestionInfo","loading","fetching","_createTextVNode","_","_component_el_select","oj_platform","onChange","handlePlatformChange","_component_el_option","value","ext_question_id","name","difficulty","style","_Fragment","_hoisted_5","_renderList","selectedTags","tag","_createBlock","_component_el_tag","closable","getTagType","onClose","handleTagClose","_toDisplayString","getTagName","length","_hoisted_6","_createCommentVNode","tagSearchValue","filterable","remote","searchTags","tagSearchLoading","handleTagSelect","clearable","tagCategoryTitle","_component_el_option_group","filteredTags","_hoisted_7","content","saveProblem","saving","resetForm","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeClass","getDifficultyClass","_hoisted_12","size","_hoisted_13","innerHTML","compiledMarkdown","_hoisted_14","_hoisted_15","_component_el_icon","_component_Document"],"sources":["/var/www/AlgorithmWeb/algorithmFrontend/src/views/CreateQuestionView.vue"],"sourcesContent":["<template>\n  <div class=\"create-view\">\n    <AppHeader />\n    <div class=\"layout-container\">\n      <!-- 左侧操作面板 -->\n      <div class=\"control-panel\">\n        <h1>新建题目</h1>\n        \n        <el-form :model=\"form\" label-width=\"100px\" class=\"problem-form\">\n          <!-- URL输入和抓取按钮 -->\n          <el-form-item label=\"题目URL\">\n            <div class=\"url-input\">\n              <el-input v-model=\"form.url\" placeholder=\"输入题目URL\" />\n              <el-button \n                type=\"primary\" \n                @click=\"fetchQuestionInfo\"\n                :loading=\"fetching\"\n              >\n                提取题目信息\n              </el-button>\n            </div>\n          </el-form-item>\n\n          <!-- 基本信息 -->\n          <el-form-item label=\"平台\">\n            <el-select \n              v-model=\"form.oj_platform\" \n              placeholder=\"选择平台\"\n              @change=\"handlePlatformChange\"\n            >\n              <el-option label=\"洛谷\" value=\"luogu\" />\n              <el-option label=\"LeetCode\" value=\"leetcode\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"站外ID\">\n            <el-input v-model=\"form.ext_question_id\" />\n          </el-form-item>\n\n          <el-form-item label=\"题目名称\">\n            <el-input v-model=\"form.name\" />\n          </el-form-item>\n\n          <el-form-item label=\"难度\">\n            <el-select v-model=\"form.difficulty\" placeholder=\"选择难度\" style=\"width: 100%\">\n              <!-- LeetCode 难度 -->\n              <template v-if=\"form.oj_platform === 'leetcode'\">\n                <el-option label=\"简单\" value=\"简单\"></el-option>\n                <el-option label=\"中等\" value=\"中等\"></el-option>\n                <el-option label=\"困难\" value=\"困难\"></el-option>\n              </template>\n              \n              <!-- 洛谷难度 -->\n              <template v-else-if=\"form.oj_platform === 'luogu'\">\n                <el-option label=\"入门\" value=\"入门\"></el-option>\n                <el-option label=\"普及-\" value=\"普及-\"></el-option>\n                <el-option label=\"普及/提高-\" value=\"普及/提高-\"></el-option>\n                <el-option label=\"普及+/提高\" value=\"普及+/提高\"></el-option>\n                <el-option label=\"提高+/省选-\" value=\"提高+/省选-\"></el-option>\n                <el-option label=\"省选/NOI-\" value=\"省选/NOI-\"></el-option>\n                <el-option label=\"NOI/NOI+\" value=\"NOI/NOI+\"></el-option>\n                <el-option label=\"CTSC\" value=\"CTSC\"></el-option>\n              </template>\n              \n              <!-- 默认选项 -->\n              <template v-else>\n                <el-option label=\"简单\" value=\"简单\"></el-option>\n                <el-option label=\"中等\" value=\"中等\"></el-option>\n                <el-option label=\"困难\" value=\"困难\"></el-option>\n              </template>\n            </el-select>\n          </el-form-item>\n\n          <!-- 算法标签部分 -->\n          <el-form-item label=\"已选标签\">\n            <div class=\"tags-container\">\n              <el-tag\n                v-for=\"tag in selectedTags\"\n                :key=\"tag\"\n                closable\n                :type=\"getTagType(tag, form.oj_platform)\"\n                @close=\"handleTagClose(tag)\"\n                class=\"algorithm-tag\"\n              >\n                {{ getTagName(tag) }}\n              </el-tag>\n              <div v-if=\"selectedTags.length === 0\" class=\"no-tags-hint\">\n                暂无已选标签，请在下方添加\n              </div>\n            </div>\n          </el-form-item>\n              \n          <!-- 新增的模糊搜索标签选择 -->\n          <el-form-item label=\"添加标签\">\n            <el-select\n              v-model=\"tagSearchValue\"\n              filterable\n              remote\n              reserve-keyword\n              placeholder=\"输入关键词搜索标签\"\n              :remote-method=\"searchTags\"\n              :loading=\"tagSearchLoading\"\n              @change=\"handleTagSelect\"\n              class=\"tag-select\"\n              clearable\n            >\n              <!-- 显示分类标题 (仅洛谷) -->\n              <template v-if=\"form.oj_platform === 'luogu' && tagCategoryTitle\">\n                <el-option-group :label=\"tagCategoryTitle\">\n                  <el-option\n                    v-for=\"tag in filteredTags\"\n                    :key=\"tag.value\"\n                    :label=\"tag.label\"\n                    :value=\"tag.value\"\n                  />\n                </el-option-group>\n              </template>\n              \n              <!-- 无分类标题的选项 -->\n              <template v-else>\n                <el-option\n                  v-for=\"tag in filteredTags\"\n                  :key=\"tag.value\"\n                  :label=\"tag.label\"\n                  :value=\"tag.value\"\n                />\n              </template>\n            </el-select>\n          </el-form-item>\n\n          <!-- Markdown编辑器 -->\n          <el-form-item label=\"题目描述\">\n            <div class=\"markdown-editor\">\n              <textarea \n                v-model=\"form.content\" \n                class=\"editor-textarea\"\n                placeholder=\"输入题目描述（Markdown格式）\"\n              ></textarea>\n            </div>\n          </el-form-item>\n\n          <!-- 按钮组 -->\n          <el-form-item class=\"form-actions\">\n            <el-button type=\"primary\" @click=\"saveProblem\" :loading=\"saving\">保存</el-button>\n            <el-button @click=\"resetForm\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <!-- 右侧预览区域 -->\n      <div class=\"preview-panel\">\n        <div class=\"preview-header\">\n          <h2>预览</h2>\n          <div class=\"preview-meta\">\n            <div v-if=\"form.name\" class=\"preview-title\">{{ form.name }}</div>\n            <div v-if=\"form.difficulty\" class=\"preview-difficulty\" :class=\"getDifficultyClass()\">\n              {{ form.difficulty }}\n            </div>\n          </div>\n          <div class=\"preview-tags\" v-if=\"selectedTags.length > 0\">\n            <el-tag\n              v-for=\"tag in selectedTags\"\n              :key=\"tag\"\n              :type=\"getTagType(tag, form.oj_platform)\"\n              class=\"preview-tag\"\n              size=\"small\"\n            >\n              {{ getTagName(tag) }}\n            </el-tag>\n          </div>\n        </div>\n        <div class=\"preview-content\">\n          <div class=\"markdown-preview\" v-html=\"compiledMarkdown\"></div>\n          <div v-if=\"!form.content\" class=\"empty-preview\">\n            <el-icon><Document /></el-icon>\n            <p>在左侧输入内容后此处将显示预览</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { Document } from '@element-plus/icons-vue'\nimport { extractQuestion, createQuestion, getAllTags } from '@/api/question'\nimport MarkdownIt from 'markdown-it'\nimport DOMPurify from 'dompurify'\nimport { ElMessage } from 'element-plus'\nimport { LeetcodeTags } from '@/constants/tags'\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'CreateView',\n  components: {\n    AppHeader,\n    Document\n  },\n  data() {\n    return {\n      fetching: false,\n      saving: false,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      form: {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      },\n      mathJaxLoaded: false,\n      \n      // 标签相关数据\n      selectedTags: [], // 已选择的标签\n      tagSearchValue: '',\n      tagSearchLoading: false,\n      tagCategoryTitle: '',\n      \n      // 标签数据\n      allTags: {\n        leetcode: LeetcodeTags.map(tag => ({ label: tag, value: tag })),\n        luogu: {\n          Algorithm: [],\n          Source: [],\n          Time: [],\n          Region: [],\n          Other: []\n        }\n      },\n      filteredTags: [], // 筛选后的标签\n    }\n  },\n  computed: {\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content || '')\n        const html = this.mdi.render(content)\n        return DOMPurify.sanitize(html)\n      } catch (e) {\n        console.error('Markdown处理错误:', e)\n        return '内容解析出错'\n      }\n    }\n  },\n  watch: {\n    'form.content'() {\n      if (this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax())\n      }\n    }\n  },\n  mounted() {\n    this.initMathJax()\n    this.loadAllTags()\n  },\n  methods: {\n    // 获取难度对应的CSS类名\n    getDifficultyClass() {\n      const difficulty = this.form.difficulty;\n      if (!difficulty) return '';\n      \n      if (this.form.oj_platform === 'leetcode') {\n        const classMap = {\n          '简单': 'diff-easy',\n          '中等': 'diff-medium',\n          '困难': 'diff-hard'\n        };\n        return classMap[difficulty] || '';\n      } else if (this.form.oj_platform === 'luogu') {\n        if (difficulty.includes('入门')) return 'diff-easy';\n        if (difficulty.includes('普及')) return 'diff-medium';\n        return 'diff-hard';\n      }\n      \n      return '';\n    },\n    \n    // 加载所有标签\n    async loadAllTags() {\n      try {\n        // LeetCode标签已从常量导入\n        \n        // 加载洛谷标签\n        const res = await getAllTags()\n        if (res.data && res.data.code === 200) {\n          this.allTags.luogu = res.data.data\n        }\n      } catch (error) {\n        console.error('加载标签失败:', error)\n        ElMessage.error('加载标签数据失败')\n      }\n    },\n    \n    // 平台变更时重置标签搜索\n    handlePlatformChange() {\n      this.tagSearchValue = ''\n      this.filteredTags = []\n      \n      // 如果切换了平台，清空已选标签\n      if (this.selectedTags.length > 0) {\n        if (confirm('切换平台将清空已选标签，是否继续？')) {\n          this.selectedTags = []\n        } else {\n          // 恢复原平台\n          this.form.oj_platform = this.form.oj_platform === 'leetcode' ? 'luogu' : 'leetcode'\n        }\n      }\n    },\n    \n    // 标签搜索功能\n    searchTags(query) {\n      this.tagSearchLoading = true\n      this.tagCategoryTitle = ''\n      \n      if (query.trim() === '') {\n        this.filteredTags = []\n        this.tagSearchLoading = false\n        return\n      }\n      \n      setTimeout(() => {\n        if (this.form.oj_platform === 'leetcode') {\n          // 搜索LeetCode标签\n          this.filteredTags = this.allTags.leetcode\n            .filter(tag => tag.label.toLowerCase().includes(query.toLowerCase()))\n        } else if (this.form.oj_platform === 'luogu') {\n          // 搜索洛谷标签，合并所有类别\n          let allLuoguTags = [];\n          \n          // 遍历所有类别\n          for (const category in this.allTags.luogu) {\n            // 过滤符合条件的标签并格式化\n            const matchedTags = this.allTags.luogu[category]\n              .filter(tag => tag.name.toLowerCase().includes(query.toLowerCase()))\n              .map(tag => ({\n                label: tag.name,\n                value: `${category}_${tag.name}`,\n                category\n              }))\n            \n            if (matchedTags.length) {\n              this.tagCategoryTitle = this.getCategoryName(category)\n              allLuoguTags = [...allLuoguTags, ...matchedTags]\n            }\n          }\n          \n          this.filteredTags = allLuoguTags\n        }\n        \n        this.tagSearchLoading = false\n      }, 200)\n    },\n    \n    // 获取分类中文名称\n    getCategoryName(category) {\n      const categoryMap = {\n        'Algorithm': '算法标签',\n        'Source': '来源标签',\n        'Time': '时间标签',\n        'Region': '地区标签',\n        'Other': '其他标签'\n      }\n      return categoryMap[category] || category\n    },\n    \n    // 标签选择处理\n    handleTagSelect(value) {\n      if (!value) return\n      \n      // 检查是否已选择该标签\n      if (this.selectedTags.includes(value)) {\n        ElMessage.warning('该标签已添加')\n      } else {\n        this.selectedTags.push(value)\n        ElMessage.success('标签添加成功')\n      }\n      \n      // 清空选择框\n      this.tagSearchValue = ''\n    },\n    \n    // 获取标签名称（去掉前缀）\n    getTagName(tag) {\n      // LeetCode标签已经是纯名称\n      if (this.allTags.leetcode.some(t => t.value === tag)) {\n        return tag\n      }\n      \n      // 洛谷标签去掉前缀\n      const parts = tag.split('_')\n      if (parts.length > 1) {\n        return parts.slice(1).join('_')\n      }\n      return tag\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary'\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0]\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info'\n    },\n    \n    // 删除已选标签\n    handleTagClose(tag) {\n      this.selectedTags = this.selectedTags.filter(t => t !== tag)\n    },\n    \n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        MathJax.typesetPromise()\n      }\n    },\n    \n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true\n        return\n      }\n\n      // 配置MathJax - 使用单引号避免转义字符警告\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady()\n            this.mathJaxLoaded = true\n            this.$nextTick(() => this.renderMathJax())\n          }\n        }\n      }\n\n      // 加载MathJax脚本\n      const script = document.createElement('script')\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n      script.async = true\n      script.onload = () => {\n        this.mathJaxLoaded = true\n      }\n      document.head.appendChild(script)\n    },\n    \n    async fetchQuestionInfo() {\n      if (!this.form.url) {\n        ElMessage.error('请输入题目URL')\n        return\n      }\n\n      this.fetching = true\n      try {\n        const response = await extractQuestion({ url: this.form.url })\n        const data = response.data\n        \n        // 更新基本表单数据\n        this.form = {\n          ...this.form,\n          url: data.url || this.form.url,\n          oj_platform: data.oj_platform || this.form.oj_platform,\n          ext_question_id: data.ext_question_id || this.form.ext_question_id,\n          name: data.name || this.form.name,\n          difficulty: data.difficulty || this.form.difficulty,\n          content: data.content || this.form.content\n        }\n        \n        // 处理算法标签\n        if (data.algorithm_tags && Array.isArray(data.algorithm_tags)) {\n          this.selectedTags = [...data.algorithm_tags]\n        }\n        \n        ElMessage.success('题目信息抓取成功')\n      } catch (error) {\n        console.error('抓取题目信息失败:', error)\n        ElMessage.error('抓取题目信息失败')\n      } finally {\n        this.fetching = false\n      }\n    },\n    \n    async saveProblem() {\n      if (!this.validateForm()) return\n      \n      // 准备请求数据\n      const requestData = {\n        ext_question_id: this.form.ext_question_id,\n        name: this.form.name,\n        url: this.form.url,\n        oj_platform: this.form.oj_platform,\n        difficulty: this.form.difficulty,\n        content: this.form.content,\n        algorithm_tags: this.selectedTags // 直接使用数组格式\n      }\n      \n      this.saving = true\n      try {\n        const response = await createQuestion(requestData)\n        const { status, message, data } = response.data\n        \n        if (status === 'success') {\n          ElMessage.success(message || '题目创建成功')\n          // 可以在这里处理返回的数据，例如跳转到详情页\n          console.log('创建的题目数据:', data)\n          \n          // 重置表单\n          this.resetForm()\n        } else {\n          ElMessage.error(message || '题目创建失败')\n        }\n      } catch (error) {\n        console.error('保存题目失败:', error)\n        ElMessage.error('保存题目失败: ' + (error.message || '未知错误'))\n      } finally {\n        this.saving = false\n      }\n    },\n    \n    validateForm() {\n      if (!this.form.oj_platform) {\n        ElMessage.error('请选择平台')\n        return false\n      }\n      if (!this.form.ext_question_id) {\n        ElMessage.error('请输入站外ID')\n        return false\n      }\n      if (!this.form.name) {\n        ElMessage.error('请输入题目名称')\n        return false\n      }\n      if (!this.form.content) {\n        ElMessage.error('请输入题目描述')\n        return false\n      }\n      return true\n    },\n    \n    resetForm() {\n      this.form = {\n        url: '',\n        oj_platform: '',\n        ext_question_id: '',\n        name: '',\n        difficulty: '',\n        content: ''\n      }\n      this.selectedTags = []\n      this.tagSearchValue = ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.create-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.layout-container {\n  display: flex;\n  max-width: 1600px;\n  margin: 0 auto;\n  gap: 24px;\n  padding: 24px;\n  height: calc(100vh - 60px); /* 减去顶栏高度 */\n}\n\n/* 左侧操作面板 */\n.control-panel {\n  flex: 1;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  overflow-y: auto;\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n}\n\n.control-panel h1 {\n  font-size: 1.8rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n}\n\n/* 右侧预览区域 */\n.preview-panel {\n  flex: 1;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  display: flex;\n  flex-direction: column;\n}\n\n.preview-header {\n  padding: 16px 24px;\n  border-bottom: 1px solid #eaeaea;\n  background: #f8f9fa;\n  border-radius: 12px 12px 0 0;\n}\n\n.preview-header h2 {\n  font-size: 1.4rem;\n  color: #2c3e50;\n  margin-bottom: 12px;\n}\n\n.preview-meta {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.preview-title {\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.preview-difficulty {\n  padding: 4px 10px;\n  border-radius: 12px;\n  font-size: 0.85rem;\n  font-weight: 500;\n}\n\n.diff-easy {\n  background-color: #e1f5e6;\n  color: #52c41a;\n}\n\n.diff-medium {\n  background-color: #fff7e6;\n  color: #fa8c16;\n}\n\n.diff-hard {\n  background-color: #fff1f0;\n  color: #f5222d;\n}\n\n.preview-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.preview-tag {\n  font-size: 0.8rem;\n}\n\n.preview-content {\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  background: #fcfcfc;\n}\n\n.empty-preview {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #bbb;\n  text-align: center;\n}\n\n.empty-preview .el-icon {\n  font-size: 48px;\n  margin-bottom: 16px;\n}\n\n.problem-form {\n  width: 100%;\n}\n\n.url-input {\n  display: flex;\n  gap: 12px;\n}\n\n.url-input .el-input {\n  flex: 1;\n}\n\n.url-input .el-button {\n  min-width: 120px;\n}\n\n.el-form-item {\n  margin-bottom: 18px;\n}\n\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  min-height: 40px;\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 6px;\n}\n\n.algorithm-tag {\n  margin: 2px;\n  transition: all 0.3s;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.no-tags-hint {\n  color: #909399;\n  font-size: 14px;\n  align-self: center;\n  padding: 0 10px;\n}\n\n.tag-select {\n  width: 100%;\n}\n\n.markdown-editor {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid #eaeaea;\n}\n\n.editor-textarea {\n  width: 100%;\n  min-height: 300px;\n  padding: 15px;\n  border: none;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  resize: vertical;\n  background: #fff;\n  color: #333;\n}\n\n.markdown-preview {\n  min-height: 300px;\n  background: #fff;\n  overflow: auto;\n}\n\n/* MathJax公式样式 */\n.markdown-preview :deep(.MathJax) {\n  color: #333;\n}\n\n/* 其他Markdown样式 */\n.markdown-preview :deep(h1),\n.markdown-preview :deep(h2),\n.markdown-preview :deep(h3) {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-preview :deep(pre) {\n  background-color: #f6f8fa;\n  padding: 12px;\n  border-radius: 6px;\n  overflow: auto;\n}\n\n.markdown-preview :deep(code) {\n  background-color: #f6f8fa;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n  color: #c7254e;\n}\n\n.markdown-preview :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin-left: 0;\n}\n\n.markdown-preview :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(th),\n.markdown-preview :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 0.6em 1em;\n}\n\n.markdown-preview :deep(ul),\n.markdown-preview :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(li) {\n  margin: 0.5em 0;\n}\n\n.markdown-preview :deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.markdown-preview :deep(a:hover) {\n  text-decoration: underline;\n}\n\n.markdown-preview :deep(img) {\n  max-width: 100%;\n  border-radius: 4px;\n}\n\n/* 按钮组样式 */\n.form-actions {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.form-actions .el-button {\n  min-width: 120px;\n  height: 40px;\n}\n\n/* 响应式调整 */\n@media (max-width: 1200px) {\n  .layout-container {\n    flex-direction: column;\n    height: auto;\n  }\n  \n  .control-panel, .preview-panel {\n    width: 100%;\n  }\n  \n  .preview-panel {\n    min-height: 500px;\n  }\n}\n\n@media (max-width: 768px) {\n  .layout-container {\n    padding: 16px;\n  }\n  \n  .control-panel, .preview-panel {\n    padding: 16px;\n  }\n  \n  .url-input {\n    flex-direction: column;\n  }\n  \n  .url-input .el-button {\n    width: 100%;\n  }\n  \n  .editor-textarea,\n  .markdown-preview {\n    min-height: 250px;\n  }\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAe;;EAMfA,KAAK,EAAC;AAAW;;EAgEjBA,KAAK,EAAC;AAAgB;;EA3EvCC,GAAA;EAsFoDD,KAAK,EAAC;;;EA8CzCA,KAAK,EAAC;AAAiB;;EAkB7BA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAc;;EAzJnCC,GAAA;EA0JkCD,KAAK,EAAC;;;EA1JxCC,GAAA;EA+JeD,KAAK,EAAC;;;EAYRA,KAAK,EAAC;AAAiB;oBA3KpC;;EAAAC,GAAA;EA6KoCD,KAAK,EAAC;;;;;;;;;;;;;;uBA5KxCE,mBAAA,CAmLM,OAnLNC,UAmLM,GAlLJC,YAAA,CAAaC,oBAAA,GACbC,mBAAA,CAgLM,OAhLNC,UAgLM,GA9KJD,mBAAA,CA8IM,OA9INE,UA8IM,G,4BA7IJF,mBAAA,CAAa,YAAT,MAAI,QAERF,YAAA,CA0IUK,kBAAA;IA1IAC,KAAK,EAAEC,KAAA,CAAAC,IAAI;IAAE,aAAW,EAAC,OAAO;IAACZ,KAAK,EAAC;;IARzDa,OAAA,EAAAC,QAAA,CAUU,MAWe,CAXfV,YAAA,CAWeW,uBAAA;MAXDC,KAAK,EAAC;IAAO;MAVrCH,OAAA,EAAAC,QAAA,CAWY,MASM,CATNR,mBAAA,CASM,OATNW,UASM,GARJb,YAAA,CAAqDc,mBAAA;QAZnEC,UAAA,EAYiCR,KAAA,CAAAC,IAAI,CAACQ,GAAG;QAZzC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYiCX,KAAA,CAAAC,IAAI,CAACQ,GAAG,GAAAE,MAAA;QAAEC,WAAW,EAAC;mCACzCnB,YAAA,CAMYoB,oBAAA;QALVC,IAAI,EAAC,SAAS;QACbC,OAAK,EAAEC,QAAA,CAAAC,iBAAiB;QACxBC,OAAO,EAAElB,KAAA,CAAAmB;;QAhB1BjB,OAAA,EAAAC,QAAA,CAiBe,MAEDO,MAAA,QAAAA,MAAA,OAnBdU,gBAAA,CAiBe,UAED,E;QAnBdC,CAAA;;MAAAA,CAAA;QAwBU5B,YAAA,CASeW,uBAAA;MATDC,KAAK,EAAC;IAAI;MAxBlCH,OAAA,EAAAC,QAAA,CAyBY,MAOY,CAPZV,YAAA,CAOY6B,oBAAA;QAhCxBd,UAAA,EA0BuBR,KAAA,CAAAC,IAAI,CAACsB,WAAW;QA1BvC,uBAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0BuBX,KAAA,CAAAC,IAAI,CAACsB,WAAW,GAAAZ,MAAA;QACzBC,WAAW,EAAC,MAAM;QACjBY,QAAM,EAAER,QAAA,CAAAS;;QA5BvBvB,OAAA,EAAAC,QAAA,CA8Bc,MAAsC,CAAtCV,YAAA,CAAsCiC,oBAAA;UAA3BrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;YAC5BlC,YAAA,CAA+CiC,oBAAA;UAApCrB,KAAK,EAAC,UAAU;UAACsB,KAAK,EAAC;;QA/BhDN,CAAA;;MAAAA,CAAA;QAmCU5B,YAAA,CAEeW,uBAAA;MAFDC,KAAK,EAAC;IAAM;MAnCpCH,OAAA,EAAAC,QAAA,CAoCY,MAA2C,CAA3CV,YAAA,CAA2Cc,mBAAA;QApCvDC,UAAA,EAoC+BR,KAAA,CAAAC,IAAI,CAAC2B,eAAe;QApCnD,uBAAAlB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoC+BX,KAAA,CAAAC,IAAI,CAAC2B,eAAe,GAAAjB,MAAA;;MApCnDU,CAAA;QAuCU5B,YAAA,CAEeW,uBAAA;MAFDC,KAAK,EAAC;IAAM;MAvCpCH,OAAA,EAAAC,QAAA,CAwCY,MAAgC,CAAhCV,YAAA,CAAgCc,mBAAA;QAxC5CC,UAAA,EAwC+BR,KAAA,CAAAC,IAAI,CAAC4B,IAAI;QAxCxC,uBAAAnB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwC+BX,KAAA,CAAAC,IAAI,CAAC4B,IAAI,GAAAlB,MAAA;;MAxCxCU,CAAA;QA2CU5B,YAAA,CA4BeW,uBAAA;MA5BDC,KAAK,EAAC;IAAI;MA3ClCH,OAAA,EAAAC,QAAA,CA4CY,MA0BY,CA1BZV,YAAA,CA0BY6B,oBAAA;QAtExBd,UAAA,EA4CgCR,KAAA,CAAAC,IAAI,CAAC6B,UAAU;QA5C/C,uBAAApB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4CgCX,KAAA,CAAAC,IAAI,CAAC6B,UAAU,GAAAnB,MAAA;QAAEC,WAAW,EAAC,MAAM;QAACmB,KAAmB,EAAnB;UAAA;QAAA;;QA5CpE7B,OAAA,EAAAC,QAAA,CA8Cc,MAIW,CAJKH,KAAA,CAAAC,IAAI,CAACsB,WAAW,mB,cAAhChC,mBAAA,CAIWyC,SAAA;UAlDzB1C,GAAA;QAAA,IA+CgBG,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;YAC5BlC,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;YAC5BlC,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;oBAIT3B,KAAA,CAAAC,IAAI,CAACsB,WAAW,gB,cAArChC,mBAAA,CASWyC,SAAA;UA9DzB1C,GAAA;QAAA,IAsDgBG,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;YAC5BlC,YAAA,CAA+CiC,oBAAA;UAApCrB,KAAK,EAAC,KAAK;UAACsB,KAAK,EAAC;YAC7BlC,YAAA,CAAqDiC,oBAAA;UAA1CrB,KAAK,EAAC,QAAQ;UAACsB,KAAK,EAAC;YAChClC,YAAA,CAAqDiC,oBAAA;UAA1CrB,KAAK,EAAC,QAAQ;UAACsB,KAAK,EAAC;YAChClC,YAAA,CAAuDiC,oBAAA;UAA5CrB,KAAK,EAAC,SAAS;UAACsB,KAAK,EAAC;YACjClC,YAAA,CAAuDiC,oBAAA;UAA5CrB,KAAK,EAAC,SAAS;UAACsB,KAAK,EAAC;YACjClC,YAAA,CAAyDiC,oBAAA;UAA9CrB,KAAK,EAAC,UAAU;UAACsB,KAAK,EAAC;YAClClC,YAAA,CAAiDiC,oBAAA;UAAtCrB,KAAK,EAAC,MAAM;UAACsB,KAAK,EAAC;mCAIhCpC,mBAAA,CAIWyC,SAAA;UArEzB1C,GAAA;QAAA,IAkEgBG,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;YAC5BlC,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;YAC5BlC,YAAA,CAA6CiC,oBAAA;UAAlCrB,KAAK,EAAC,IAAI;UAACsB,KAAK,EAAC;;QApE5CN,CAAA;;MAAAA,CAAA;QA0EU5B,YAAA,CAgBeW,uBAAA;MAhBDC,KAAK,EAAC;IAAM;MA1EpCH,OAAA,EAAAC,QAAA,CA2EY,MAcM,CAdNR,mBAAA,CAcM,OAdNsC,UAcM,I,kBAbJ1C,mBAAA,CASSyC,SAAA,QArFvBE,WAAA,CA6E8BlC,KAAA,CAAAmC,YAAY,EAAnBC,GAAG;6BADZC,YAAA,CASSC,iBAAA;UAPNhD,GAAG,EAAE8C,GAAG;UACTG,QAAQ,EAAR,EAAQ;UACPzB,IAAI,EAAEE,QAAA,CAAAwB,UAAU,CAACJ,GAAG,EAAEpC,KAAA,CAAAC,IAAI,CAACsB,WAAW;UACtCkB,OAAK,EAAA9B,MAAA,IAAEK,QAAA,CAAA0B,cAAc,CAACN,GAAG;UAC1B/C,KAAK,EAAC;;UAlFtBa,OAAA,EAAAC,QAAA,CAoFgB,MAAqB,CApFrCiB,gBAAA,CAAAuB,gBAAA,CAoFmB3B,QAAA,CAAA4B,UAAU,CAACR,GAAG,O;UApFjCf,CAAA;;iBAsFyBrB,KAAA,CAAAmC,YAAY,CAACU,MAAM,U,cAA9BtD,mBAAA,CAEM,OAFNuD,UAEM,EAFqD,iBAE3D,KAxFdC,mBAAA,W;MAAA1B,CAAA;QA6FU5B,YAAA,CAmCeW,uBAAA;MAnCDC,KAAK,EAAC;IAAM;MA7FpCH,OAAA,EAAAC,QAAA,CA8FY,MAiCY,CAjCZV,YAAA,CAiCY6B,oBAAA;QA/HxBd,UAAA,EA+FuBR,KAAA,CAAAgD,cAAc;QA/FrC,uBAAAtC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA+FuBX,KAAA,CAAAgD,cAAc,GAAArC,MAAA;QACvBsC,UAAU,EAAV,EAAU;QACVC,MAAM,EAAN,EAAM;QACN,iBAAe,EAAf,EAAe;QACftC,WAAW,EAAC,WAAW;QACtB,eAAa,EAAEI,QAAA,CAAAmC,UAAU;QACzBjC,OAAO,EAAElB,KAAA,CAAAoD,gBAAgB;QACzB5B,QAAM,EAAER,QAAA,CAAAqC,eAAe;QACxBhE,KAAK,EAAC,YAAY;QAClBiE,SAAS,EAAT;;QAxGdpD,OAAA,EAAAC,QAAA,CA2Gc,MASW,CATKH,KAAA,CAAAC,IAAI,CAACsB,WAAW,gBAAgBvB,KAAA,CAAAuD,gBAAgB,I,cAC9DlB,YAAA,CAOkBmB,0BAAA;UAnHlClE,GAAA;UA4GkCe,KAAK,EAAEL,KAAA,CAAAuD;;UA5GzCrD,OAAA,EAAAC,QAAA,CA8GoB,MAA2B,E,kBAD7BZ,mBAAA,CAKEyC,SAAA,QAlHpBE,WAAA,CA8GkClC,KAAA,CAAAyD,YAAY,EAAnBrB,GAAG;iCADZC,YAAA,CAKEX,oBAAA;cAHCpC,GAAG,EAAE8C,GAAG,CAACT,KAAK;cACdtB,KAAK,EAAE+B,GAAG,CAAC/B,KAAK;cAChBsB,KAAK,EAAES,GAAG,CAACT;;;UAjHhCN,CAAA;+CAwHgB9B,mBAAA,CAKEyC,SAAA;UA7HlB1C,GAAA;QAAA,GAAA4C,WAAA,CAyHgClC,KAAA,CAAAyD,YAAY,EAAnBrB,GAAG;+BADZC,YAAA,CAKEX,oBAAA;YAHCpC,GAAG,EAAE8C,GAAG,CAACT,KAAK;YACdtB,KAAK,EAAE+B,GAAG,CAAC/B,KAAK;YAChBsB,KAAK,EAAES,GAAG,CAACT;;;QA5H9BN,CAAA;;MAAAA,CAAA;QAmIU5B,YAAA,CAQeW,uBAAA;MARDC,KAAK,EAAC;IAAM;MAnIpCH,OAAA,EAAAC,QAAA,CAoIY,MAMM,CANNR,mBAAA,CAMM,OANN+D,UAMM,G,gBALJ/D,mBAAA,CAIY;QAzI1B,uBAAAe,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsIyBX,KAAA,CAAAC,IAAI,CAAC0D,OAAO,GAAAhD,MAAA;QACrBtB,KAAK,EAAC,iBAAiB;QACvBuB,WAAW,EAAC;oCAFHZ,KAAA,CAAAC,IAAI,CAAC0D,OAAO,E;MAtIrCtC,CAAA;QA8IU5B,YAAA,CAGeW,uBAAA;MAHDf,KAAK,EAAC;IAAc;MA9I5Ca,OAAA,EAAAC,QAAA,CA+IY,MAA+E,CAA/EV,YAAA,CAA+EoB,oBAAA;QAApEC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAA4C,WAAW;QAAG1C,OAAO,EAAElB,KAAA,CAAA6D;;QA/IrE3D,OAAA,EAAAC,QAAA,CA+I6E,MAAEO,MAAA,QAAAA,MAAA,OA/I/EU,gBAAA,CA+I6E,IAAE,E;QA/I/EC,CAAA;qCAgJY5B,YAAA,CAA4CoB,oBAAA;QAAhCE,OAAK,EAAEC,QAAA,CAAA8C;MAAS;QAhJxC5D,OAAA,EAAAC,QAAA,CAgJ0C,MAAEO,MAAA,QAAAA,MAAA,OAhJ5CU,gBAAA,CAgJ0C,IAAE,E;QAhJ5CC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;sBAsJM1B,mBAAA,CA4BM,OA5BNoE,UA4BM,GA3BJpE,mBAAA,CAmBM,OAnBNqE,UAmBM,G,4BAlBJrE,mBAAA,CAAW,YAAP,IAAE,QACNA,mBAAA,CAKM,OALNsE,WAKM,GAJOjE,KAAA,CAAAC,IAAI,CAAC4B,IAAI,I,cAApBtC,mBAAA,CAAiE,OAAjE2E,WAAiE,EAAAvB,gBAAA,CAAlB3C,KAAA,CAAAC,IAAI,CAAC4B,IAAI,SA1JpEkB,mBAAA,YA2JuB/C,KAAA,CAAAC,IAAI,CAAC6B,UAAU,I,cAA1BvC,mBAAA,CAEM;IA7JlBD,GAAA;IA2JwCD,KAAK,EA3J7C8E,eAAA,EA2J8C,oBAAoB,EAASnD,QAAA,CAAAoD,kBAAkB;sBAC5EpE,KAAA,CAAAC,IAAI,CAAC6B,UAAU,SA5JhCiB,mBAAA,W,GA+J0C/C,KAAA,CAAAmC,YAAY,CAACU,MAAM,Q,cAAnDtD,mBAAA,CAUM,OAVN8E,WAUM,I,kBATJ9E,mBAAA,CAQSyC,SAAA,QAxKrBE,WAAA,CAiK4BlC,KAAA,CAAAmC,YAAY,EAAnBC,GAAG;yBADZC,YAAA,CAQSC,iBAAA;MANNhD,GAAG,EAAE8C,GAAG;MACRtB,IAAI,EAAEE,QAAA,CAAAwB,UAAU,CAACJ,GAAG,EAAEpC,KAAA,CAAAC,IAAI,CAACsB,WAAW;MACvClC,KAAK,EAAC,aAAa;MACnBiF,IAAI,EAAC;;MArKnBpE,OAAA,EAAAC,QAAA,CAuKc,MAAqB,CAvKnCiB,gBAAA,CAAAuB,gBAAA,CAuKiB3B,QAAA,CAAA4B,UAAU,CAACR,GAAG,O;MAvK/Bf,CAAA;;iBAAA0B,mBAAA,W,GA2KQpD,mBAAA,CAMM,OANN4E,WAMM,GALJ5E,mBAAA,CAA8D;IAAzDN,KAAK,EAAC,kBAAkB;IAACmF,SAAyB,EAAjBxD,QAAA,CAAAyD;cA5KhDC,WAAA,G,CA6KsB1E,KAAA,CAAAC,IAAI,CAAC0D,OAAO,I,cAAxBpE,mBAAA,CAGM,OAHNoF,WAGM,GAFJlF,YAAA,CAA+BmF,kBAAA;IA9K3C1E,OAAA,EAAAC,QAAA,CA8KqB,MAAY,CAAZV,YAAA,CAAYoF,mBAAA,E;IA9KjCxD,CAAA;kCA+KY1B,mBAAA,CAAsB,WAAnB,iBAAe,O,KA/K9BoD,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}