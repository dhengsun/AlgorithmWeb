{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"solution-detail-view\"\n};\nconst _hoisted_2 = {\n  class: \"page-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error-container\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"solution-content\"\n};\nconst _hoisted_6 = {\n  class: \"left-section\"\n};\nconst _hoisted_7 = {\n  class: \"deleted-banner\"\n};\nconst _hoisted_8 = {\n  class: \"solution-title\"\n};\nconst _hoisted_9 = {\n  class: \"solution-metadata\"\n};\nconst _hoisted_10 = {\n  class: \"solution-time\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"solution-time\"\n};\nconst _hoisted_12 = {\n  class: \"solution-language\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"solution-status\"\n};\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = {\n  class: \"right-section\"\n};\nconst _hoisted_16 = {\n  class: \"info-meta\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"action-buttons\"\n};\nconst _hoisted_20 = {\n  class: \"difficulty-section\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"tags-section\"\n};\nconst _hoisted_22 = {\n  class: \"tags-container\"\n};\nconst _hoisted_23 = {\n  key: 3,\n  class: \"solution-content\"\n};\nconst _hoisted_24 = {\n  class: \"left-section\"\n};\nconst _hoisted_25 = {\n  class: \"solution-title\"\n};\nconst _hoisted_26 = {\n  class: \"solution-metadata\"\n};\nconst _hoisted_27 = {\n  class: \"solution-time\"\n};\nconst _hoisted_28 = {\n  key: 0,\n  class: \"solution-time\"\n};\nconst _hoisted_29 = {\n  class: \"solution-language\"\n};\nconst _hoisted_30 = {\n  key: 1,\n  class: \"solution-status\"\n};\nconst _hoisted_31 = [\"innerHTML\"];\nconst _hoisted_32 = {\n  class: \"right-section\"\n};\nconst _hoisted_33 = {\n  class: \"info-meta\"\n};\nconst _hoisted_34 = {\n  key: 0\n};\nconst _hoisted_35 = {\n  key: 1\n};\nconst _hoisted_36 = {\n  key: 0,\n  class: \"action-buttons\"\n};\nconst _hoisted_37 = {\n  class: \"difficulty-section\"\n};\nconst _hoisted_38 = {\n  key: 0,\n  class: \"tags-section\"\n};\nconst _hoisted_39 = {\n  class: \"tags-container\"\n};\nconst _hoisted_40 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_41 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_RefreshLeft = _resolveComponent(\"RefreshLeft\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_EditPen = _resolveComponent(\"EditPen\");\n  const _component_View = _resolveComponent(\"View\");\n  const _component_Delete = _resolveComponent(\"Delete\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"main\", _hoisted_2, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n    rows: 10,\n    animated: \"\"\n  })])) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_alert, {\n    title: $data.error,\n    type: \"error\",\n    closable: false\n  }, null, 8, [\"title\"])])) : $data.solution && $data.solution.is_deleted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_card, {\n    class: \"solution-description-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_alert, {\n      title: \"此题解已被删除\",\n      type: \"warning\",\n      closable: false\n    })]), _createElementVNode(\"h1\", _hoisted_8, \"题目 #\" + _toDisplayString($data.solution.question_id) + \" 的解题思路\", 1), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, [_cache[8] || (_cache[8] = _createElementVNode(\"i\", {\n      class: \"el-icon-time\"\n    }, null, -1)), _createTextVNode(\" 创建于: \" + _toDisplayString($options.formatDate($data.solution.created_at)), 1)]), $data.solution.updated_at !== $data.solution.created_at ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, [_cache[9] || (_cache[9] = _createElementVNode(\"i\", {\n      class: \"el-icon-edit-outline\"\n    }, null, -1)), _createTextVNode(\" 更新于: \" + _toDisplayString($options.formatDate($data.solution.updated_at)), 1)])) : _createCommentVNode(\"\", true), _createElementVNode(\"span\", _hoisted_12, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      class: _normalizeClass('lang-tag-' + $options.getNormalizedLanguage($data.solution.language))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getDisplayLanguage($data.solution.language)), 1)]),\n      _: 1\n    }, 8, [\"class\"])]), $data.solution.is_draft ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      type: \"info\"\n    }, {\n      default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"草稿\")])),\n      _: 1\n    })])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", {\n      ref: \"markdownContent\",\n      class: \"markdown-content\",\n      innerHTML: $options.compiledMarkdown\n    }, null, 8, _hoisted_14)]),\n    _: 1\n  })]), _createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_el_card, {\n    class: \"question-info-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h2\", {\n      onClick: _cache[0] || (_cache[0] = $event => $options.goToProblem($data.solution.question_id)),\n      class: \"clickable-title\"\n    }, [_createTextVNode(_toDisplayString($data.questionDetails?.name || `题目 #${$data.solution.question_id}`) + \" \", 1), _cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n      class: \"el-icon-link\"\n    }, null, -1))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", null, \"题目ID: \" + _toDisplayString($data.solution.question_id), 1), $data.questionDetails?.ext_question_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"外部ID: \" + _toDisplayString($data.questionDetails.ext_question_id), 1)) : _createCommentVNode(\"\", true), $data.questionDetails?.oj_platform ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_cache[12] || (_cache[12] = _createTextVNode(\" 平台: \")), _createVNode(_component_el_tag, {\n      type: $options.getPlatformTagType($data.questionDetails.oj_platform),\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getPlatformName($data.questionDetails.oj_platform)), 1)]),\n      _: 1\n    }, 8, [\"type\"])])) : _createCommentVNode(\"\", true)]), $options.canManageSolution ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $options.handleRestore\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_RefreshLeft)]),\n        _: 1\n      }), _cache[13] || (_cache[13] = _createTextVNode(\" 恢复 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $options.handleEdit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_EditPen)]),\n        _: 1\n      }), _cache[14] || (_cache[14] = _createTextVNode(\" 编辑 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"success\",\n      size: \"small\",\n      onClick: _cache[1] || (_cache[1] = $event => $options.goToProblem($data.solution.question_id))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_View)]),\n        _: 1\n      }), _cache[15] || (_cache[15] = _createTextVNode(\" 查看题目 \"))]),\n      _: 1\n    })])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }), $data.questionDetails ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"question-tags-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"难度级别\", -1)), _createVNode(_component_el_tag, {\n      type: $options.getDifficultyTagType($data.questionDetails),\n      effect: \"dark\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.questionDetails.difficulty), 1)]),\n      _: 1\n    }, 8, [\"type\"])]), $data.questionDetails.algorithm_tags?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_cache[17] || (_cache[17] = _createElementVNode(\"h3\", null, \"算法标签\", -1)), _createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questionDetails.algorithm_tags, tag => {\n      return _openBlock(), _createBlock(_component_el_tag, {\n        key: tag,\n        type: $options.getTagType(tag, $data.questionDetails.oj_platform),\n        class: \"algorithm-tag\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n        _: 2\n      }, 1032, [\"type\"]);\n    }), 128))])])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_el_card, {\n    class: \"solution-description-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h1\", _hoisted_25, \"题目 #\" + _toDisplayString($data.solution.question_id) + \" 的解题思路\", 1), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"span\", _hoisted_27, [_cache[18] || (_cache[18] = _createElementVNode(\"i\", {\n      class: \"el-icon-time\"\n    }, null, -1)), _createTextVNode(\" 创建于: \" + _toDisplayString($options.formatDate($data.solution.created_at)), 1)]), $data.solution.updated_at !== $data.solution.created_at ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, [_cache[19] || (_cache[19] = _createElementVNode(\"i\", {\n      class: \"el-icon-edit-outline\"\n    }, null, -1)), _createTextVNode(\" 更新于: \" + _toDisplayString($options.formatDate($data.solution.updated_at)), 1)])) : _createCommentVNode(\"\", true), _createElementVNode(\"span\", _hoisted_29, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      class: _normalizeClass('lang-tag-' + $options.getNormalizedLanguage($data.solution.language))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getDisplayLanguage($data.solution.language)), 1)]),\n      _: 1\n    }, 8, [\"class\"])]), $data.solution.is_draft ? (_openBlock(), _createElementBlock(\"span\", _hoisted_30, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      type: \"info\"\n    }, {\n      default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"草稿\")])),\n      _: 1\n    })])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", {\n      ref: \"markdownContent\",\n      class: \"markdown-content\",\n      innerHTML: $options.compiledMarkdown\n    }, null, 8, _hoisted_31)]),\n    _: 1\n  })]), _createElementVNode(\"div\", _hoisted_32, [_createVNode(_component_el_card, {\n    class: \"question-info-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h2\", {\n      onClick: _cache[2] || (_cache[2] = $event => $options.goToProblem($data.solution.question_id)),\n      class: \"clickable-title\"\n    }, [_createTextVNode(_toDisplayString($data.questionDetails?.name || `题目 #${$data.solution.question_id}`) + \" \", 1), _cache[21] || (_cache[21] = _createElementVNode(\"i\", {\n      class: \"el-icon-link\"\n    }, null, -1))]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", null, \"题目ID: \" + _toDisplayString($data.solution.question_id), 1), $data.questionDetails?.ext_question_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, \"外部ID: \" + _toDisplayString($data.questionDetails.ext_question_id), 1)) : _createCommentVNode(\"\", true), $data.questionDetails?.oj_platform ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_cache[22] || (_cache[22] = _createTextVNode(\" 平台: \")), _createVNode(_component_el_tag, {\n      type: $options.getPlatformTagType($data.questionDetails.oj_platform),\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getPlatformName($data.questionDetails.oj_platform)), 1)]),\n      _: 1\n    }, 8, [\"type\"])])) : _createCommentVNode(\"\", true)]), $options.canManageSolution ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $options.handleEdit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_EditPen)]),\n        _: 1\n      }), _cache[23] || (_cache[23] = _createTextVNode(\" 编辑 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"danger\",\n      size: \"small\",\n      onClick: $options.handleDelete\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Delete)]),\n        _: 1\n      }), _cache[24] || (_cache[24] = _createTextVNode(\" 删除 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"success\",\n      size: \"small\",\n      onClick: _cache[3] || (_cache[3] = $event => $options.goToProblem($data.solution.question_id))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_View)]),\n        _: 1\n      }), _cache[25] || (_cache[25] = _createTextVNode(\" 查看题目 \"))]),\n      _: 1\n    })])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }), $data.questionDetails ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"question-tags-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_37, [_cache[26] || (_cache[26] = _createElementVNode(\"h3\", null, \"难度级别\", -1)), _createVNode(_component_el_tag, {\n      type: $options.getDifficultyTagType($data.questionDetails),\n      effect: \"dark\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.questionDetails.difficulty), 1)]),\n      _: 1\n    }, 8, [\"type\"])]), $data.questionDetails.algorithm_tags?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_cache[27] || (_cache[27] = _createElementVNode(\"h3\", null, \"算法标签\", -1)), _createElementVNode(\"div\", _hoisted_39, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questionDetails.algorithm_tags, tag => {\n      return _openBlock(), _createBlock(_component_el_tag, {\n        key: tag,\n        type: $options.getTagType(tag, $data.questionDetails.oj_platform),\n        class: \"algorithm-tag\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n        _: 2\n      }, 1032, [\"type\"]);\n    }), 128))])])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)])]))]), _createVNode(_component_el_dialog, {\n    modelValue: $data.deleteDialogVisible,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.deleteDialogVisible = $event),\n    title: \"确认删除\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_40, [_createVNode(_component_el_button, {\n      onClick: _cache[4] || (_cache[4] = $event => $data.deleteDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[28] || (_cache[28] = [_createTextVNode(\"取消\")])),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"danger\",\n      onClick: $options.confirmDelete,\n      loading: $data.processing\n    }, {\n      default: _withCtx(() => _cache[29] || (_cache[29] = [_createTextVNode(\"确认删除\")])),\n      _: 1\n    }, 8, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_cache[30] || (_cache[30] = _createElementVNode(\"span\", null, \"确定要删除这篇题解吗？此操作不可逆。\", -1))]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.restoreDialogVisible,\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.restoreDialogVisible = $event),\n    title: \"确认恢复\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_41, [_createVNode(_component_el_button, {\n      onClick: _cache[6] || (_cache[6] = $event => $data.restoreDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[31] || (_cache[31] = [_createTextVNode(\"取消\")])),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.confirmRestore,\n      loading: $data.processing\n    }, {\n      default: _withCtx(() => _cache[32] || (_cache[32] = [_createTextVNode(\"确认恢复\")])),\n      _: 1\n    }, 8, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_cache[33] || (_cache[33] = _createElementVNode(\"span\", null, \"确定要恢复这篇题解吗？\", -1))]),\n    _: 1\n  }, 8, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","$data","loading","_hoisted_3","_component_el_skeleton","rows","animated","error","_hoisted_4","_component_el_alert","title","type","closable","solution","is_deleted","_hoisted_5","_hoisted_6","_component_el_card","default","_withCtx","_hoisted_7","_hoisted_8","_toDisplayString","question_id","_hoisted_9","_hoisted_10","_createTextVNode","$options","formatDate","created_at","updated_at","_hoisted_11","_createCommentVNode","_hoisted_12","_component_el_tag","size","_normalizeClass","getNormalizedLanguage","language","getDisplayLanguage","_","is_draft","_hoisted_13","_cache","ref","innerHTML","compiledMarkdown","_hoisted_14","_hoisted_15","onClick","$event","goToProblem","questionDetails","name","_hoisted_16","ext_question_id","_hoisted_17","oj_platform","_hoisted_18","getPlatformTagType","getPlatformName","canManageSolution","_hoisted_19","_component_el_button","handleRestore","_component_el_icon","_component_RefreshLeft","handleEdit","_component_EditPen","_component_View","_createBlock","_hoisted_20","getDifficultyTagType","effect","difficulty","algorithm_tags","length","_hoisted_21","_hoisted_22","_Fragment","_renderList","tag","getTagType","getTagName","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","handleDelete","_component_Delete","_hoisted_37","_hoisted_38","_hoisted_39","_component_el_dialog","modelValue","deleteDialogVisible","width","footer","_hoisted_40","confirmDelete","processing","restoreDialogVisible","_hoisted_41","confirmRestore"],"sources":["/var/www/AlgorithmWeb/algorithmFrontend/src/views/SolutionDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"solution-detail-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      \n      <div v-else-if=\"error\" class=\"error-container\">\n        <el-alert\n          :title=\"error\"\n          type=\"error\"\n          :closable=\"false\"\n        />\n      </div>\n      \n      <div v-else-if=\"solution && solution.is_deleted\" class=\"solution-content\">\n        <div class=\"left-section\">\n          <el-card class=\"solution-description-card\">\n            <div class=\"deleted-banner\">\n              <el-alert\n                title=\"此题解已被删除\"\n                type=\"warning\"\n                :closable=\"false\"\n              />\n            </div>\n            \n            <h1 class=\"solution-title\">题目 #{{ solution.question_id }} 的解题思路</h1>\n            \n            <div class=\"solution-metadata\">\n              <span class=\"solution-time\">\n                <i class=\"el-icon-time\"></i>\n                创建于: {{ formatDate(solution.created_at) }}\n              </span>\n              <span class=\"solution-time\" v-if=\"solution.updated_at !== solution.created_at\">\n                <i class=\"el-icon-edit-outline\"></i>\n                更新于: {{ formatDate(solution.updated_at) }}\n              </span>\n              <span class=\"solution-language\">\n                <el-tag size=\"small\" :class=\"'lang-tag-' + getNormalizedLanguage(solution.language)\">\n                  {{ getDisplayLanguage(solution.language) }}\n                </el-tag>\n              </span>\n              <span class=\"solution-status\" v-if=\"solution.is_draft\">\n                <el-tag size=\"small\" type=\"info\">草稿</el-tag>\n              </span>\n            </div>\n            \n            <!-- 题解内容 - Markdown渲染 -->\n            <div ref=\"markdownContent\" class=\"markdown-content\" v-html=\"compiledMarkdown\"></div>\n          </el-card>\n        </div>\n        \n        <div class=\"right-section\">\n          <!-- 题目信息卡片 -->\n          <el-card class=\"question-info-card\">\n            <h2 @click=\"goToProblem(solution.question_id)\" class=\"clickable-title\">\n              {{ questionDetails?.name || `题目 #${solution.question_id}` }}\n              <i class=\"el-icon-link\"></i>\n            </h2>\n            <div class=\"info-meta\">\n              <div>题目ID: {{ solution.question_id }}</div>\n              <div v-if=\"questionDetails?.ext_question_id\">外部ID: {{ questionDetails.ext_question_id }}</div>\n              <div v-if=\"questionDetails?.oj_platform\">\n                平台: \n                <el-tag :type=\"getPlatformTagType(questionDetails.oj_platform)\" size=\"small\">\n                  {{ getPlatformName(questionDetails.oj_platform) }}\n                </el-tag>\n              </div>\n            </div>\n            \n            <div class=\"action-buttons\" v-if=\"canManageSolution\">\n              <el-button type=\"primary\" size=\"small\" @click=\"handleRestore\">\n                <el-icon><RefreshLeft /></el-icon>\n                恢复\n              </el-button>\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit\">\n                <el-icon><EditPen /></el-icon>\n                编辑\n              </el-button>\n              <el-button type=\"success\" size=\"small\" @click=\"goToProblem(solution.question_id)\">\n                <el-icon><View /></el-icon>\n                查看题目\n              </el-button>\n            </div>\n          </el-card>\n          \n          <!-- 题目标签和难度 -->\n          <el-card class=\"question-tags-card\" v-if=\"questionDetails\">\n            <div class=\"difficulty-section\">\n              <h3>难度级别</h3>\n              <el-tag \n                :type=\"getDifficultyTagType(questionDetails)\"\n                effect=\"dark\"\n              >\n                {{ questionDetails.difficulty }}\n              </el-tag>\n            </div>\n            \n            <div class=\"tags-section\" v-if=\"questionDetails.algorithm_tags?.length\">\n              <h3>算法标签</h3>\n              <div class=\"tags-container\">\n                <el-tag \n                  v-for=\"tag in questionDetails.algorithm_tags\" \n                  :key=\"tag\"\n                  :type=\"getTagType(tag, questionDetails.oj_platform)\"\n                  class=\"algorithm-tag\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </div>\n          </el-card>\n        </div>\n      </div>\n      \n      <div v-else class=\"solution-content\">\n        <div class=\"left-section\">\n          <el-card class=\"solution-description-card\">\n            <h1 class=\"solution-title\">题目 #{{ solution.question_id }} 的解题思路</h1>\n            \n            <div class=\"solution-metadata\">\n              <span class=\"solution-time\">\n                <i class=\"el-icon-time\"></i>\n                创建于: {{ formatDate(solution.created_at) }}\n              </span>\n              <span class=\"solution-time\" v-if=\"solution.updated_at !== solution.created_at\">\n                <i class=\"el-icon-edit-outline\"></i>\n                更新于: {{ formatDate(solution.updated_at) }}\n              </span>\n              <span class=\"solution-language\">\n                <el-tag size=\"small\" :class=\"'lang-tag-' + getNormalizedLanguage(solution.language)\">\n                  {{ getDisplayLanguage(solution.language) }}\n                </el-tag>\n              </span>\n              <span class=\"solution-status\" v-if=\"solution.is_draft\">\n                <el-tag size=\"small\" type=\"info\">草稿</el-tag>\n              </span>\n            </div>\n            \n            <!-- 题解内容 - Markdown渲染 -->\n            <div ref=\"markdownContent\" class=\"markdown-content\" v-html=\"compiledMarkdown\"></div>\n          </el-card>\n        </div>\n        \n        <div class=\"right-section\">\n          <!-- 题目信息卡片 -->\n          <el-card class=\"question-info-card\">\n            <h2 @click=\"goToProblem(solution.question_id)\" class=\"clickable-title\">\n              {{ questionDetails?.name || `题目 #${solution.question_id}` }}\n              <i class=\"el-icon-link\"></i>\n            </h2>\n            <div class=\"info-meta\">\n              <div>题目ID: {{ solution.question_id }}</div>\n              <div v-if=\"questionDetails?.ext_question_id\">外部ID: {{ questionDetails.ext_question_id }}</div>\n              <div v-if=\"questionDetails?.oj_platform\">\n                平台: \n                <el-tag :type=\"getPlatformTagType(questionDetails.oj_platform)\" size=\"small\">\n                  {{ getPlatformName(questionDetails.oj_platform) }}\n                </el-tag>\n              </div>\n            </div>\n            \n            <div class=\"action-buttons\" v-if=\"canManageSolution\">\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit\">\n                <el-icon><EditPen /></el-icon>\n                编辑\n              </el-button>\n              <el-button type=\"danger\" size=\"small\" @click=\"handleDelete\">\n                <el-icon><Delete /></el-icon>\n                删除\n              </el-button>\n              <el-button type=\"success\" size=\"small\" @click=\"goToProblem(solution.question_id)\">\n                <el-icon><View /></el-icon>\n                查看题目\n              </el-button>\n            </div>\n          </el-card>\n          \n          <!-- 题目标签和难度 -->\n          <el-card class=\"question-tags-card\" v-if=\"questionDetails\">\n            <div class=\"difficulty-section\">\n              <h3>难度级别</h3>\n              <el-tag \n                :type=\"getDifficultyTagType(questionDetails)\"\n                effect=\"dark\"\n              >\n                {{ questionDetails.difficulty }}\n              </el-tag>\n            </div>\n            \n            <div class=\"tags-section\" v-if=\"questionDetails.algorithm_tags?.length\">\n              <h3>算法标签</h3>\n              <div class=\"tags-container\">\n                <el-tag \n                  v-for=\"tag in questionDetails.algorithm_tags\" \n                  :key=\"tag\"\n                  :type=\"getTagType(tag, questionDetails.oj_platform)\"\n                  class=\"algorithm-tag\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </div>\n          </el-card>\n        </div>\n      </div>\n    </main>\n\n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"确认删除\"\n      width=\"30%\"\n    >\n      <span>确定要删除这篇题解吗？此操作不可逆。</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"processing\">确认删除</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 恢复确认对话框 -->\n    <el-dialog\n      v-model=\"restoreDialogVisible\"\n      title=\"确认恢复\"\n      width=\"30%\"\n    >\n      <span>确定要恢复这篇题解吗？</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"restoreDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmRestore\" :loading=\"processing\">确认恢复</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue';\nimport { getSolutionDetail } from '@/api/solution';\nimport { getQuestionDetail } from '@/api/question';\nimport request from '@/api/request';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\nimport { EditPen, Delete, View, RefreshLeft } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\n\nexport default {\n  name: 'SolutionDetailView',\n  components: {\n    AppHeader,\n    EditPen,\n    Delete,\n    View,\n    RefreshLeft\n  },\n  data() {\n    return {\n      solutionId: this.$route.params.id,\n      solution: null,\n      questionDetails: null,\n      loading: true,\n      error: null,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        breaks: true\n      }),\n      \n      // 当前用户信息（实际应从用户状态获取）\n      currentUserId: null, // 应从用户状态获取\n      \n      // 删除和恢复相关状态\n      deleteDialogVisible: false,\n      restoreDialogVisible: false,\n      processing: false,\n      \n      // 语言名称到显示名称的映射\n      languageDisplayMap: {\n        'cpp': 'C++',\n        'csharp': 'C#',\n        'javascript': 'JavaScript',\n        'python': 'Python',\n        'java': 'Java',\n        'go': 'Go',\n        'rust': 'Rust'\n      }\n    };\n  },\n  computed: {\n    // 渲染Markdown\n    compiledMarkdown() {\n      if (!this.solution) return '';\n      \n      try {\n        // 使用content_text作为Markdown内容\n        const content = String(this.solution.content_text || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    },\n    \n    // 检查当前用户是否可以管理题解（编辑、删除、恢复）\n    canManageSolution() {\n      // 这里应该根据实际权限检查逻辑实现\n      // 例如检查当前登录用户是否是题解作者或管理员\n      return true; // 为了示例，此处默认为true\n    }\n  },\n  mounted() {\n    this.fetchSolutionDetail();\n  },\n  methods: {\n    // 获取题解详情\n    async fetchSolutionDetail() {\n      this.loading = true;\n      this.error = null;\n      \n      try {\n        const response = await getSolutionDetail(this.solutionId);\n        \n        if (response.data && response.data.code === 200) {\n          this.solution = response.data.data;\n        } else {\n          this.solution = response.data;\n        }\n        \n        // 获取题目详情\n        if (this.solution && this.solution.question_id) {\n          await this.fetchQuestionDetail(this.solution.question_id);\n        }\n      } catch (error) {\n        console.error('获取题解详情失败:', error);\n        this.error = '获取题解详情失败: ' + (error.message || '未知错误');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 获取题目详情\n    async fetchQuestionDetail(questionId) {\n      try {\n        const response = await getQuestionDetail(questionId);\n        \n        if (response.data && response.data.code === 200) {\n          this.questionDetails = response.data.data;\n        } else {\n          this.questionDetails = response.data;\n        }\n        \n        // 确保算法标签是数组\n        if (this.questionDetails && typeof this.questionDetails.algorithm_tags === 'string') {\n          this.questionDetails.algorithm_tags = this.questionDetails.algorithm_tags\n            .split(',')\n            .map(tag => tag.trim())\n            .filter(tag => tag.length > 0);\n        }\n      } catch (error) {\n        console.error('获取题目详情失败:', error);\n      }\n    },\n    \n    // 编辑按钮处理\n    handleEdit() {\n      if (!this.solution) return;\n      // 跳转到编辑页面\n      this.$router.push(`/${this.solution.id}/solutions/update`);\n    },\n    \n    // 删除按钮处理\n    handleDelete() {\n      if (!this.solution || this.solution.is_deleted) return;\n      this.deleteDialogVisible = true;\n    },\n    \n    // 恢复按钮处理\n    handleRestore() {\n      if (!this.solution) return;\n      this.restoreDialogVisible = true;\n    },\n    \n    // 确认删除\n    async confirmDelete() {\n      if (!this.solution) return;\n      \n      this.processing = true;\n      try {\n        const response = await request({\n          url: '/api/solution/delete/',\n          method: 'post',\n          data: { id: this.solution.id }\n        });\n        \n        this.deleteDialogVisible = false;\n        \n        ElMessage({\n          type: 'success',\n          message: response.message || '题解删除成功'\n        });\n        \n        // 刷新当前页面以显示删除状态\n        await this.fetchSolutionDetail();\n      } catch (error) {\n        console.error('删除题解失败:', error);\n        \n        const errorMsg = error.response?.data?.message || \n                         error.message || \n                         '删除失败: 未知错误';\n        \n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    },\n    \n    // 确认恢复\n    async confirmRestore() {\n      if (!this.solution) return;\n      \n      this.processing = true;\n      try {\n        const response = await request({\n          url: '/api/solution/restore/',\n          method: 'post',\n          data: { id: this.solution.id }\n        });\n        \n        this.restoreDialogVisible = false;\n        \n        ElMessage({\n          type: 'success',\n          message: response.message || '题解恢复成功'\n        });\n        \n        // 刷新当前页面以显示恢复后的状态\n        await this.fetchSolutionDetail();\n      } catch (error) {\n        console.error('恢复题解失败:', error);\n        \n        const errorMsg = error.response?.data?.message || \n                         error.message || \n                         '恢复失败: 未知错误';\n        \n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    },\n    \n    // 跳转到题目详情\n    goToProblem(questionId) {\n      this.$router.push(`/${questionId}/problems`);\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '未知时间';\n      \n      const date = new Date(dateString);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    \n    // 获取规范化后的语言名称（用于CSS类名）\n    getNormalizedLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 特殊处理，比如将 'cpp' 转为 'c++'\n      const reverseMap = {\n        'cpp': 'c++',\n        'csharp': 'c#'\n      };\n      \n      return reverseMap[lowercased] || lowercased;\n    },\n    \n    // 获取显示用的语言名称\n    getDisplayLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 从特殊映射中获取显示名称\n      if (this.languageDisplayMap[lowercased]) {\n        return this.languageDisplayMap[lowercased];\n      }\n      \n      // 首字母大写\n      return language.charAt(0).toUpperCase() + language.slice(1);\n    },\n    \n    // 平台相关方法\n    getPlatformName(platform) {\n      const platforms = {\n        'luogu': '洛谷',\n        'leetcode': 'LeetCode'\n      };\n      return platforms[platform] || platform;\n    },\n    \n    // 平台标签样式\n    getPlatformTagType(platform) {\n      return {\n        luogu: 'success',\n        leetcode: 'warning'\n      }[platform] || 'info';\n    },\n    \n    // 难度标签样式\n    getDifficultyTagType(question) {\n      if (question.oj_platform === 'luogu') {\n        const levelMap = {\n          '入门': 'info',\n          '普及-': 'success',\n          '普及/提高-': 'success',\n          '普及+/提高': 'warning',\n          '提高+/省选-': 'danger',\n          '省选/NOI-': 'danger',\n          'NOI/NOI+': 'danger',\n          'CTSC': 'danger'\n        };\n        return levelMap[question.difficulty] || 'info';\n      }\n      \n      // LeetCode难度\n      return {\n        '简单': 'success',\n        '中等': 'warning',\n        '困难': 'danger'\n      }[question.difficulty] || 'info';\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary';\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0];\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info';\n    },\n    \n    // 获取标签名称\n    getTagName(tag) {\n      // 洛谷标签去掉前缀\n      const parts = tag.split('_');\n      if (parts.length > 1) {\n        return parts.slice(1).join('_');\n      }\n      return tag;\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 基础布局优化 */\n.solution-detail-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n}\n\n.page-container {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n/* 加载状态优化 */\n.loading-container {\n  padding: 3rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 错误状态优化 */\n.error-container {\n  padding: 2rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 已删除状态的横幅优化 */\n.deleted-banner {\n  margin-bottom: 1.5rem;\n}\n\n/* 主内容区网格布局 */\n.solution-content {\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 340px;\n  gap: 2rem;\n  align-items: start;\n}\n\n/* 左侧题解内容区 */\n.left-section {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n/* 右侧信息卡片区 */\n.right-section {\n  display: grid;\n  gap: 1.5rem;\n  position: sticky;\n  top: 1rem;\n  align-self: start;\n}\n\n/* 卡片通用样式 */\n.el-card {\n  border-radius: 12px;\n  border: none;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n}\n\n.el-card:hover {\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n/* 题解描述卡片 */\n.solution-description-card {\n  padding: 2rem;\n  background: white;\n}\n\n.solution-title {\n  font-size: 1.8rem;\n  color: #2d3748;\n  margin-bottom: 1.2rem;\n  font-weight: 600;\n  line-height: 1.3;\n  border-bottom: 1px solid #e2e8f0;\n  padding-bottom: 0.8rem;\n}\n\n.solution-metadata {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.2rem;\n  margin-bottom: 2rem;\n  color: #4a5568;\n  font-size: 0.95rem;\n  align-items: center;\n}\n\n.solution-time {\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n\n/* 语言标签样式 */\n.lang-tag-python {\n  background-color: #3776ab;\n  color: white;\n}\n\n.lang-tag-java {\n  background-color: #f89820;\n  color: white;\n}\n\n.lang-tag-c\\+\\+ {\n  background-color: #00599c;\n  color: white;\n}\n\n.lang-tag-javascript {\n  background-color: #f7df1e;\n  color: #000;\n}\n\n.lang-tag-go {\n  background-color: #00acd7;\n  color: white;\n}\n\n.lang-tag-rust {\n  background-color: #b7410e;\n  color: white;\n}\n\n.lang-tag-c\\# {\n  background-color: #68217a;\n  color: white;\n}\n\n/* 题目信息卡片 */\n.question-info-card {\n  padding: 1.5rem;\n}\n\n.question-info-card h2 {\n  font-size: 1.4rem;\n  color: #2d3748;\n  margin-bottom: 1rem;\n  font-weight: 600;\n  line-height: 1.3;\n}\n\n.clickable-title {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.clickable-title:hover {\n  color: #3182ce;\n}\n\n.clickable-title i {\n  font-size: 0.8rem;\n  opacity: 0.7;\n}\n\n.info-meta {\n  display: grid;\n  gap: 0.8rem;\n  color: #4a5568;\n  font-size: 0.95rem;\n  margin: 1.5rem 0;\n}\n\n.info-meta div {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n/* 操作按钮组 */\n.action-buttons {\n  display: flex;\n  flex-wrap: nowrap; /* 不允许按钮换行 */\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n  justify-content: space-between; /* 均匀分布按钮 */\n  width: 100%;\n}\n\n.action-buttons .el-button {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: all 0.3s ease;\n  width: calc(33.33% - 0.53rem); /* 确保三个按钮大小一致 */\n  min-width: 0; /* 允许按钮缩小到比内容还小 */\n  white-space: nowrap; /* 文字不换行 */\n}\n\n/* 标签卡片 */\n.question-tags-card {\n  padding: 1.5rem;\n}\n\n.difficulty-section,\n.tags-section {\n  margin-bottom: 1.5rem;\n}\n\n.difficulty-section h3,\n.tags-section h3 {\n  font-size: 1.1rem;\n  color: #2d3748;\n  margin-bottom: 0.8rem;\n  font-weight: 500;\n}\n\n/* 标签容器 */\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.6rem;\n}\n\n.algorithm-tag {\n  transition: all 0.3s ease;\n  margin: 0;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 内容渲染样式优化 */\n.markdown-content {\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n  color: #2d3748;\n  line-height: 1.7;\n  font-size: 1rem;\n}\n\n/* 标题样式 */\n.markdown-content :deep(h1),\n.markdown-content :deep(h2),\n.markdown-content :deep(h3) {\n  color: #1a202c;\n  font-weight: 600;\n  margin: 1.8rem 0 1rem;\n  scroll-margin-top: 80px; /* 为锚点跳转留出空间 */\n}\n\n.markdown-content :deep(h1) {\n  font-size: 1.8rem;\n  border-bottom: 1px solid #e2e8f0;\n  padding-bottom: 0.5rem;\n}\n\n.markdown-content :deep(h2) {\n  font-size: 1.5rem;\n}\n\n.markdown-content :deep(h3) {\n  font-size: 1.2rem;\n}\n\n/* 段落样式 */\n.markdown-content :deep(p) {\n  margin: 1.2rem 0;\n  color: #4a5568;\n}\n\n/* 代码块样式 */\n.markdown-content :deep(pre) {\n  background: #1e293b;\n  border-radius: 8px;\n  padding: 1.2rem;\n  margin: 1.5rem 0;\n  overflow-x: auto;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(code) {\n  font-family: 'Fira Code', 'SFMono-Regular', Consolas, monospace;\n  background: transparent;\n  color: #f8fafc;\n  padding: 0;\n  font-size: 0.9em;\n}\n\n/* 行内代码 */\n.markdown-content :deep(p > code) {\n  background: #edf2f7;\n  color: #c53030;\n  padding: 0.2em 0.4em;\n  border-radius: 4px;\n  font-size: 0.9em;\n}\n\n/* 引用块 */\n.markdown-content :deep(blockquote) {\n  border-left: 4px solid #4299e1;\n  background: #ebf8ff;\n  color: #2b6cb0;\n  padding: 1rem 1.5rem;\n  margin: 1.5rem 0;\n  border-radius: 0 4px 4px 0;\n}\n\n/* 表格样式 */\n.markdown-content :deep(table) {\n  width: 100%;\n  margin: 1.5rem 0;\n  border-collapse: collapse;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(th),\n.markdown-content :deep(td) {\n  border: 1px solid #e2e8f0;\n  padding: 0.75rem 1rem;\n  text-align: left;\n}\n\n.markdown-content :deep(th) {\n  background: #f7fafc;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n/* 列表样式 */\n.markdown-content :deep(ul),\n.markdown-content :deep(ol) {\n  margin: 1.5rem 0;\n  padding-left: 2rem;\n}\n\n.markdown-content :deep(li) {\n  margin: 0.5rem 0;\n  color: #4a5568;\n}\n\n/* 链接样式 */\n.markdown-content :deep(a) {\n  color: #4299e1;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.markdown-content :deep(a:hover) {\n  color: #2b6cb0;\n  text-decoration: underline;\n}\n\n/* 图片样式 */\n.markdown-content :deep(img) {\n  max-width: 100%;\n  height: auto;\n  border-radius: 6px;\n  margin: 1.5rem auto;\n  display: block;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n/* 对话框样式优化 */\n.el-dialog {\n  border-radius: 12px;\n  max-width: 500px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 1024px) {\n  .solution-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .right-section {\n    position: static;\n  }\n}\n\n@media (max-width: 768px) {\n  .page-container {\n    padding: 1rem;\n  }\n  \n  .action-buttons {\n    /* 保持水平排列 */\n    display: flex;\n    flex-wrap: wrap;\n  }\n  \n  .solution-description-card,\n  .question-info-card,\n  .question-tags-card {\n    padding: 1.2rem;\n  }\n  \n  .solution-title {\n    font-size: 1.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .action-buttons {\n    flex-direction: row; /* 强制水平排列 */\n    flex-wrap: nowrap;\n  }\n  \n  .action-buttons .el-button {\n    font-size: 0.75rem; /* 减小字体大小 */\n    padding: 8px 12px; /* 调整内边距 */\n    width: calc(33.33% - 0.53rem); /* 保持宽度均匀 */\n  }\n  \n  .action-buttons .el-button .el-icon {\n    margin-right: 2px; /* 减小图标间距 */\n  }\n  \n  .solution-metadata {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.8rem;\n  }\n}\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f5f9;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #cbd5e0;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a0aec0;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}