{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"draft-detail-view\"\n};\nconst _hoisted_2 = {\n  class: \"page-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error-container\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"draft-content\"\n};\nconst _hoisted_6 = {\n  class: \"left-section\"\n};\nconst _hoisted_7 = {\n  class: \"deleted-banner\"\n};\nconst _hoisted_8 = {\n  class: \"draft-title\"\n};\nconst _hoisted_9 = {\n  class: \"draft-metadata\"\n};\nconst _hoisted_10 = {\n  class: \"draft-time\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"draft-time\"\n};\nconst _hoisted_12 = {\n  class: \"draft-language\"\n};\nconst _hoisted_13 = {\n  class: \"draft-status\"\n};\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = {\n  class: \"right-section\"\n};\nconst _hoisted_16 = {\n  class: \"info-meta\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"action-buttons\"\n};\nconst _hoisted_20 = {\n  class: \"difficulty-section\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"tags-section\"\n};\nconst _hoisted_22 = {\n  class: \"tags-container\"\n};\nconst _hoisted_23 = {\n  key: 3,\n  class: \"draft-content\"\n};\nconst _hoisted_24 = {\n  class: \"left-section\"\n};\nconst _hoisted_25 = {\n  class: \"draft-title\"\n};\nconst _hoisted_26 = {\n  class: \"draft-metadata\"\n};\nconst _hoisted_27 = {\n  class: \"draft-time\"\n};\nconst _hoisted_28 = {\n  key: 0,\n  class: \"draft-time\"\n};\nconst _hoisted_29 = {\n  class: \"draft-language\"\n};\nconst _hoisted_30 = {\n  class: \"draft-status\"\n};\nconst _hoisted_31 = [\"innerHTML\"];\nconst _hoisted_32 = {\n  class: \"right-section\"\n};\nconst _hoisted_33 = {\n  class: \"info-meta\"\n};\nconst _hoisted_34 = {\n  key: 0\n};\nconst _hoisted_35 = {\n  key: 1\n};\nconst _hoisted_36 = {\n  key: 0,\n  class: \"action-buttons\"\n};\nconst _hoisted_37 = {\n  class: \"difficulty-section\"\n};\nconst _hoisted_38 = {\n  key: 0,\n  class: \"tags-section\"\n};\nconst _hoisted_39 = {\n  class: \"tags-container\"\n};\nconst _hoisted_40 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_41 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_42 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_RefreshLeft = _resolveComponent(\"RefreshLeft\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_EditPen = _resolveComponent(\"EditPen\");\n  const _component_View = _resolveComponent(\"View\");\n  const _component_Upload = _resolveComponent(\"Upload\");\n  const _component_Delete = _resolveComponent(\"Delete\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"main\", _hoisted_2, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n    rows: 10,\n    animated: \"\"\n  })])) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_alert, {\n    title: $data.error,\n    type: \"error\",\n    closable: false\n  }, null, 8, [\"title\"])])) : $data.draft && $data.draft.is_deleted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_card, {\n    class: \"draft-description-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_alert, {\n      title: \"此草稿已被删除\",\n      type: \"warning\",\n      closable: false\n    })]), _createElementVNode(\"h1\", _hoisted_8, \"题目 #\" + _toDisplayString($data.draft.question_id) + \" 的解题思路（草稿）\", 1), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, [_cache[10] || (_cache[10] = _createElementVNode(\"i\", {\n      class: \"el-icon-time\"\n    }, null, -1)), _createTextVNode(\" 创建于: \" + _toDisplayString($options.formatDate($data.draft.created_at)), 1)]), $data.draft.updated_at !== $data.draft.created_at ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, [_cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n      class: \"el-icon-edit-outline\"\n    }, null, -1)), _createTextVNode(\" 更新于: \" + _toDisplayString($options.formatDate($data.draft.updated_at)), 1)])) : _createCommentVNode(\"\", true), _createElementVNode(\"span\", _hoisted_12, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      class: _normalizeClass('lang-tag-' + $options.getNormalizedLanguage($data.draft.language))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getDisplayLanguage($data.draft.language)), 1)]),\n      _: 1\n    }, 8, [\"class\"])]), _createElementVNode(\"span\", _hoisted_13, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      type: \"warning\"\n    }, {\n      default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"已删除\")])),\n      _: 1\n    }), _createVNode(_component_el_tag, {\n      size: \"small\",\n      type: \"info\"\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"草稿\")])),\n      _: 1\n    })])]), _createElementVNode(\"div\", {\n      ref: \"markdownContent\",\n      class: \"markdown-content\",\n      innerHTML: $options.compiledMarkdown\n    }, null, 8, _hoisted_14)]),\n    _: 1\n  })]), _createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_el_card, {\n    class: \"question-info-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h2\", {\n      onClick: _cache[0] || (_cache[0] = $event => $options.goToProblem($data.draft.question_id)),\n      class: \"clickable-title\"\n    }, [_createTextVNode(_toDisplayString($data.questionDetails?.name || `题目 #${$data.draft.question_id}`) + \" \", 1), _cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n      class: \"el-icon-link\"\n    }, null, -1))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", null, \"题目ID: \" + _toDisplayString($data.draft.question_id), 1), $data.questionDetails?.ext_question_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"外部ID: \" + _toDisplayString($data.questionDetails.ext_question_id), 1)) : _createCommentVNode(\"\", true), $data.questionDetails?.oj_platform ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_cache[15] || (_cache[15] = _createTextVNode(\" 平台: \")), _createVNode(_component_el_tag, {\n      type: $options.getPlatformTagType($data.questionDetails.oj_platform),\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getPlatformName($data.questionDetails.oj_platform)), 1)]),\n      _: 1\n    }, 8, [\"type\"])])) : _createCommentVNode(\"\", true)]), $options.canManageDraft ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createVNode(_component_el_button, {\n      type: \"warning\",\n      size: \"small\",\n      onClick: $options.handleRestore\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_RefreshLeft)]),\n        _: 1\n      }), _cache[16] || (_cache[16] = _createTextVNode(\" 恢复 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $options.handleEdit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_EditPen)]),\n        _: 1\n      }), _cache[17] || (_cache[17] = _createTextVNode(\" 编辑 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"info\",\n      size: \"small\",\n      onClick: _cache[1] || (_cache[1] = $event => $options.goToProblem($data.draft.question_id))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_View)]),\n        _: 1\n      }), _cache[18] || (_cache[18] = _createTextVNode(\" 查看题目 \"))]),\n      _: 1\n    })])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }), $data.questionDetails ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"question-tags-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_cache[19] || (_cache[19] = _createElementVNode(\"h3\", null, \"难度级别\", -1)), _createVNode(_component_el_tag, {\n      type: $options.getDifficultyTagType($data.questionDetails),\n      effect: \"dark\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.questionDetails.difficulty), 1)]),\n      _: 1\n    }, 8, [\"type\"])]), $data.questionDetails.algorithm_tags?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"算法标签\", -1)), _createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questionDetails.algorithm_tags, tag => {\n      return _openBlock(), _createBlock(_component_el_tag, {\n        key: tag,\n        type: $options.getTagType(tag, $data.questionDetails.oj_platform),\n        class: \"algorithm-tag\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n        _: 2\n      }, 1032, [\"type\"]);\n    }), 128))])])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_el_card, {\n    class: \"draft-description-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h1\", _hoisted_25, \"题目 #\" + _toDisplayString($data.draft.question_id) + \" 的解题思路（草稿）\", 1), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"span\", _hoisted_27, [_cache[21] || (_cache[21] = _createElementVNode(\"i\", {\n      class: \"el-icon-time\"\n    }, null, -1)), _createTextVNode(\" 创建于: \" + _toDisplayString($options.formatDate($data.draft.created_at)), 1)]), $data.draft.updated_at !== $data.draft.created_at ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, [_cache[22] || (_cache[22] = _createElementVNode(\"i\", {\n      class: \"el-icon-edit-outline\"\n    }, null, -1)), _createTextVNode(\" 更新于: \" + _toDisplayString($options.formatDate($data.draft.updated_at)), 1)])) : _createCommentVNode(\"\", true), _createElementVNode(\"span\", _hoisted_29, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      class: _normalizeClass('lang-tag-' + $options.getNormalizedLanguage($data.draft.language))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getDisplayLanguage($data.draft.language)), 1)]),\n      _: 1\n    }, 8, [\"class\"])]), _createElementVNode(\"span\", _hoisted_30, [_createVNode(_component_el_tag, {\n      size: \"small\",\n      type: \"info\"\n    }, {\n      default: _withCtx(() => _cache[23] || (_cache[23] = [_createTextVNode(\"草稿\")])),\n      _: 1\n    })])]), _createElementVNode(\"div\", {\n      ref: \"markdownContent\",\n      class: \"markdown-content\",\n      innerHTML: $options.compiledMarkdown\n    }, null, 8, _hoisted_31)]),\n    _: 1\n  })]), _createElementVNode(\"div\", _hoisted_32, [_createVNode(_component_el_card, {\n    class: \"question-info-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h2\", {\n      onClick: _cache[2] || (_cache[2] = $event => $options.goToProblem($data.draft.question_id)),\n      class: \"clickable-title\"\n    }, [_createTextVNode(_toDisplayString($data.questionDetails?.name || `题目 #${$data.draft.question_id}`) + \" \", 1), _cache[24] || (_cache[24] = _createElementVNode(\"i\", {\n      class: \"el-icon-link\"\n    }, null, -1))]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", null, \"题目ID: \" + _toDisplayString($data.draft.question_id), 1), $data.questionDetails?.ext_question_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, \"外部ID: \" + _toDisplayString($data.questionDetails.ext_question_id), 1)) : _createCommentVNode(\"\", true), $data.questionDetails?.oj_platform ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_cache[25] || (_cache[25] = _createTextVNode(\" 平台: \")), _createVNode(_component_el_tag, {\n      type: $options.getPlatformTagType($data.questionDetails.oj_platform),\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getPlatformName($data.questionDetails.oj_platform)), 1)]),\n      _: 1\n    }, 8, [\"type\"])])) : _createCommentVNode(\"\", true)]), $options.canManageDraft ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [!$data.draft.is_deleted ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 0,\n      type: \"success\",\n      size: \"small\",\n      onClick: $options.handlePublish\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Upload)]),\n        _: 1\n      }), _cache[26] || (_cache[26] = _createTextVNode(\" 发布 \"))]),\n      _: 1\n    }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), _createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $options.handleEdit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_EditPen)]),\n        _: 1\n      }), _cache[27] || (_cache[27] = _createTextVNode(\" 编辑 \"))]),\n      _: 1\n    }, 8, [\"onClick\"]), !$data.draft.is_deleted ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 1,\n      type: \"danger\",\n      size: \"small\",\n      onClick: $options.handleDelete\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Delete)]),\n        _: 1\n      }), _cache[28] || (_cache[28] = _createTextVNode(\" 删除 \"))]),\n      _: 1\n    }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), $data.draft.is_deleted ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 2,\n      type: \"warning\",\n      size: \"small\",\n      onClick: $options.handleRestore\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_RefreshLeft)]),\n        _: 1\n      }), _cache[29] || (_cache[29] = _createTextVNode(\" 恢复 \"))]),\n      _: 1\n    }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), _createVNode(_component_el_button, {\n      type: \"info\",\n      size: \"small\",\n      onClick: _cache[3] || (_cache[3] = $event => $options.goToProblem($data.draft.question_id))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_View)]),\n        _: 1\n      }), _cache[30] || (_cache[30] = _createTextVNode(\" 查看题目 \"))]),\n      _: 1\n    })])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }), $data.questionDetails ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"question-tags-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_37, [_cache[31] || (_cache[31] = _createElementVNode(\"h3\", null, \"难度级别\", -1)), _createVNode(_component_el_tag, {\n      type: $options.getDifficultyTagType($data.questionDetails),\n      effect: \"dark\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.questionDetails.difficulty), 1)]),\n      _: 1\n    }, 8, [\"type\"])]), $data.questionDetails.algorithm_tags?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_cache[32] || (_cache[32] = _createElementVNode(\"h3\", null, \"算法标签\", -1)), _createElementVNode(\"div\", _hoisted_39, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questionDetails.algorithm_tags, tag => {\n      return _openBlock(), _createBlock(_component_el_tag, {\n        key: tag,\n        type: $options.getTagType(tag, $data.questionDetails.oj_platform),\n        class: \"algorithm-tag\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getTagName(tag)), 1)]),\n        _: 2\n      }, 1032, [\"type\"]);\n    }), 128))])])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)])]))]), _createVNode(_component_el_dialog, {\n    modelValue: $data.deleteDialogVisible,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.deleteDialogVisible = $event),\n    title: \"确认删除\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_40, [_createVNode(_component_el_button, {\n      onClick: _cache[4] || (_cache[4] = $event => $data.deleteDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[33] || (_cache[33] = [_createTextVNode(\"取消\")])),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"danger\",\n      onClick: $options.confirmDelete,\n      loading: $data.processing\n    }, {\n      default: _withCtx(() => _cache[34] || (_cache[34] = [_createTextVNode(\"确认删除\")])),\n      _: 1\n    }, 8, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_cache[35] || (_cache[35] = _createElementVNode(\"span\", null, \"确定要删除这篇草稿吗？此操作不可逆。\", -1))]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.restoreDialogVisible,\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.restoreDialogVisible = $event),\n    title: \"确认恢复\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_41, [_createVNode(_component_el_button, {\n      onClick: _cache[6] || (_cache[6] = $event => $data.restoreDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[36] || (_cache[36] = [_createTextVNode(\"取消\")])),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.confirmRestore,\n      loading: $data.processing\n    }, {\n      default: _withCtx(() => _cache[37] || (_cache[37] = [_createTextVNode(\"确认恢复\")])),\n      _: 1\n    }, 8, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_cache[38] || (_cache[38] = _createElementVNode(\"span\", null, \"确定要恢复这篇草稿吗？\", -1))]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.publishDialogVisible,\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.publishDialogVisible = $event),\n    title: \"确认发布\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_42, [_createVNode(_component_el_button, {\n      onClick: _cache[8] || (_cache[8] = $event => $data.publishDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[39] || (_cache[39] = [_createTextVNode(\"取消\")])),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"success\",\n      onClick: $options.confirmPublish,\n      loading: $data.processing\n    }, {\n      default: _withCtx(() => _cache[40] || (_cache[40] = [_createTextVNode(\"确认发布\")])),\n      _: 1\n    }, 8, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_cache[41] || (_cache[41] = _createElementVNode(\"span\", null, \"确定要将此草稿发布为正式题解吗？\", -1))]),\n    _: 1\n  }, 8, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","$data","loading","_hoisted_3","_component_el_skeleton","rows","animated","error","_hoisted_4","_component_el_alert","title","type","closable","draft","is_deleted","_hoisted_5","_hoisted_6","_component_el_card","default","_withCtx","_hoisted_7","_hoisted_8","_toDisplayString","question_id","_hoisted_9","_hoisted_10","_createTextVNode","$options","formatDate","created_at","updated_at","_hoisted_11","_createCommentVNode","_hoisted_12","_component_el_tag","size","_normalizeClass","getNormalizedLanguage","language","getDisplayLanguage","_","_hoisted_13","_cache","ref","innerHTML","compiledMarkdown","_hoisted_14","_hoisted_15","onClick","$event","goToProblem","questionDetails","name","_hoisted_16","ext_question_id","_hoisted_17","oj_platform","_hoisted_18","getPlatformTagType","getPlatformName","canManageDraft","_hoisted_19","_component_el_button","handleRestore","_component_el_icon","_component_RefreshLeft","handleEdit","_component_EditPen","_component_View","_createBlock","_hoisted_20","getDifficultyTagType","effect","difficulty","algorithm_tags","length","_hoisted_21","_hoisted_22","_Fragment","_renderList","tag","getTagType","getTagName","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","handlePublish","_component_Upload","handleDelete","_component_Delete","_hoisted_37","_hoisted_38","_hoisted_39","_component_el_dialog","modelValue","deleteDialogVisible","width","footer","_hoisted_40","confirmDelete","processing","restoreDialogVisible","_hoisted_41","confirmRestore","publishDialogVisible","_hoisted_42","confirmPublish"],"sources":["/var/www/AlgorithmWeb/algorithmFrontend/src/views/DraftDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"draft-detail-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      \n      <div v-else-if=\"error\" class=\"error-container\">\n        <el-alert\n          :title=\"error\"\n          type=\"error\"\n          :closable=\"false\"\n        />\n      </div>\n      \n      <div v-else-if=\"draft && draft.is_deleted\" class=\"draft-content\">\n        <div class=\"left-section\">\n          <el-card class=\"draft-description-card\">\n            <div class=\"deleted-banner\">\n              <el-alert\n                title=\"此草稿已被删除\"\n                type=\"warning\"\n                :closable=\"false\"\n              />\n            </div>\n            \n            <h1 class=\"draft-title\">题目 #{{ draft.question_id }} 的解题思路（草稿）</h1>\n            \n            <div class=\"draft-metadata\">\n              <span class=\"draft-time\">\n                <i class=\"el-icon-time\"></i>\n                创建于: {{ formatDate(draft.created_at) }}\n              </span>\n              <span class=\"draft-time\" v-if=\"draft.updated_at !== draft.created_at\">\n                <i class=\"el-icon-edit-outline\"></i>\n                更新于: {{ formatDate(draft.updated_at) }}\n              </span>\n              <span class=\"draft-language\">\n                <el-tag size=\"small\" :class=\"'lang-tag-' + getNormalizedLanguage(draft.language)\">\n                  {{ getDisplayLanguage(draft.language) }}\n                </el-tag>\n              </span>\n              <span class=\"draft-status\">\n                <el-tag size=\"small\" type=\"warning\">已删除</el-tag>\n                <el-tag size=\"small\" type=\"info\">草稿</el-tag>\n              </span>\n            </div>\n            \n            <!-- 草稿内容 - Markdown渲染 -->\n            <div ref=\"markdownContent\" class=\"markdown-content\" v-html=\"compiledMarkdown\"></div>\n          </el-card>\n        </div>\n        \n        <div class=\"right-section\">\n          <!-- 题目信息卡片 -->\n          <el-card class=\"question-info-card\">\n            <h2 @click=\"goToProblem(draft.question_id)\" class=\"clickable-title\">\n              {{ questionDetails?.name || `题目 #${draft.question_id}` }}\n              <i class=\"el-icon-link\"></i>\n            </h2>\n            <div class=\"info-meta\">\n              <div>题目ID: {{ draft.question_id }}</div>\n              <div v-if=\"questionDetails?.ext_question_id\">外部ID: {{ questionDetails.ext_question_id }}</div>\n              <div v-if=\"questionDetails?.oj_platform\">\n                平台: \n                <el-tag :type=\"getPlatformTagType(questionDetails.oj_platform)\" size=\"small\">\n                  {{ getPlatformName(questionDetails.oj_platform) }}\n                </el-tag>\n              </div>\n            </div>\n            \n            <div class=\"action-buttons\" v-if=\"canManageDraft\">\n              <!-- 对已删除草稿显示恢复、编辑和查看题目按钮 -->\n              <el-button type=\"warning\" size=\"small\" @click=\"handleRestore\">\n                <el-icon><RefreshLeft /></el-icon>\n                恢复\n              </el-button>\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit\">\n                <el-icon><EditPen /></el-icon>\n                编辑\n              </el-button>\n              <el-button type=\"info\" size=\"small\" @click=\"goToProblem(draft.question_id)\">\n                <el-icon><View /></el-icon>\n                查看题目\n              </el-button>\n            </div>\n          </el-card>\n          \n          <!-- 题目标签和难度 -->\n          <el-card class=\"question-tags-card\" v-if=\"questionDetails\">\n            <div class=\"difficulty-section\">\n              <h3>难度级别</h3>\n              <el-tag \n                :type=\"getDifficultyTagType(questionDetails)\"\n                effect=\"dark\"\n              >\n                {{ questionDetails.difficulty }}\n              </el-tag>\n            </div>\n            \n            <div class=\"tags-section\" v-if=\"questionDetails.algorithm_tags?.length\">\n              <h3>算法标签</h3>\n              <div class=\"tags-container\">\n                <el-tag \n                  v-for=\"tag in questionDetails.algorithm_tags\" \n                  :key=\"tag\"\n                  :type=\"getTagType(tag, questionDetails.oj_platform)\"\n                  class=\"algorithm-tag\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </div>\n          </el-card>\n        </div>\n      </div>\n      \n      <div v-else class=\"draft-content\">\n        <div class=\"left-section\">\n          <el-card class=\"draft-description-card\">\n            <h1 class=\"draft-title\">题目 #{{ draft.question_id }} 的解题思路（草稿）</h1>\n            \n            <div class=\"draft-metadata\">\n              <span class=\"draft-time\">\n                <i class=\"el-icon-time\"></i>\n                创建于: {{ formatDate(draft.created_at) }}\n              </span>\n              <span class=\"draft-time\" v-if=\"draft.updated_at !== draft.created_at\">\n                <i class=\"el-icon-edit-outline\"></i>\n                更新于: {{ formatDate(draft.updated_at) }}\n              </span>\n              <span class=\"draft-language\">\n                <el-tag size=\"small\" :class=\"'lang-tag-' + getNormalizedLanguage(draft.language)\">\n                  {{ getDisplayLanguage(draft.language) }}\n                </el-tag>\n              </span>\n              <span class=\"draft-status\">\n                <el-tag size=\"small\" type=\"info\">草稿</el-tag>\n              </span>\n            </div>\n            \n            <!-- 草稿内容 - Markdown渲染 -->\n            <div ref=\"markdownContent\" class=\"markdown-content\" v-html=\"compiledMarkdown\"></div>\n          </el-card>\n        </div>\n        \n        <div class=\"right-section\">\n          <!-- 题目信息卡片 -->\n          <el-card class=\"question-info-card\">\n            <h2 @click=\"goToProblem(draft.question_id)\" class=\"clickable-title\">\n              {{ questionDetails?.name || `题目 #${draft.question_id}` }}\n              <i class=\"el-icon-link\"></i>\n            </h2>\n            <div class=\"info-meta\">\n              <div>题目ID: {{ draft.question_id }}</div>\n              <div v-if=\"questionDetails?.ext_question_id\">外部ID: {{ questionDetails.ext_question_id }}</div>\n              <div v-if=\"questionDetails?.oj_platform\">\n                平台: \n                <el-tag :type=\"getPlatformTagType(questionDetails.oj_platform)\" size=\"small\">\n                  {{ getPlatformName(questionDetails.oj_platform) }}\n                </el-tag>\n              </div>\n            </div>\n            \n            <div class=\"action-buttons\" v-if=\"canManageDraft\">\n              <!-- 发布按钮（只在草稿未删除时显示） -->\n              <el-button v-if=\"!draft.is_deleted\" type=\"success\" size=\"small\" @click=\"handlePublish\">\n                <el-icon><Upload /></el-icon>\n                发布\n              </el-button>\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit\">\n                <el-icon><EditPen /></el-icon>\n                编辑\n              </el-button>\n              <el-button v-if=\"!draft.is_deleted\" type=\"danger\" size=\"small\" @click=\"handleDelete\">\n                <el-icon><Delete /></el-icon>\n                删除\n              </el-button>\n              <el-button v-if=\"draft.is_deleted\" type=\"warning\" size=\"small\" @click=\"handleRestore\">\n                <el-icon><RefreshLeft /></el-icon>\n                恢复\n              </el-button>\n              <el-button type=\"info\" size=\"small\" @click=\"goToProblem(draft.question_id)\">\n                <el-icon><View /></el-icon>\n                查看题目\n              </el-button>\n            </div>\n          </el-card>\n          \n          <!-- 题目标签和难度 -->\n          <el-card class=\"question-tags-card\" v-if=\"questionDetails\">\n            <div class=\"difficulty-section\">\n              <h3>难度级别</h3>\n              <el-tag \n                :type=\"getDifficultyTagType(questionDetails)\"\n                effect=\"dark\"\n              >\n                {{ questionDetails.difficulty }}\n              </el-tag>\n            </div>\n            \n            <div class=\"tags-section\" v-if=\"questionDetails.algorithm_tags?.length\">\n              <h3>算法标签</h3>\n              <div class=\"tags-container\">\n                <el-tag \n                  v-for=\"tag in questionDetails.algorithm_tags\" \n                  :key=\"tag\"\n                  :type=\"getTagType(tag, questionDetails.oj_platform)\"\n                  class=\"algorithm-tag\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </div>\n          </el-card>\n        </div>\n      </div>\n    </main>\n\n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"确认删除\"\n      width=\"30%\"\n    >\n      <span>确定要删除这篇草稿吗？此操作不可逆。</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"processing\">确认删除</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 恢复确认对话框 -->\n    <el-dialog\n      v-model=\"restoreDialogVisible\"\n      title=\"确认恢复\"\n      width=\"30%\"\n    >\n      <span>确定要恢复这篇草稿吗？</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"restoreDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmRestore\" :loading=\"processing\">确认恢复</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 发布确认对话框 -->\n    <el-dialog\n      v-model=\"publishDialogVisible\"\n      title=\"确认发布\"\n      width=\"30%\"\n    >\n      <span>确定要将此草稿发布为正式题解吗？</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"publishDialogVisible = false\">取消</el-button>\n          <el-button type=\"success\" @click=\"confirmPublish\" :loading=\"processing\">确认发布</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue';\nimport { getDraftDetail } from '@/api/solution'; // 使用solution API获取草稿\nimport { getQuestionDetail } from '@/api/question';\nimport request from '@/api/request';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\nimport { EditPen, Delete, View, RefreshLeft, Upload } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\n\nexport default {\n  name: 'DraftDetailView',\n  components: {\n    AppHeader,\n    EditPen,\n    Delete,\n    View,\n    RefreshLeft,\n    Upload\n  },\n  data() {\n    return {\n      draftId: this.$route.params.id,\n      draft: null,\n      questionDetails: null,\n      loading: true,\n      error: null,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        breaks: true\n      }),\n      \n      // 当前用户信息（实际应从用户状态获取）\n      currentUserId: null, // 应从用户状态获取\n      \n      // 删除、恢复和发布相关状态\n      deleteDialogVisible: false,\n      restoreDialogVisible: false,\n      publishDialogVisible: false,\n      processing: false,\n      \n      // 语言名称到显示名称的映射\n      languageDisplayMap: {\n        'cpp': 'C++',\n        'csharp': 'C#',\n        'javascript': 'JavaScript',\n        'python': 'Python',\n        'java': 'Java',\n        'go': 'Go',\n        'rust': 'Rust'\n      }\n    };\n  },\n  computed: {\n    // 渲染Markdown\n    compiledMarkdown() {\n      if (!this.draft) return '';\n      \n      try {\n        // 使用content_text作为Markdown内容\n        const content = String(this.draft.content_text || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    },\n    \n    // 检查当前用户是否可以管理草稿（编辑、删除、恢复、发布）\n    canManageDraft() {\n      // 这里应该根据实际权限检查逻辑实现\n      // 例如检查当前登录用户是否是草稿作者或管理员\n      return true; // 为了示例，此处默认为true\n    }\n  },\n  mounted() {\n    this.fetchDraftDetail();\n  },\n  methods: {\n    // 获取草稿详情\n    async fetchDraftDetail() {\n      this.loading = true;\n      this.error = null;\n      \n      try {\n        // 使用getSolutionDetail API但访问的是草稿路径\n        const response = await getDraftDetail(this.draftId, true); // 添加参数表示获取草稿\n        \n        if (response.data && response.data.code === 200) {\n          this.draft = response.data.data;\n        } else {\n          this.draft = response.data;\n        }\n        \n        // 获取题目详情\n        if (this.draft && this.draft.question_id) {\n          await this.fetchQuestionDetail(this.draft.question_id);\n        }\n      } catch (error) {\n        console.error('获取草稿详情失败:', error);\n        this.error = '获取草稿详情失败: ' + (error.message || '未知错误');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 获取题目详情\n    async fetchQuestionDetail(questionId) {\n      try {\n        const response = await getQuestionDetail(questionId);\n        \n        if (response.data && response.data.code === 200) {\n          this.questionDetails = response.data.data;\n        } else {\n          this.questionDetails = response.data;\n        }\n        \n        // 确保算法标签是数组\n        if (this.questionDetails && typeof this.questionDetails.algorithm_tags === 'string') {\n          this.questionDetails.algorithm_tags = this.questionDetails.algorithm_tags\n            .split(',')\n            .map(tag => tag.trim())\n            .filter(tag => tag.length > 0);\n        }\n      } catch (error) {\n        console.error('获取题目详情失败:', error);\n      }\n    },\n    \n    // 编辑按钮处理\n    handleEdit() {\n      if (!this.draft) return;\n      // 跳转到编辑页面\n      this.$router.push(`/${this.draft.id}/drafts/update`);\n    },\n    \n    // 删除按钮处理\n    handleDelete() {\n      if (!this.draft || this.draft.is_deleted) return;\n      this.deleteDialogVisible = true;\n    },\n    \n    // 恢复按钮处理\n    handleRestore() {\n      if (!this.draft) return;\n      this.restoreDialogVisible = true;\n    },\n    \n    // 发布按钮处理\n    handlePublish() {\n      if (!this.draft || this.draft.is_deleted) return;\n      this.publishDialogVisible = true;\n    },\n    \n    // 确认删除\n    async confirmDelete() {\n      if (!this.draft) return;\n      \n      this.processing = true;\n      try {\n        const response = await request({\n          url: '/api/solution/delete/',\n          method: 'post',\n          data: { id: this.draft.id }\n        });\n        \n        this.deleteDialogVisible = false;\n        \n        ElMessage({\n          type: 'success',\n          message: response.message || '草稿删除成功'\n        });\n        \n        // 刷新当前页面以显示删除状态\n        await this.fetchDraftDetail();\n      } catch (error) {\n        console.error('删除草稿失败:', error);\n        \n        const errorMsg = error.response?.data?.message || \n                         error.message || \n                         '删除失败: 未知错误';\n        \n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    },\n    \n    // 确认恢复\n    async confirmRestore() {\n      if (!this.draft) return;\n      \n      this.processing = true;\n      try {\n        const response = await request({\n          url: '/api/solution/restore/',\n          method: 'post',\n          data: { id: this.draft.id }\n        });\n        \n        this.restoreDialogVisible = false;\n        \n        ElMessage({\n          type: 'success',\n          message: response.message || '草稿恢复成功'\n        });\n        \n        // 刷新当前页面以显示恢复后的状态\n        await this.fetchDraftDetail();\n      } catch (error) {\n        console.error('恢复草稿失败:', error);\n        \n        const errorMsg = error.response?.data?.message || \n                         error.message || \n                         '恢复失败: 未知错误';\n        \n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    },\n    \n    // 确认发布为题解\n    async confirmPublish() {\n      if (!this.draft || this.draft.is_deleted) return;\n      \n      this.processing = true;\n      try {\n        // 1. 发送请求（注意解构出data）\n        const { data: responseData } = await request({\n          url: '/api/solution/pub/',\n          method: 'post',\n          data: { id: this.draft.id }\n        });\n\n        // 2. 关闭对话框\n        this.publishDialogVisible = false;\n        \n        // 3. 处理响应（现在正确检查responseData.code）\n        if (responseData.code === 200) {\n          ElMessage({\n            type: 'success',\n            message: responseData.message || '发布成功'\n          });\n          \n          // 4. 跳转逻辑（正确获取嵌套的id）\n          const solutionId = responseData.data?.id;\n          if (solutionId) {\n            this.$router.push(`/${solutionId}/solutions`);\n          } else {\n            this.$router.push('/solutions');\n          }\n        } else {\n          // 5. 处理业务错误（正确获取错误消息）\n          throw new Error(responseData.message || `发布失败，错误码：${responseData.code}`);\n        }\n      } catch (error) {\n        // 6. 统一错误处理\n        console.error('发布失败:', error);\n        ElMessage({\n          type: 'error',\n          message: error.message || '发布过程中发生未知错误'\n        });\n      } finally {\n        this.processing = false;\n      }\n    },\n    \n    // 跳转到题目详情\n    goToProblem(questionId) {\n      this.$router.push(`/${questionId}/problems`);\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '未知时间';\n      \n      const date = new Date(dateString);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    \n    // 获取规范化后的语言名称（用于CSS类名）\n    getNormalizedLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 特殊处理，比如将 'cpp' 转为 'c++'\n      const reverseMap = {\n        'cpp': 'c++',\n        'csharp': 'c#'\n      };\n      \n      return reverseMap[lowercased] || lowercased;\n    },\n    \n    // 获取显示用的语言名称\n    getDisplayLanguage(language) {\n      if (!language) return '';\n      \n      // 转为小写\n      const lowercased = language.toLowerCase();\n      \n      // 从特殊映射中获取显示名称\n      if (this.languageDisplayMap[lowercased]) {\n        return this.languageDisplayMap[lowercased];\n      }\n      \n      // 首字母大写\n      return language.charAt(0).toUpperCase() + language.slice(1);\n    },\n    \n    // 平台相关方法\n    getPlatformName(platform) {\n      const platforms = {\n        'luogu': '洛谷',\n        'leetcode': 'LeetCode'\n      };\n      return platforms[platform] || platform;\n    },\n    \n    // 平台标签样式\n    getPlatformTagType(platform) {\n      return {\n        luogu: 'success',\n        leetcode: 'warning'\n      }[platform] || 'info';\n    },\n    \n    // 难度标签样式\n    getDifficultyTagType(question) {\n      if (question.oj_platform === 'luogu') {\n        const levelMap = {\n          '入门': 'info',\n          '普及-': 'success',\n          '普及/提高-': 'success',\n          '普及+/提高': 'warning',\n          '提高+/省选-': 'danger',\n          '省选/NOI-': 'danger',\n          'NOI/NOI+': 'danger',\n          'CTSC': 'danger'\n        };\n        return levelMap[question.difficulty] || 'info';\n      }\n      \n      // LeetCode难度\n      return {\n        '简单': 'success',\n        '中等': 'warning',\n        '困难': 'danger'\n      }[question.difficulty] || 'info';\n    },\n    \n    // 标签样式\n    getTagType(tag, platform) {\n      // LeetCode标签统一为蓝色\n      if (platform === 'leetcode') return 'primary';\n      \n      // 洛谷标签根据前缀分类\n      const prefix = tag.split('_')[0];\n      return {\n        'Algorithm': 'primary',  // 算法 - 蓝色\n        'Source': 'success',     // 来源 - 绿色\n        'Time': 'warning',       // 时间 - 黄色\n        'Region': 'danger',      // 地区 - 红色\n        'Other': 'info'          // 其他 - 灰色\n      }[prefix] || 'info';\n    },\n    \n    // 获取标签名称\n    getTagName(tag) {\n      // 洛谷标签去掉前缀\n      const parts = tag.split('_');\n      if (parts.length > 1) {\n        return parts.slice(1).join('_');\n      }\n      return tag;\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 基础布局优化 */\n.draft-detail-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n}\n\n.page-container {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n/* 加载状态优化 */\n.loading-container {\n  padding: 3rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 错误状态优化 */\n.error-container {\n  padding: 2rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 已删除状态的横幅优化 */\n.deleted-banner {\n  margin-bottom: 1.5rem;\n}\n\n/* 主内容区网格布局 */\n.draft-content {\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 340px;\n  gap: 2rem;\n  align-items: start;\n}\n\n/* 左侧草稿内容区 */\n.left-section {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n/* 右侧信息卡片区 */\n.right-section {\n  display: grid;\n  gap: 1.5rem;\n  position: sticky;\n  top: 1rem;\n  align-self: start;\n}\n\n/* 卡片通用样式 */\n.el-card {\n  border-radius: 12px;\n  border: none;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n}\n\n.el-card:hover {\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n/* 草稿描述卡片 */\n.draft-description-card {\n  padding: 2rem;\n  background: white;\n}\n\n.draft-title {\n  font-size: 1.8rem;\n  color: #2d3748;\n  margin-bottom: 1.2rem;\n  font-weight: 600;\n  line-height: 1.3;\n  border-bottom: 1px solid #e2e8f0;\n  padding-bottom: 0.8rem;\n}\n\n.draft-metadata {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.2rem;\n  margin-bottom: 2rem;\n  color: #4a5568;\n  font-size: 0.95rem;\n  align-items: center;\n}\n\n.draft-time {\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n\n/* 语言标签样式 */\n.lang-tag-python {\n  background-color: #3776ab;\n  color: white;\n}\n\n.lang-tag-java {\n  background-color: #f89820;\n  color: white;\n}\n\n.lang-tag-c\\+\\+ {\n  background-color: #00599c;\n  color: white;\n}\n\n.lang-tag-javascript {\n  background-color: #f7df1e;\n  color: #000;\n}\n\n.lang-tag-go {\n  background-color: #00acd7;\n  color: white;\n}\n\n.lang-tag-rust {\n  background-color: #b7410e;\n  color: white;\n}\n\n.lang-tag-c\\# {\n  background-color: #68217a;\n  color: white;\n}\n\n/* 题目信息卡片 */\n.question-info-card {\n  padding: 1.5rem;\n}\n\n.question-info-card h2 {\n  font-size: 1.4rem;\n  color: #2d3748;\n  margin-bottom: 1rem;\n  font-weight: 600;\n  line-height: 1.3;\n}\n\n.clickable-title {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.clickable-title:hover {\n  color: #3182ce;\n}\n\n.clickable-title i {\n  font-size: 0.8rem;\n  opacity: 0.7;\n}\n\n.info-meta {\n  display: grid;\n  gap: 0.8rem;\n  color: #4a5568;\n  font-size: 0.95rem;\n  margin: 1.5rem 0;\n}\n\n.info-meta div {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n/* 操作按钮组 */\n.action-buttons {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n.action-buttons .el-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: all 0.3s ease;\n  min-width: 0;\n  white-space: nowrap;\n  padding: 8px 15px;\n}\n\n/* 标签卡片 */\n.question-tags-card {\n  padding: 1.5rem;\n}\n\n.difficulty-section,\n.tags-section {\n  margin-bottom: 1.5rem;\n}\n\n.difficulty-section h3,\n.tags-section h3 {\n  font-size: 1.1rem;\n  color: #2d3748;\n  margin-bottom: 0.8rem;\n  font-weight: 500;\n}\n\n/* 标签容器 */\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.6rem;\n}\n\n.algorithm-tag {\n  transition: all 0.3s ease;\n  margin: 0;\n}\n\n.algorithm-tag:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 内容渲染样式优化 */\n.markdown-content {\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n  color: #2d3748;\n  line-height: 1.7;\n  font-size: 1rem;\n}\n\n/* 标题样式 */\n.markdown-content :deep(h1),\n.markdown-content :deep(h2),\n.markdown-content :deep(h3) {\n  color: #1a202c;\n  font-weight: 600;\n  margin: 1.8rem 0 1rem;\n  scroll-margin-top: 80px; /* 为锚点跳转留出空间 */\n}\n\n.markdown-content :deep(h1) {\n  font-size: 1.8rem;\n  border-bottom: 1px solid #e2e8f0;\n  padding-bottom: 0.5rem;\n}\n\n.markdown-content :deep(h2) {\n  font-size: 1.5rem;\n}\n\n.markdown-content :deep(h3) {\n  font-size: 1.2rem;\n}\n\n/* 段落样式 */\n.markdown-content :deep(p) {\n  margin: 1.2rem 0;\n  color: #4a5568;\n}\n\n/* 代码块样式 */\n.markdown-content :deep(pre) {\n  background: #1e293b;\n  border-radius: 8px;\n  padding: 1.2rem;\n  margin: 1.5rem 0;\n  overflow-x: auto;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(code) {\n  font-family: 'Fira Code', 'SFMono-Regular', Consolas, monospace;\n  background: transparent;\n  color: #f8fafc;\n  padding: 0;\n  font-size: 0.9em;\n}\n\n/* 行内代码 */\n.markdown-content :deep(p > code) {\n  background: #edf2f7;\n  color: #c53030;\n  padding: 0.2em 0.4em;\n  border-radius: 4px;\n  font-size: 0.9em;\n}\n\n/* 引用块 */\n.markdown-content :deep(blockquote) {\n  border-left: 4px solid #4299e1;\n  background: #ebf8ff;\n  color: #2b6cb0;\n  padding: 1rem 1.5rem;\n  margin: 1.5rem 0;\n  border-radius: 0 4px 4px 0;\n}\n\n/* 表格样式 */\n.markdown-content :deep(table) {\n  width: 100%;\n  margin: 1.5rem 0;\n  border-collapse: collapse;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content :deep(th),\n.markdown-content :deep(td) {\n  border: 1px solid #e2e8f0;\n  padding: 0.75rem 1rem;\n  text-align: left;\n}\n\n.markdown-content :deep(th) {\n  background: #f7fafc;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n/* 列表样式 */\n.markdown-content :deep(ul),\n.markdown-content :deep(ol) {\n  margin: 1.5rem 0;\n  padding-left: 2rem;\n}\n\n.markdown-content :deep(li) {\n  margin: 0.5rem 0;\n  color: #4a5568;\n}\n\n/* 链接样式 */\n.markdown-content :deep(a) {\n  color: #4299e1;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.markdown-content :deep(a:hover) {\n  color: #2b6cb0;\n  text-decoration: underline;\n}\n\n/* 图片样式 */\n.markdown-content :deep(img) {\n  max-width: 100%;\n  height: auto;\n  border-radius: 6px;\n  margin: 1.5rem auto;\n  display: block;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n/* 对话框样式优化 */\n.el-dialog {\n  border-radius: 12px;\n  max-width: 500px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 1024px) {\n  .draft-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .right-section {\n    position: static;\n  }\n}\n\n@media (max-width: 768px) {\n  .page-container {\n    padding: 1rem;\n  }\n  \n  .action-buttons {\n    flex-wrap: wrap;\n  }\n  \n  .draft-description-card,\n  .question-info-card,\n  .question-tags-card {\n    padding: 1.2rem;\n  }\n  \n  .draft-title {\n    font-size: 1.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .action-buttons {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 0.5rem;\n  }\n  \n  .action-buttons .el-button {\n    width: 100%;\n    padding: 8px 12px;\n    font-size: 0.8rem;\n  }\n  \n  .draft-metadata {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.8rem;\n  }\n}\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f5f9;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #cbd5e0;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a0aec0;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}