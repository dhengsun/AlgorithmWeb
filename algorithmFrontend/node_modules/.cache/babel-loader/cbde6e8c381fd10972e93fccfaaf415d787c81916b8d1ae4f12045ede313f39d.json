{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"draft-update-view\"\n};\nconst _hoisted_2 = {\n  class: \"page-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error-container\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"solution-content\"\n};\nconst _hoisted_6 = {\n  class: \"question-input\"\n};\nconst _hoisted_7 = {\n  class: \"markdown-editor\"\n};\nconst _hoisted_8 = [\"innerHTML\"];\nconst _hoisted_9 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"main\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"h1\", null, \"编辑草稿\", -1)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n    rows: 10,\n    animated: \"\"\n  })])) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_alert, {\n    title: $data.error,\n    type: \"error\",\n    closable: false\n  }, null, 8, [\"title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_form, {\n    model: $data.form,\n    \"label-width\": \"120px\",\n    class: \"solution-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"题目ID\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input, {\n        modelValue: $data.form.question_id,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.question_id = $event),\n        placeholder: \"输入题目ID\",\n        onBlur: $options.fetchQuestionInfo\n      }, null, 8, [\"modelValue\", \"onBlur\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        icon: \"el-icon-link\",\n        disabled: !$data.form.question_id,\n        onClick: $options.goToProblem,\n        title: \"前往题目页面\"\n      }, {\n        default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" 查看题目 \")])),\n        _: 1\n      }, 8, [\"disabled\", \"onClick\"])])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"题目名称\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.question_name,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.question_name = $event),\n        disabled: \"\",\n        placeholder: \"获取题目名称\"\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"语言类型\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $data.form.language,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.language = $event),\n        placeholder: \"选择编程语言\",\n        class: \"w-100\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.languageOptions, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.value,\n            label: item.label,\n            value: item.value\n          }, null, 8, [\"label\", \"value\"]);\n        }), 128))]),\n        _: 1\n      }, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"是否为草稿\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_switch, {\n        modelValue: $data.form.is_draft,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.is_draft = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"题解内容\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_tabs, {\n        modelValue: $data.activeTab,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.activeTab = $event)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n          label: \"编辑\",\n          name: \"edit\"\n        }, {\n          default: _withCtx(() => [_withDirectives(_createElementVNode(\"textarea\", {\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.content_text = $event),\n            class: \"editor-textarea\",\n            placeholder: \"输入题解内容（Markdown格式）\"\n          }, null, 512), [[_vModelText, $data.form.content_text]])]),\n          _: 1\n        }), _createVNode(_component_el_tab_pane, {\n          label: \"预览\",\n          name: \"preview\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", {\n            ref: \"markdownPreview\",\n            class: \"markdown-preview\",\n            innerHTML: $options.compiledMarkdown\n          }, null, 8, _hoisted_8)]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"])])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.handleSubmit,\n        loading: $data.submitting\n      }, {\n        default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"更新\")])),\n        _: 1\n      }, 8, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n        onClick: $options.handleReset,\n        disabled: $data.submitting\n      }, {\n        default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"重置\")])),\n        _: 1\n      }, 8, [\"onClick\", \"disabled\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        onClick: $options.handleDelete,\n        disabled: $data.submitting\n      }, {\n        default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"删除\")])),\n        _: 1\n      }, 8, [\"onClick\", \"disabled\"])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"model\"])]))]), _createVNode(_component_el_dialog, {\n    modelValue: $data.deleteDialogVisible,\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.deleteDialogVisible = $event),\n    title: \"确认删除\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_9, [_createVNode(_component_el_button, {\n      onClick: _cache[6] || (_cache[6] = $event => $data.deleteDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"取消\")])),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"danger\",\n      onClick: $options.confirmDelete,\n      loading: $data.processing\n    }, {\n      default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"确认删除\")])),\n      _: 1\n    }, 8, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"确定要删除这篇草稿吗？此操作不可逆。\", -1))]),\n    _: 1\n  }, 8, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","$data","loading","_hoisted_3","_component_el_skeleton","rows","animated","error","_hoisted_4","_component_el_alert","title","type","closable","_hoisted_5","_component_el_form","model","form","default","_withCtx","_component_el_form_item","label","_hoisted_6","_component_el_input","modelValue","question_id","_cache","$event","placeholder","onBlur","$options","fetchQuestionInfo","_component_el_button","icon","disabled","onClick","goToProblem","_createTextVNode","_","question_name","_component_el_select","language","_Fragment","_renderList","languageOptions","item","_createBlock","_component_el_option","value","_component_el_switch","is_draft","_hoisted_7","_component_el_tabs","activeTab","_component_el_tab_pane","name","content_text","ref","innerHTML","compiledMarkdown","_hoisted_8","handleSubmit","submitting","handleReset","handleDelete","_component_el_dialog","deleteDialogVisible","width","footer","_hoisted_9","confirmDelete","processing"],"sources":["/Users/hsd/File/Code/Project/AlgorithmWeb/algorithmFrontend/src/views/DraftUpdateView.vue"],"sourcesContent":["<template>\n  <div class=\"draft-update-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <h1>编辑草稿</h1>\n      \n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      \n      <div v-else-if=\"error\" class=\"error-container\">\n        <el-alert\n          :title=\"error\"\n          type=\"error\"\n          :closable=\"false\"\n        />\n      </div>\n      \n      <div v-else class=\"solution-content\">\n        <el-form :model=\"form\" label-width=\"120px\" class=\"solution-form\">\n          <!-- 题目选择区域 -->\n          <el-form-item label=\"题目ID\">\n            <div class=\"question-input\">\n              <el-input v-model=\"form.question_id\" placeholder=\"输入题目ID\" @blur=\"fetchQuestionInfo\" />\n              <el-button \n                type=\"primary\" \n                icon=\"el-icon-link\" \n                :disabled=\"!form.question_id\" \n                @click=\"goToProblem\"\n                title=\"前往题目页面\"\n              >\n                查看题目\n              </el-button>\n            </div>\n          </el-form-item>\n\n          <!-- 题目名称展示区域 -->\n          <el-form-item label=\"题目名称\">\n            <el-input v-model=\"form.question_name\" disabled placeholder=\"获取题目名称\" />\n          </el-form-item>\n\n          <!-- 语言类型选择 -->\n          <el-form-item label=\"语言类型\">\n            <el-select v-model=\"form.language\" placeholder=\"选择编程语言\" class=\"w-100\">\n              <el-option\n                v-for=\"item in languageOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <!-- 草稿状态切换 -->\n          <el-form-item label=\"是否为草稿\">\n            <el-switch v-model=\"form.is_draft\" />\n          </el-form-item>\n\n          <!-- Markdown编辑器 -->\n          <el-form-item label=\"题解内容\">\n            <div class=\"markdown-editor\">\n              <el-tabs v-model=\"activeTab\">\n                <el-tab-pane label=\"编辑\" name=\"edit\">\n                  <textarea \n                    v-model=\"form.content_text\" \n                    class=\"editor-textarea\"\n                    placeholder=\"输入题解内容（Markdown格式）\"\n                  ></textarea>\n                </el-tab-pane>\n                <el-tab-pane label=\"预览\" name=\"preview\">\n                  <div ref=\"markdownPreview\" class=\"markdown-preview\" v-html=\"compiledMarkdown\"></div>\n                </el-tab-pane>\n              </el-tabs>\n            </div>\n          </el-form-item>\n\n          <!-- 按钮组 -->\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">更新</el-button>\n            <el-button @click=\"handleReset\" :disabled=\"submitting\">重置</el-button>\n            <el-button type=\"danger\" @click=\"handleDelete\" :disabled=\"submitting\">删除</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </main>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"确认删除\"\n      width=\"30%\"\n    >\n      <span>确定要删除这篇草稿吗？此操作不可逆。</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"processing\">确认删除</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue';\nimport { getDraftDetail, updateDraft } from '@/api/solution';\nimport { getQuestionDetail } from '@/api/question';\nimport request from '@/api/request';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\nimport { ElMessage } from 'element-plus';\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'SolutionUpdateView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      solutionId: this.$route.params.id, // 从路由参数获取ID\n      originalSolution: null, // 用于重置\n      loading: true,\n      error: null,\n      submitting: false,\n      processing: false,\n      fetching: false,\n      deleteDialogVisible: false,\n      mathJaxLoaded: false,\n      activeTab: 'edit',\n      \n      // 表单数据\n      form: {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content_text: '',\n        is_draft: false\n      },\n      \n      // Markdown渲染器\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        breaks: true\n      }),\n      \n      // 语言选项\n      languageOptions: [\n        { value: 'python', label: 'Python' },\n        { value: 'java', label: 'Java' },\n        { value: 'cpp', label: 'C++' },\n        { value: 'javascript', label: 'JavaScript' },\n        { value: 'csharp', label: 'C#' },\n        { value: 'go', label: 'Go' },\n        { value: 'rust', label: 'Rust' }\n      ]\n    };\n  },\n  computed: {\n    // 预览 - Markdown渲染\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content_text || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'preview') {\n        this.initMathJax();\n        this.$nextTick(() => this.renderMathJax());\n      }\n    },\n    'form.content_text'() {\n      if (this.activeTab === 'preview' && this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax());\n      }\n    }\n  },\n  created() {\n    console.log(\"组件创建，题解ID:\", this.solutionId);\n  },\n  mounted() {\n    console.log(\"组件挂载，获取题解ID:\", this.solutionId);\n    this.fetchSolutionDetail(); // 组件挂载时加载题解数据\n    this.initMathJax();\n  },\n  methods: {\n    // 获取题解详情 - 根据ID加载现有题解\n    async fetchSolutionDetail() {\n      this.loading = true;\n      this.error = null;\n      \n      try {\n        console.log(\"正在获取题解详情，ID:\", this.solutionId);\n        const response = await getDraftDetail(this.solutionId);\n        \n        // 打印完整响应以调试\n        console.log(\"题解API返回完整响应:\", JSON.stringify(response));\n        \n        // 处理可能的响应结构\n        let solutionData = response;\n        \n        if (response.data) {\n          if (response.data.code === 200) {\n            solutionData = response.data.data;\n          } else {\n            solutionData = response.data;\n          }\n        }\n        \n        console.log(\"提取的题解数据:\", JSON.stringify(solutionData));\n        \n        // 保存原始数据用于重置\n        this.originalSolution = { ...solutionData };\n        \n        // 检查并打印所有可能的字段名\n        console.log(\"数据字段名称检查:\");\n        for (const key in solutionData) {\n          console.log(`- ${key}: ${JSON.stringify(solutionData[key])}`);\n        }\n        \n        // 填充表单，检查所有可能的字段名称变体\n        this.form = {\n          question_id: solutionData.question_id || '',\n          question_name: solutionData.question_name || '',\n          language: solutionData.language || '',\n          content_text: solutionData.content_text || solutionData.content || '',\n          is_draft: !!solutionData.is_draft\n        };\n        \n        console.log(\"表单数据已填充:\", JSON.stringify(this.form));\n        \n        // 如果没有题目名称，则获取题目详情\n        if (this.form.question_id && !this.form.question_name) {\n          await this.fetchQuestionInfo();\n        }\n        \n      } catch (error) {\n        console.error('获取草稿详情失败:', error);\n        this.error = '获取草稿详情失败: ' + (error.message || '未知错误');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 获取题目信息\n    async fetchQuestionInfo() {\n      if (!this.form.question_id) {\n        this.form.question_name = '';\n        return;\n      }\n\n      this.fetching = true;\n      try {\n        console.log(\"获取题目信息，ID:\", this.form.question_id);\n        const response = await getQuestionDetail(this.form.question_id);\n        console.log(\"题目详情响应:\", JSON.stringify(response));\n        \n        // 处理可能的响应结构\n        let questionData = response;\n        \n        if (response.data) {\n          if (response.data.code === 200) {\n            questionData = response.data.data;\n          } else {\n            questionData = response.data;\n          }\n        }\n        \n        // 尝试所有可能的字段名\n        this.form.question_name = \n          questionData.name || \n          questionData.question_name || \n          '';\n        \n        console.log(\"设置题目名称:\", this.form.question_name);\n      } catch (error) {\n        console.error('获取题目信息失败:', error);\n        ElMessage.error('获取题目信息失败: ' + (error.message || '未知错误'));\n        this.form.question_name = '';\n      } finally {\n        this.fetching = false;\n      }\n    },\n    \n    // 跳转到题目页面\n    goToProblem() {\n      if (this.form.question_id) {\n        this.$router.push(`/${this.form.question_id}/problems`);\n      }\n    },\n    \n    // 初始化 MathJax\n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true;\n        return;\n      }\n      \n      // 配置MathJax\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true,\n          tags: 'ams'\n        },\n        options: {\n          enableMenu: false,\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],\n          processHtmlClass: 'markdown-content'\n        },\n        svg: {\n          fontCache: 'global'\n        },\n        startup: {\n          ready: () => {\n            window.MathJax.startup.defaultReady();\n            this.mathJaxLoaded = true;\n            \n            // 如果内容已加载并且在预览标签，立即渲染\n            if (this.form.content_text && this.activeTab === 'preview') {\n              this.$nextTick(() => this.renderMathJax());\n            }\n          }\n        }\n      };\n      \n      // 加载MathJax脚本\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n      script.async = true;\n      \n      script.onload = () => {\n        console.log('MathJax脚本加载完成');\n      };\n      \n      script.onerror = () => {\n        console.error('MathJax脚本加载失败，尝试备用CDN');\n        const backupScript = document.createElement('script');\n        backupScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-svg.js';\n        backupScript.async = true;\n        document.head.appendChild(backupScript);\n      };\n      \n      document.head.appendChild(script);\n    },\n    \n    // 渲染MathJax公式\n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        // 获取预览区域\n        const previewArea = this.$refs.markdownPreview;\n        if (!previewArea) return;\n        \n        // 执行渲染\n        MathJax.typesetPromise([previewArea]).catch(err => {\n          console.error('MathJax公式渲染错误:', err);\n        });\n      }\n    },\n    \n    // 验证表单\n    validateForm() {\n      if (!this.form.question_id) {\n        ElMessage.error('请输入题目ID');\n        return false;\n      }\n      if (!this.form.language) {\n        ElMessage.error('请选择编程语言');\n        return false;\n      }\n      if (!this.form.content_text) {\n        ElMessage.error('请输入题解内容');\n        return false;\n      }\n      return true;\n    },\n    \n    // 提交表单 - 更新现有题解\n    async handleSubmit() {\n      if (!this.validateForm()) return;\n      \n      this.submitting = true;\n      \n      try {\n        // 构建更新数据\n        const updateData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content_text: this.form.content_text,\n          is_draft: this.form.is_draft\n        };\n        \n        console.log(\"准备更新草稿，ID:\", this.solutionId, \"数据:\", updateData);\n        \n        // 调用更新API，更新现有题解\n        const response = await updateDraft(this.solutionId, updateData);\n        console.log(\"更新成功，响应:\", response);\n        \n        ElMessage({\n          type: 'success',\n          message: '草稿更新成功'\n        });\n        if(this.form.is_draft) {\n          this.$router.push(`/${this.solutionId}/drafts`);\n        } else {\n          this.$router.push(`/${this.solutionId}/solutions`);\n        }\n        \n        \n        // 重新获取更新后的数据\n        this.fetchSolutionDetail();\n      } catch (error) {\n        console.error('更新题解失败:', error);\n        ElMessage({\n          type: 'error',\n          message: error.response?.data?.message || error.message || '更新失败: 未知错误'\n        });\n      } finally {\n        this.submitting = false;\n      }\n    },\n    \n    // 重置表单到原始状态\n    handleReset() {\n      if (!this.originalSolution) return;\n      \n      // 重置为原始数据\n      this.form = {\n        question_id: this.originalSolution.question_id || '',\n        question_name: this.originalSolution.question_name || '',\n        language: this.originalSolution.language || '',\n        content_text: this.originalSolution.content_text || this.originalSolution.content || '',\n        is_draft: !!this.originalSolution.is_draft\n      };\n      \n      ElMessage({\n        type: 'info',\n        message: '已重置为原始数据'\n      });\n    },\n    \n    // 删除按钮处理\n    handleDelete() {\n      this.deleteDialogVisible = true;\n    },\n    \n    // 确认删除现有题解\n    async confirmDelete() {\n      this.processing = true;\n      try {\n        console.log(\"准备删除草稿，ID:\", this.solutionId);\n        \n        // 调用删除API\n        const response = await request({\n          url: '/api/solution/delete/',\n          method: 'post',\n          data: { id: this.solutionId }\n        });\n        \n        console.log(\"删除成功，响应:\", response);\n        this.deleteDialogVisible = false;\n        \n        ElMessage({\n          type: 'success',\n          message: response.message || '草稿删除成功'\n        });\n        \n        // 跳转到题解列表页\n        this.$router.push('/solutions');\n      } catch (error) {\n        console.error('删除草稿失败:', error);\n        \n        // 尝试从错误对象中获取错误信息\n        const errorMsg = error.response?.data?.message || \n                         error.message || \n                         '删除失败: 未知错误';\n        \n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.solution-update-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.page-container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n\n.page-container h1 {\n  font-size: 2rem;\n  color: #2c3e50;\n  margin-bottom: 2rem;\n  font-weight: 600;\n  text-align: center;\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n}\n\n/* 加载状态优化 */\n.loading-container {\n  padding: 3rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 错误状态优化 */\n.error-container {\n  padding: 2rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n.solution-form {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.question-input {\n  display: flex;\n  gap: 12px;\n}\n\n.question-input .el-input {\n  flex: 1;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.w-100 {\n  width: 100%;\n}\n\n.el-form-item {\n  margin-bottom: 22px;\n}\n\n.el-form-item:last-child {\n  margin-bottom: 0;\n}\n\n.markdown-editor {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n:deep(.markdown-editor .el-tabs__header) {\n  margin: 0;\n}\n\n:deep(.markdown-editor .el-tabs__nav-wrap) {\n  padding: 0 15px;\n  background: #f8f9fa;  \n}\n\n:deep(.markdown-editor .el-tabs__item) {\n  padding: 0 20px;\n  height: 40px;\n  line-height: 40px;\n}\n\n.editor-textarea {\n  width: 100%;\n  min-height: 400px;\n  padding: 15px;\n  border: none;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  resize: vertical;\n  background: #fff;\n  color: #333;\n}\n\n.markdown-preview {\n  padding: 20px;\n  min-height: 400px;\n  background: #fff;\n  overflow: auto;\n}\n\n/* MathJax公式样式 */\n.markdown-preview :deep(.MathJax) {\n  color: #333;\n}\n\n/* 其他Markdown样式 */\n.markdown-preview :deep(h1),\n.markdown-preview :deep(h2),\n.markdown-preview :deep(h3) {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-preview :deep(pre) {\n  background-color: #f6f8fa;\n  padding: 12px;\n  border-radius: 6px;\n  overflow: auto;\n}\n\n.markdown-preview :deep(code) {\n  background-color: #f6f8fa;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n  color: #c7254e;\n}\n\n.markdown-preview :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin-left: 0;\n}\n\n.markdown-preview :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(th),\n.markdown-preview :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 0.6em 1em;\n}\n\n.markdown-preview :deep(ul),\n.markdown-preview :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(li) {\n  margin: 0.5em 0;\n}\n\n.markdown-preview :deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.markdown-preview :deep(a:hover) {\n  text-decoration: underline;\n}\n\n.markdown-preview :deep(img) {\n  max-width: 100%;\n  border-radius: 4px;\n}\n\n/* 按钮组样式 */\n.el-form-item:last-child {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.el-form-item:last-child .el-button {\n  min-width: 120px;\n  height: 40px;\n  margin: 0 8px;\n}\n\n/* 禁用输入框样式 */\n:deep(.el-input.is-disabled .el-input__inner) {\n  background-color: #f8f9fa;\n  color: #606266;\n  border-color: #e4e7ed;\n}\n\n/* 对话框样式优化 */\n.el-dialog {\n  border-radius: 12px;\n  max-width: 500px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .page-container {\n    padding: 20px;\n    border-radius: 0;\n  }\n  \n  .question-input {\n    flex-direction: column;\n  }\n  \n  .editor-textarea,\n  .markdown-preview {\n    min-height: 300px;\n  }\n  \n  .el-form-item:last-child .el-button {\n    width: 100%;\n    margin: 8px 0;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}