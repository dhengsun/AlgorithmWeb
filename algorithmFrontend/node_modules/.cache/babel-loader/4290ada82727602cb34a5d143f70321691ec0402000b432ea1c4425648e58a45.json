{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppHeader from '@/components/AppHeader.vue';\nimport { getDraftDetail, updateDraft } from '@/api/solution';\nimport { getQuestionDetail } from '@/api/question';\nimport request from '@/api/request';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\nimport { ElMessage } from 'element-plus';\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'SolutionUpdateView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      solutionId: this.$route.params.id,\n      // 从路由参数获取ID\n      originalSolution: null,\n      // 用于重置\n      loading: true,\n      error: null,\n      submitting: false,\n      processing: false,\n      fetching: false,\n      deleteDialogVisible: false,\n      mathJaxLoaded: false,\n      activeTab: 'edit',\n      // 表单数据\n      form: {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content_text: '',\n        is_draft: false\n      },\n      // Markdown渲染器\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        breaks: true\n      }),\n      // 语言选项\n      languageOptions: [{\n        value: 'python',\n        label: 'Python'\n      }, {\n        value: 'java',\n        label: 'Java'\n      }, {\n        value: 'cpp',\n        label: 'C++'\n      }, {\n        value: 'javascript',\n        label: 'JavaScript'\n      }, {\n        value: 'csharp',\n        label: 'C#'\n      }, {\n        value: 'go',\n        label: 'Go'\n      }, {\n        value: 'rust',\n        label: 'Rust'\n      }]\n    };\n  },\n  computed: {\n    // 预览 - Markdown渲染\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content_text || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'preview') {\n        this.initMathJax();\n        this.$nextTick(() => this.renderMathJax());\n      }\n    },\n    'form.content_text'() {\n      if (this.activeTab === 'preview' && this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax());\n      }\n    }\n  },\n  created() {\n    console.log(\"组件创建，题解ID:\", this.solutionId);\n  },\n  mounted() {\n    console.log(\"组件挂载，获取题解ID:\", this.solutionId);\n    this.fetchSolutionDetail(); // 组件挂载时加载题解数据\n    this.initMathJax();\n  },\n  methods: {\n    // 获取题解详情 - 根据ID加载现有题解\n    async fetchSolutionDetail() {\n      this.loading = true;\n      this.error = null;\n      try {\n        console.log(\"正在获取题解详情，ID:\", this.solutionId);\n        const response = await getDraftDetail(this.solutionId);\n\n        // 打印完整响应以调试\n        console.log(\"题解API返回完整响应:\", JSON.stringify(response));\n\n        // 处理可能的响应结构\n        let solutionData = response;\n        if (response.data) {\n          if (response.data.code === 200) {\n            solutionData = response.data.data;\n          } else {\n            solutionData = response.data;\n          }\n        }\n        console.log(\"提取的题解数据:\", JSON.stringify(solutionData));\n\n        // 保存原始数据用于重置\n        this.originalSolution = {\n          ...solutionData\n        };\n\n        // 检查并打印所有可能的字段名\n        console.log(\"数据字段名称检查:\");\n        for (const key in solutionData) {\n          console.log(`- ${key}: ${JSON.stringify(solutionData[key])}`);\n        }\n\n        // 填充表单，检查所有可能的字段名称变体\n        this.form = {\n          question_id: solutionData.question_id || '',\n          question_name: solutionData.question_name || '',\n          language: solutionData.language || '',\n          content_text: solutionData.content_text || solutionData.content || '',\n          is_draft: !!solutionData.is_draft\n        };\n        console.log(\"表单数据已填充:\", JSON.stringify(this.form));\n\n        // 如果没有题目名称，则获取题目详情\n        if (this.form.question_id && !this.form.question_name) {\n          await this.fetchQuestionInfo();\n        }\n      } catch (error) {\n        console.error('获取草稿详情失败:', error);\n        this.error = '获取草稿详情失败: ' + (error.message || '未知错误');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取题目信息\n    async fetchQuestionInfo() {\n      if (!this.form.question_id) {\n        this.form.question_name = '';\n        return;\n      }\n      this.fetching = true;\n      try {\n        console.log(\"获取题目信息，ID:\", this.form.question_id);\n        const response = await getQuestionDetail(this.form.question_id);\n        console.log(\"题目详情响应:\", JSON.stringify(response));\n\n        // 处理可能的响应结构\n        let questionData = response;\n        if (response.data) {\n          if (response.data.code === 200) {\n            questionData = response.data.data;\n          } else {\n            questionData = response.data;\n          }\n        }\n\n        // 尝试所有可能的字段名\n        this.form.question_name = questionData.name || questionData.question_name || '';\n        console.log(\"设置题目名称:\", this.form.question_name);\n      } catch (error) {\n        console.error('获取题目信息失败:', error);\n        ElMessage.error('获取题目信息失败: ' + (error.message || '未知错误'));\n        this.form.question_name = '';\n      } finally {\n        this.fetching = false;\n      }\n    },\n    // 跳转到题目页面\n    goToProblem() {\n      if (this.form.question_id) {\n        this.$router.push(`/${this.form.question_id}/problems`);\n      }\n    },\n    // 初始化 MathJax\n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true;\n        return;\n      }\n\n      // 配置MathJax\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true,\n          tags: 'ams'\n        },\n        options: {\n          enableMenu: false,\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],\n          processHtmlClass: 'markdown-content'\n        },\n        svg: {\n          fontCache: 'global'\n        },\n        startup: {\n          ready: () => {\n            window.MathJax.startup.defaultReady();\n            this.mathJaxLoaded = true;\n\n            // 如果内容已加载并且在预览标签，立即渲染\n            if (this.form.content_text && this.activeTab === 'preview') {\n              this.$nextTick(() => this.renderMathJax());\n            }\n          }\n        }\n      };\n\n      // 加载MathJax脚本\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n      script.async = true;\n      script.onload = () => {\n        console.log('MathJax脚本加载完成');\n      };\n      script.onerror = () => {\n        console.error('MathJax脚本加载失败，尝试备用CDN');\n        const backupScript = document.createElement('script');\n        backupScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-svg.js';\n        backupScript.async = true;\n        document.head.appendChild(backupScript);\n      };\n      document.head.appendChild(script);\n    },\n    // 渲染MathJax公式\n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        // 获取预览区域\n        const previewArea = this.$refs.markdownPreview;\n        if (!previewArea) return;\n\n        // 执行渲染\n        MathJax.typesetPromise([previewArea]).catch(err => {\n          console.error('MathJax公式渲染错误:', err);\n        });\n      }\n    },\n    // 验证表单\n    validateForm() {\n      if (!this.form.question_id) {\n        ElMessage.error('请输入题目ID');\n        return false;\n      }\n      if (!this.form.language) {\n        ElMessage.error('请选择编程语言');\n        return false;\n      }\n      if (!this.form.content_text) {\n        ElMessage.error('请输入题解内容');\n        return false;\n      }\n      return true;\n    },\n    // 提交表单 - 更新现有题解\n    async handleSubmit() {\n      if (!this.validateForm()) return;\n      this.submitting = true;\n      try {\n        // 构建更新数据\n        const updateData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content_text: this.form.content_text,\n          is_draft: this.form.is_draft\n        };\n        console.log(\"准备更新草稿，ID:\", this.solutionId, \"数据:\", updateData);\n\n        // 调用更新API，更新现有题解\n        const response = await updateDraft(this.solutionId, updateData);\n        console.log(\"更新成功，响应:\", response);\n        ElMessage({\n          type: 'success',\n          message: '草稿更新成功'\n        });\n        if (this.form.is_draft) {\n          this.$router.push(`/${this.solutionId}/drafts`);\n        } else {\n          this.$router.push(`/${this.solutionId}/solutions`);\n        }\n\n        // 重新获取更新后的数据\n        this.fetchSolutionDetail();\n      } catch (error) {\n        console.error('更新题解失败:', error);\n        ElMessage({\n          type: 'error',\n          message: error.response?.data?.message || error.message || '更新失败: 未知错误'\n        });\n      } finally {\n        this.submitting = false;\n      }\n    },\n    // 重置表单到原始状态\n    handleReset() {\n      if (!this.originalSolution) return;\n\n      // 重置为原始数据\n      this.form = {\n        question_id: this.originalSolution.question_id || '',\n        question_name: this.originalSolution.question_name || '',\n        language: this.originalSolution.language || '',\n        content_text: this.originalSolution.content_text || this.originalSolution.content || '',\n        is_draft: !!this.originalSolution.is_draft\n      };\n      ElMessage({\n        type: 'info',\n        message: '已重置为原始数据'\n      });\n    },\n    // 删除按钮处理\n    handleDelete() {\n      this.deleteDialogVisible = true;\n    },\n    // 确认删除现有题解\n    async confirmDelete() {\n      this.processing = true;\n      try {\n        console.log(\"准备删除草稿，ID:\", this.solutionId);\n\n        // 调用删除API\n        const response = await request({\n          url: '/api/solution/delete/',\n          method: 'post',\n          data: {\n            id: this.solutionId\n          }\n        });\n        console.log(\"删除成功，响应:\", response);\n        this.deleteDialogVisible = false;\n        ElMessage({\n          type: 'success',\n          message: response.message || '草稿删除成功'\n        });\n\n        // 跳转到题解列表页\n        this.$router.push('/solutions');\n      } catch (error) {\n        console.error('删除草稿失败:', error);\n\n        // 尝试从错误对象中获取错误信息\n        const errorMsg = error.response?.data?.message || error.message || '删除失败: 未知错误';\n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["AppHeader","getDraftDetail","updateDraft","getQuestionDetail","request","MarkdownIt","DOMPurify","ElMessage","name","components","data","solutionId","$route","params","id","originalSolution","loading","error","submitting","processing","fetching","deleteDialogVisible","mathJaxLoaded","activeTab","form","question_id","question_name","language","content_text","is_draft","mdi","html","linkify","typographer","breaks","languageOptions","value","label","computed","compiledMarkdown","content","String","render","sanitize","e","console","watch","newVal","initMathJax","$nextTick","renderMathJax","form.content_text","created","log","mounted","fetchSolutionDetail","methods","response","JSON","stringify","solutionData","code","key","fetchQuestionInfo","message","questionData","goToProblem","$router","push","MathJax","window","tex","inlineMath","displayMath","processEscapes","tags","options","enableMenu","skipHtmlTags","processHtmlClass","svg","fontCache","startup","ready","defaultReady","script","document","createElement","src","async","onload","onerror","backupScript","head","appendChild","typesetPromise","previewArea","$refs","markdownPreview","catch","err","validateForm","handleSubmit","updateData","type","handleReset","handleDelete","confirmDelete","url","method","errorMsg"],"sources":["/Users/hsd/File/Code/Project/AlgorithmWeb/algorithmFrontend/src/views/DraftUpdateView.vue"],"sourcesContent":["<template>\n  <div class=\"draft-update-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <h1>编辑草稿</h1>\n      \n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      \n      <div v-else-if=\"error\" class=\"error-container\">\n        <el-alert\n          :title=\"error\"\n          type=\"error\"\n          :closable=\"false\"\n        />\n      </div>\n      \n      <div v-else class=\"solution-content\">\n        <el-form :model=\"form\" label-width=\"120px\" class=\"solution-form\">\n          <!-- 题目选择区域 -->\n          <el-form-item label=\"题目ID\">\n            <div class=\"question-input\">\n              <el-input v-model=\"form.question_id\" placeholder=\"输入题目ID\" @blur=\"fetchQuestionInfo\" />\n              <el-button \n                type=\"primary\" \n                icon=\"el-icon-link\" \n                :disabled=\"!form.question_id\" \n                @click=\"goToProblem\"\n                title=\"前往题目页面\"\n              >\n                查看题目\n              </el-button>\n            </div>\n          </el-form-item>\n\n          <!-- 题目名称展示区域 -->\n          <el-form-item label=\"题目名称\">\n            <el-input v-model=\"form.question_name\" disabled placeholder=\"获取题目名称\" />\n          </el-form-item>\n\n          <!-- 语言类型选择 -->\n          <el-form-item label=\"语言类型\">\n            <el-select v-model=\"form.language\" placeholder=\"选择编程语言\" class=\"w-100\">\n              <el-option\n                v-for=\"item in languageOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <!-- 草稿状态切换 -->\n          <el-form-item label=\"是否为草稿\">\n            <el-switch v-model=\"form.is_draft\" />\n          </el-form-item>\n\n          <!-- Markdown编辑器 -->\n          <el-form-item label=\"题解内容\">\n            <div class=\"markdown-editor\">\n              <el-tabs v-model=\"activeTab\">\n                <el-tab-pane label=\"编辑\" name=\"edit\">\n                  <textarea \n                    v-model=\"form.content_text\" \n                    class=\"editor-textarea\"\n                    placeholder=\"输入题解内容（Markdown格式）\"\n                  ></textarea>\n                </el-tab-pane>\n                <el-tab-pane label=\"预览\" name=\"preview\">\n                  <div ref=\"markdownPreview\" class=\"markdown-preview\" v-html=\"compiledMarkdown\"></div>\n                </el-tab-pane>\n              </el-tabs>\n            </div>\n          </el-form-item>\n\n          <!-- 按钮组 -->\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">更新</el-button>\n            <el-button @click=\"handleReset\" :disabled=\"submitting\">重置</el-button>\n            <el-button type=\"danger\" @click=\"handleDelete\" :disabled=\"submitting\">删除</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </main>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"确认删除\"\n      width=\"30%\"\n    >\n      <span>确定要删除这篇草稿吗？此操作不可逆。</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"processing\">确认删除</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue';\nimport { getDraftDetail, updateDraft } from '@/api/solution';\nimport { getQuestionDetail } from '@/api/question';\nimport request from '@/api/request';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\nimport { ElMessage } from 'element-plus';\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'SolutionUpdateView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      solutionId: this.$route.params.id, // 从路由参数获取ID\n      originalSolution: null, // 用于重置\n      loading: true,\n      error: null,\n      submitting: false,\n      processing: false,\n      fetching: false,\n      deleteDialogVisible: false,\n      mathJaxLoaded: false,\n      activeTab: 'edit',\n      \n      // 表单数据\n      form: {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content_text: '',\n        is_draft: false\n      },\n      \n      // Markdown渲染器\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        breaks: true\n      }),\n      \n      // 语言选项\n      languageOptions: [\n        { value: 'python', label: 'Python' },\n        { value: 'java', label: 'Java' },\n        { value: 'cpp', label: 'C++' },\n        { value: 'javascript', label: 'JavaScript' },\n        { value: 'csharp', label: 'C#' },\n        { value: 'go', label: 'Go' },\n        { value: 'rust', label: 'Rust' }\n      ]\n    };\n  },\n  computed: {\n    // 预览 - Markdown渲染\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content_text || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'preview') {\n        this.initMathJax();\n        this.$nextTick(() => this.renderMathJax());\n      }\n    },\n    'form.content_text'() {\n      if (this.activeTab === 'preview' && this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax());\n      }\n    }\n  },\n  created() {\n    console.log(\"组件创建，题解ID:\", this.solutionId);\n  },\n  mounted() {\n    console.log(\"组件挂载，获取题解ID:\", this.solutionId);\n    this.fetchSolutionDetail(); // 组件挂载时加载题解数据\n    this.initMathJax();\n  },\n  methods: {\n    // 获取题解详情 - 根据ID加载现有题解\n    async fetchSolutionDetail() {\n      this.loading = true;\n      this.error = null;\n      \n      try {\n        console.log(\"正在获取题解详情，ID:\", this.solutionId);\n        const response = await getDraftDetail(this.solutionId);\n        \n        // 打印完整响应以调试\n        console.log(\"题解API返回完整响应:\", JSON.stringify(response));\n        \n        // 处理可能的响应结构\n        let solutionData = response;\n        \n        if (response.data) {\n          if (response.data.code === 200) {\n            solutionData = response.data.data;\n          } else {\n            solutionData = response.data;\n          }\n        }\n        \n        console.log(\"提取的题解数据:\", JSON.stringify(solutionData));\n        \n        // 保存原始数据用于重置\n        this.originalSolution = { ...solutionData };\n        \n        // 检查并打印所有可能的字段名\n        console.log(\"数据字段名称检查:\");\n        for (const key in solutionData) {\n          console.log(`- ${key}: ${JSON.stringify(solutionData[key])}`);\n        }\n        \n        // 填充表单，检查所有可能的字段名称变体\n        this.form = {\n          question_id: solutionData.question_id || '',\n          question_name: solutionData.question_name || '',\n          language: solutionData.language || '',\n          content_text: solutionData.content_text || solutionData.content || '',\n          is_draft: !!solutionData.is_draft\n        };\n        \n        console.log(\"表单数据已填充:\", JSON.stringify(this.form));\n        \n        // 如果没有题目名称，则获取题目详情\n        if (this.form.question_id && !this.form.question_name) {\n          await this.fetchQuestionInfo();\n        }\n        \n      } catch (error) {\n        console.error('获取草稿详情失败:', error);\n        this.error = '获取草稿详情失败: ' + (error.message || '未知错误');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 获取题目信息\n    async fetchQuestionInfo() {\n      if (!this.form.question_id) {\n        this.form.question_name = '';\n        return;\n      }\n\n      this.fetching = true;\n      try {\n        console.log(\"获取题目信息，ID:\", this.form.question_id);\n        const response = await getQuestionDetail(this.form.question_id);\n        console.log(\"题目详情响应:\", JSON.stringify(response));\n        \n        // 处理可能的响应结构\n        let questionData = response;\n        \n        if (response.data) {\n          if (response.data.code === 200) {\n            questionData = response.data.data;\n          } else {\n            questionData = response.data;\n          }\n        }\n        \n        // 尝试所有可能的字段名\n        this.form.question_name = \n          questionData.name || \n          questionData.question_name || \n          '';\n        \n        console.log(\"设置题目名称:\", this.form.question_name);\n      } catch (error) {\n        console.error('获取题目信息失败:', error);\n        ElMessage.error('获取题目信息失败: ' + (error.message || '未知错误'));\n        this.form.question_name = '';\n      } finally {\n        this.fetching = false;\n      }\n    },\n    \n    // 跳转到题目页面\n    goToProblem() {\n      if (this.form.question_id) {\n        this.$router.push(`/${this.form.question_id}/problems`);\n      }\n    },\n    \n    // 初始化 MathJax\n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true;\n        return;\n      }\n      \n      // 配置MathJax\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true,\n          tags: 'ams'\n        },\n        options: {\n          enableMenu: false,\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],\n          processHtmlClass: 'markdown-content'\n        },\n        svg: {\n          fontCache: 'global'\n        },\n        startup: {\n          ready: () => {\n            window.MathJax.startup.defaultReady();\n            this.mathJaxLoaded = true;\n            \n            // 如果内容已加载并且在预览标签，立即渲染\n            if (this.form.content_text && this.activeTab === 'preview') {\n              this.$nextTick(() => this.renderMathJax());\n            }\n          }\n        }\n      };\n      \n      // 加载MathJax脚本\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n      script.async = true;\n      \n      script.onload = () => {\n        console.log('MathJax脚本加载完成');\n      };\n      \n      script.onerror = () => {\n        console.error('MathJax脚本加载失败，尝试备用CDN');\n        const backupScript = document.createElement('script');\n        backupScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-svg.js';\n        backupScript.async = true;\n        document.head.appendChild(backupScript);\n      };\n      \n      document.head.appendChild(script);\n    },\n    \n    // 渲染MathJax公式\n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        // 获取预览区域\n        const previewArea = this.$refs.markdownPreview;\n        if (!previewArea) return;\n        \n        // 执行渲染\n        MathJax.typesetPromise([previewArea]).catch(err => {\n          console.error('MathJax公式渲染错误:', err);\n        });\n      }\n    },\n    \n    // 验证表单\n    validateForm() {\n      if (!this.form.question_id) {\n        ElMessage.error('请输入题目ID');\n        return false;\n      }\n      if (!this.form.language) {\n        ElMessage.error('请选择编程语言');\n        return false;\n      }\n      if (!this.form.content_text) {\n        ElMessage.error('请输入题解内容');\n        return false;\n      }\n      return true;\n    },\n    \n    // 提交表单 - 更新现有题解\n    async handleSubmit() {\n      if (!this.validateForm()) return;\n      \n      this.submitting = true;\n      \n      try {\n        // 构建更新数据\n        const updateData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content_text: this.form.content_text,\n          is_draft: this.form.is_draft\n        };\n        \n        console.log(\"准备更新草稿，ID:\", this.solutionId, \"数据:\", updateData);\n        \n        // 调用更新API，更新现有题解\n        const response = await updateDraft(this.solutionId, updateData);\n        console.log(\"更新成功，响应:\", response);\n        \n        ElMessage({\n          type: 'success',\n          message: '草稿更新成功'\n        });\n        if(this.form.is_draft) {\n          this.$router.push(`/${this.solutionId}/drafts`);\n        } else {\n          this.$router.push(`/${this.solutionId}/solutions`);\n        }\n        \n        \n        // 重新获取更新后的数据\n        this.fetchSolutionDetail();\n      } catch (error) {\n        console.error('更新题解失败:', error);\n        ElMessage({\n          type: 'error',\n          message: error.response?.data?.message || error.message || '更新失败: 未知错误'\n        });\n      } finally {\n        this.submitting = false;\n      }\n    },\n    \n    // 重置表单到原始状态\n    handleReset() {\n      if (!this.originalSolution) return;\n      \n      // 重置为原始数据\n      this.form = {\n        question_id: this.originalSolution.question_id || '',\n        question_name: this.originalSolution.question_name || '',\n        language: this.originalSolution.language || '',\n        content_text: this.originalSolution.content_text || this.originalSolution.content || '',\n        is_draft: !!this.originalSolution.is_draft\n      };\n      \n      ElMessage({\n        type: 'info',\n        message: '已重置为原始数据'\n      });\n    },\n    \n    // 删除按钮处理\n    handleDelete() {\n      this.deleteDialogVisible = true;\n    },\n    \n    // 确认删除现有题解\n    async confirmDelete() {\n      this.processing = true;\n      try {\n        console.log(\"准备删除草稿，ID:\", this.solutionId);\n        \n        // 调用删除API\n        const response = await request({\n          url: '/api/solution/delete/',\n          method: 'post',\n          data: { id: this.solutionId }\n        });\n        \n        console.log(\"删除成功，响应:\", response);\n        this.deleteDialogVisible = false;\n        \n        ElMessage({\n          type: 'success',\n          message: response.message || '草稿删除成功'\n        });\n        \n        // 跳转到题解列表页\n        this.$router.push('/solutions');\n      } catch (error) {\n        console.error('删除草稿失败:', error);\n        \n        // 尝试从错误对象中获取错误信息\n        const errorMsg = error.response?.data?.message || \n                         error.message || \n                         '删除失败: 未知错误';\n        \n        ElMessage({\n          type: 'error',\n          message: errorMsg\n        });\n      } finally {\n        this.processing = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.solution-update-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.page-container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n\n.page-container h1 {\n  font-size: 2rem;\n  color: #2c3e50;\n  margin-bottom: 2rem;\n  font-weight: 600;\n  text-align: center;\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n}\n\n/* 加载状态优化 */\n.loading-container {\n  padding: 3rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n/* 错误状态优化 */\n.error-container {\n  padding: 2rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n.solution-form {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.question-input {\n  display: flex;\n  gap: 12px;\n}\n\n.question-input .el-input {\n  flex: 1;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.w-100 {\n  width: 100%;\n}\n\n.el-form-item {\n  margin-bottom: 22px;\n}\n\n.el-form-item:last-child {\n  margin-bottom: 0;\n}\n\n.markdown-editor {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n:deep(.markdown-editor .el-tabs__header) {\n  margin: 0;\n}\n\n:deep(.markdown-editor .el-tabs__nav-wrap) {\n  padding: 0 15px;\n  background: #f8f9fa;  \n}\n\n:deep(.markdown-editor .el-tabs__item) {\n  padding: 0 20px;\n  height: 40px;\n  line-height: 40px;\n}\n\n.editor-textarea {\n  width: 100%;\n  min-height: 400px;\n  padding: 15px;\n  border: none;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  resize: vertical;\n  background: #fff;\n  color: #333;\n}\n\n.markdown-preview {\n  padding: 20px;\n  min-height: 400px;\n  background: #fff;\n  overflow: auto;\n}\n\n/* MathJax公式样式 */\n.markdown-preview :deep(.MathJax) {\n  color: #333;\n}\n\n/* 其他Markdown样式 */\n.markdown-preview :deep(h1),\n.markdown-preview :deep(h2),\n.markdown-preview :deep(h3) {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-preview :deep(pre) {\n  background-color: #f6f8fa;\n  padding: 12px;\n  border-radius: 6px;\n  overflow: auto;\n}\n\n.markdown-preview :deep(code) {\n  background-color: #f6f8fa;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n  color: #c7254e;\n}\n\n.markdown-preview :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin-left: 0;\n}\n\n.markdown-preview :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(th),\n.markdown-preview :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 0.6em 1em;\n}\n\n.markdown-preview :deep(ul),\n.markdown-preview :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(li) {\n  margin: 0.5em 0;\n}\n\n.markdown-preview :deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.markdown-preview :deep(a:hover) {\n  text-decoration: underline;\n}\n\n.markdown-preview :deep(img) {\n  max-width: 100%;\n  border-radius: 4px;\n}\n\n/* 按钮组样式 */\n.el-form-item:last-child {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.el-form-item:last-child .el-button {\n  min-width: 120px;\n  height: 40px;\n  margin: 0 8px;\n}\n\n/* 禁用输入框样式 */\n:deep(.el-input.is-disabled .el-input__inner) {\n  background-color: #f8f9fa;\n  color: #606266;\n  border-color: #e4e7ed;\n}\n\n/* 对话框样式优化 */\n.el-dialog {\n  border-radius: 12px;\n  max-width: 500px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.8rem;\n  margin-top: 1.5rem;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .page-container {\n    padding: 20px;\n    border-radius: 0;\n  }\n  \n  .question-input {\n    flex-direction: column;\n  }\n  \n  .editor-textarea,\n  .markdown-preview {\n    min-height: 300px;\n  }\n  \n  .el-form-item:last-child .el-button {\n    width: 100%;\n    margin: 8px 0;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}