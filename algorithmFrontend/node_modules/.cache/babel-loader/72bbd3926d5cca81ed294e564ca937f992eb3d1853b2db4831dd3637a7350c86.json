{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppHeader from '@/components/AppHeader.vue';\nimport { getQuestionDetail } from '@/api/question';\nimport { saveDraft, publishSolution } from '@/api/solution';\nimport MarkdownIt from 'markdown-it';\nimport DOMPurify from 'dompurify';\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'CreateSolutionView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      activeTab: 'edit',\n      fetching: false,\n      publishing: false,\n      manuallySaving: false,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      form: {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content: ''\n      },\n      mathJaxLoaded: false,\n      draftId: null // 保存草稿ID，用于后续更新\n    };\n  },\n  computed: {\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content || '');\n        const html = this.mdi.render(content);\n        return DOMPurify.sanitize(html);\n      } catch (e) {\n        console.error('Markdown处理错误:', e);\n        return '内容解析出错';\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'preview') {\n        this.initMathJax();\n        this.$nextTick(() => this.renderMathJax());\n      }\n    },\n    'form.content'() {\n      if (this.activeTab === 'preview' && this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax());\n      }\n    }\n  },\n  mounted() {\n    this.initMathJax();\n  },\n  methods: {\n    // 新增方法：跳转到题目页面\n    goToProblem() {\n      if (this.form.question_id) {\n        this.$router.push(`/${this.form.question_id}/problems`);\n      }\n    },\n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        MathJax.typesetPromise();\n      }\n    },\n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true;\n        return;\n      }\n\n      // 配置MathJax\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady();\n            this.mathJaxLoaded = true;\n            if (this.activeTab === 'preview') {\n              this.$nextTick(() => this.renderMathJax());\n            }\n          }\n        }\n      };\n\n      // 加载MathJax脚本\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n      script.async = true;\n      script.onload = () => {\n        this.mathJaxLoaded = true;\n      };\n      document.head.appendChild(script);\n    },\n    async fetchQuestionInfo() {\n      if (!this.form.question_id) {\n        this.form.question_name = '';\n        return;\n      }\n      this.fetching = true;\n      try {\n        const response = await getQuestionDetail(this.form.question_id);\n        this.form.question_name = response.data.name;\n      } catch (error) {\n        console.error('获取题目信息失败:', error);\n        this.$message.error('获取题目信息失败: ' + (error.message || '未知错误'));\n        this.form.question_name = '';\n      } finally {\n        this.fetching = false;\n      }\n    },\n    // 手动保存草稿\n    async saveDraftManually() {\n      if (!this.validateForm(true)) return;\n      this.manuallySaving = true;\n      try {\n        // 构建请求数据，使用正确的字段名\n        const requestData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content: this.form.content\n        };\n\n        // 打印请求数据，用于调试\n        console.log('发送草稿保存请求:', requestData);\n        const response = await saveDraft(requestData);\n        console.log('草稿保存响应:', response.data);\n        if (response.data && response.data.code === 200) {\n          this.draftId = response.data.data.id;\n          this.$message.success('草稿保存成功');\n        } else {\n          this.$message.error(response.data && response.data.message || '保存失败');\n        }\n      } catch (error) {\n        console.error('保存草稿失败:', error);\n\n        // 尝试提取响应中的错误信息\n        if (error.response && error.response.data) {\n          console.log('错误响应详情:', error.response.data);\n          this.$message.error(error.response.data.message || '保存失败');\n        } else {\n          this.$message.error(error.message || '保存失败');\n        }\n      } finally {\n        this.manuallySaving = false;\n      }\n    },\n    // 发布题解（正式版本）\n    async publishSolutionAction() {\n      if (!this.validateForm()) return;\n      this.publishing = true;\n      try {\n        const requestData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content: this.form.content\n        };\n\n        // 打印请求数据，用于调试\n        console.log('发布题解请求:', requestData);\n        const response = await publishSolution(requestData);\n        console.log('发布题解响应:', response.data);\n        if (response.data && response.data.code === 200) {\n          this.$message.success('题解发布成功');\n          // 发布成功后可以跳转到题解列表或详情页\n          // this.$router.push('/solutions')\n        } else {\n          this.$message.error(response.data && response.data.message || '发布失败');\n        }\n      } catch (error) {\n        console.error('发布题解失败:', error);\n\n        // 尝试提取响应中的错误信息\n        if (error.response && error.response.data) {\n          console.log('错误响应详情:', error.response.data);\n          this.$message.error(error.response.data.message || '发布失败');\n        } else {\n          this.$message.error(error.message || '发布失败');\n        }\n      } finally {\n        this.publishing = false;\n      }\n    },\n    validateForm(isDraft = false) {\n      if (!this.form.question_id) {\n        this.$message.error('请输入题目ID');\n        return false;\n      }\n      if (!this.form.question_name && !isDraft) {\n        this.$message.error('题目ID无效或未获取到题目名称');\n        return false;\n      }\n      if (!this.form.language) {\n        this.$message.error('请输入语言类型');\n        return false;\n      }\n      if (!this.form.content) {\n        this.$message.error('请输入题解内容');\n        return false;\n      }\n      return true;\n    },\n    resetForm() {\n      this.form = {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content: ''\n      };\n      this.draftId = null;\n    }\n  }\n};","map":{"version":3,"names":["AppHeader","getQuestionDetail","saveDraft","publishSolution","MarkdownIt","DOMPurify","name","components","data","activeTab","fetching","publishing","manuallySaving","mdi","html","linkify","typographer","form","question_id","question_name","language","content","mathJaxLoaded","draftId","computed","compiledMarkdown","String","render","sanitize","e","console","error","watch","newVal","initMathJax","$nextTick","renderMathJax","form.content","mounted","methods","goToProblem","$router","push","MathJax","typesetPromise","window","tex","inlineMath","displayMath","processEscapes","options","skipHtmlTags","startup","ready","defaultReady","script","document","createElement","src","async","onload","head","appendChild","fetchQuestionInfo","response","$message","message","saveDraftManually","validateForm","requestData","log","code","id","success","publishSolutionAction","isDraft","resetForm"],"sources":["/var/www/AlgorithmWeb/algorithmFrontend/src/views/CreateSolutionView.vue"],"sourcesContent":["<template>\n  <div class=\"create-solution-view\">\n    <AppHeader />\n    <main class=\"page-container\">\n      <h1>新建题解</h1>\n      \n      <el-form :model=\"form\" label-width=\"120px\" class=\"solution-form\">\n        <!-- 题目选择区域 -->\n        <el-form-item label=\"题目ID\">\n          <div class=\"question-input\">\n            <el-input v-model=\"form.question_id\" placeholder=\"输入题目ID\" @blur=\"fetchQuestionInfo\" />\n            <el-button \n              type=\"primary\" \n              icon=\"el-icon-link\" \n              :disabled=\"!form.question_id\" \n              @click=\"goToProblem\"\n              title=\"前往题目页面\"\n            >\n              查看题目\n            </el-button>\n          </div>\n        </el-form-item>\n\n        <!-- 题目名称展示区域 -->\n        <el-form-item label=\"题目名称\">\n          <el-input v-model=\"form.question_name\" disabled placeholder=\"获取题目名称\" />\n        </el-form-item>\n\n        <!-- 语言类型选择 -->\n        <el-form-item label=\"语言类型\">\n          <el-input v-model=\"form.language\" placeholder=\"例如: C++, Python, Java\" />\n        </el-form-item>\n\n        <!-- Markdown编辑器 -->\n        <el-form-item label=\"题解内容\">\n          <div class=\"markdown-editor\">\n            <el-tabs v-model=\"activeTab\">\n              <el-tab-pane label=\"编辑\" name=\"edit\">\n                <textarea \n                  v-model=\"form.content\" \n                  class=\"editor-textarea\"\n                  placeholder=\"输入题解内容（Markdown格式）\"\n                ></textarea>\n              </el-tab-pane>\n              <el-tab-pane label=\"预览\" name=\"preview\">\n                <div class=\"markdown-preview\" v-html=\"compiledMarkdown\"></div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </el-form-item>\n\n        <!-- 按钮组 -->\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"publishSolutionAction\" :loading=\"publishing\">发布</el-button>\n          <el-button type=\"info\" @click=\"saveDraftManually\" :loading=\"manuallySaving\">保存草稿</el-button>\n          <el-button @click=\"resetForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </main>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader.vue'\nimport { getQuestionDetail } from '@/api/question'\nimport { saveDraft, publishSolution } from '@/api/solution'\nimport MarkdownIt from 'markdown-it'\nimport DOMPurify from 'dompurify'\n\n// 提前声明MathJax类型以避免no-undef错误\n/* global MathJax */\n\nexport default {\n  name: 'CreateSolutionView',\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      activeTab: 'edit',\n      fetching: false,\n      publishing: false,\n      manuallySaving: false,\n      mdi: new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      }),\n      form: {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content: ''\n      },\n      mathJaxLoaded: false,\n      draftId: null // 保存草稿ID，用于后续更新\n    }\n  },\n  computed: {\n    compiledMarkdown() {\n      try {\n        const content = String(this.form.content || '')\n        const html = this.mdi.render(content)\n        return DOMPurify.sanitize(html)\n      } catch (e) {\n        console.error('Markdown处理错误:', e)\n        return '内容解析出错'\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'preview') {\n        this.initMathJax()\n        this.$nextTick(() => this.renderMathJax())\n      }\n    },\n    'form.content'() {\n      if (this.activeTab === 'preview' && this.mathJaxLoaded) {\n        this.$nextTick(() => this.renderMathJax())\n      }\n    }\n  },\n  mounted() {\n    this.initMathJax()\n  },\n  methods: {\n    // 新增方法：跳转到题目页面\n    goToProblem() {\n      if (this.form.question_id) {\n        this.$router.push(`/${this.form.question_id}/problems`)\n      }\n    },\n    \n    renderMathJax() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        MathJax.typesetPromise()\n      }\n    },\n    \n    initMathJax() {\n      if (this.mathJaxLoaded || typeof MathJax !== 'undefined') {\n        this.mathJaxLoaded = true\n        return\n      }\n\n      // 配置MathJax\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n          processEscapes: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n        },\n        startup: {\n          ready: () => {\n            MathJax.startup.defaultReady()\n            this.mathJaxLoaded = true\n            if (this.activeTab === 'preview') {\n              this.$nextTick(() => this.renderMathJax())\n            }\n          }\n        }\n      }\n\n      // 加载MathJax脚本\n      const script = document.createElement('script')\n      script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n      script.async = true\n      script.onload = () => {\n        this.mathJaxLoaded = true\n      }\n      document.head.appendChild(script)\n    },\n    async fetchQuestionInfo() {\n      if (!this.form.question_id) {\n        this.form.question_name = ''\n        return\n      }\n\n      this.fetching = true\n      try {\n        const response = await getQuestionDetail(this.form.question_id)\n        this.form.question_name = response.data.name\n      } catch (error) {\n        console.error('获取题目信息失败:', error)\n        this.$message.error('获取题目信息失败: ' + (error.message || '未知错误'))\n        this.form.question_name = ''\n      } finally {\n        this.fetching = false\n      }\n    },\n    \n    // 手动保存草稿\n    async saveDraftManually() {\n      if (!this.validateForm(true)) return\n      \n      this.manuallySaving = true\n      \n      try {\n        // 构建请求数据，使用正确的字段名\n        const requestData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content: this.form.content\n        }\n        \n        // 打印请求数据，用于调试\n        console.log('发送草稿保存请求:', requestData)\n        \n        const response = await saveDraft(requestData)\n        \n        console.log('草稿保存响应:', response.data)\n        \n        if (response.data && response.data.code === 200) {\n          this.draftId = response.data.data.id\n          this.$message.success('草稿保存成功')\n        } else {\n          this.$message.error((response.data && response.data.message) || '保存失败')\n        }\n      } catch (error) {\n        console.error('保存草稿失败:', error)\n        \n        // 尝试提取响应中的错误信息\n        if (error.response && error.response.data) {\n          console.log('错误响应详情:', error.response.data)\n          this.$message.error(error.response.data.message || '保存失败')\n        } else {\n          this.$message.error(error.message || '保存失败')\n        }\n      } finally {\n        this.manuallySaving = false\n      }\n    },\n    \n    // 发布题解（正式版本）\n    async publishSolutionAction() {\n      if (!this.validateForm()) return\n      \n      this.publishing = true\n      try {\n        const requestData = {\n          question_id: this.form.question_id,\n          language: this.form.language,\n          content: this.form.content\n        }\n        \n        // 打印请求数据，用于调试\n        console.log('发布题解请求:', requestData)\n        \n        const response = await publishSolution(requestData)\n        \n        console.log('发布题解响应:', response.data)\n        \n        if (response.data && response.data.code === 200) {\n          this.$message.success('题解发布成功')\n          // 发布成功后可以跳转到题解列表或详情页\n          // this.$router.push('/solutions')\n        } else {\n          this.$message.error((response.data && response.data.message) || '发布失败')\n        }\n      } catch (error) {\n        console.error('发布题解失败:', error)\n        \n        // 尝试提取响应中的错误信息\n        if (error.response && error.response.data) {\n          console.log('错误响应详情:', error.response.data)\n          this.$message.error(error.response.data.message || '发布失败')\n        } else {\n          this.$message.error(error.message || '发布失败')\n        }\n      } finally {\n        this.publishing = false\n      }\n    },\n    \n    validateForm(isDraft = false) {\n      if (!this.form.question_id) {\n        this.$message.error('请输入题目ID')\n        return false\n      }\n      if (!this.form.question_name && !isDraft) {\n        this.$message.error('题目ID无效或未获取到题目名称')\n        return false\n      }\n      if (!this.form.language) {\n        this.$message.error('请输入语言类型')\n        return false\n      }\n      if (!this.form.content) {\n        this.$message.error('请输入题解内容')\n        return false\n      }\n      return true\n    },\n    \n    resetForm() {\n      this.form = {\n        question_id: '',\n        question_name: '',\n        language: '',\n        content: ''\n      }\n      this.draftId = null\n    }\n  }\n}\n</script>\n\n<style scoped>\n.create-solution-view {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  padding-top: 60px;\n}\n\n.page-container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n\n.page-container h1 {\n  font-size: 2rem;\n  color: #2c3e50;\n  margin-bottom: 2rem;\n  font-weight: 600;\n  text-align: center;\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n}\n\n.solution-form {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.question-input {\n  display: flex;\n  gap: 12px;\n}\n\n.question-input .el-input {\n  flex: 1;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.el-form-item {\n  margin-bottom: 22px;\n}\n\n.el-form-item:last-child {\n  margin-bottom: 0;\n}\n\n.markdown-editor {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n:deep(.markdown-editor .el-tabs__header) {\n  margin: 0;\n}\n\n:deep(.markdown-editor .el-tabs__nav-wrap) {\n  padding: 0 15px;\n  background: #f8f9fa;  \n}\n\n:deep(.markdown-editor .el-tabs__item) {\n  padding: 0 20px;\n  height: 40px;\n  line-height: 40px;\n}\n\n.editor-textarea {\n  width: 100%;\n  min-height: 400px;\n  padding: 15px;\n  border: none;\n  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  resize: vertical;\n  background: #fff;\n  color: #333;\n}\n\n.markdown-preview {\n  padding: 20px;\n  min-height: 400px;\n  background: #fff;\n  overflow: auto;\n}\n\n/* MathJax公式样式 */\n.markdown-preview :deep(.MathJax) {\n  color: #333;\n}\n\n/* 其他Markdown样式 */\n.markdown-preview :deep(h1),\n.markdown-preview :deep(h2),\n.markdown-preview :deep(h3) {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-preview :deep(pre) {\n  background-color: #f6f8fa;\n  padding: 12px;\n  border-radius: 6px;\n  overflow: auto;\n}\n\n.markdown-preview :deep(code) {\n  background-color: #f6f8fa;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n  color: #c7254e;\n}\n\n.markdown-preview :deep(blockquote) {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin-left: 0;\n}\n\n.markdown-preview :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(th),\n.markdown-preview :deep(td) {\n  border: 1px solid #dfe2e5;\n  padding: 0.6em 1em;\n}\n\n.markdown-preview :deep(ul),\n.markdown-preview :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-preview :deep(li) {\n  margin: 0.5em 0;\n}\n\n.markdown-preview :deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.markdown-preview :deep(a:hover) {\n  text-decoration: underline;\n}\n\n.markdown-preview :deep(img) {\n  max-width: 100%;\n  border-radius: 4px;\n}\n\n/* 按钮组样式 */\n.el-form-item:last-child {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.el-form-item:last-child .el-button {\n  min-width: 120px;\n  height: 40px;\n  margin: 0 8px;\n}\n\n/* 禁用输入框样式 */\n:deep(.el-input.is-disabled .el-input__inner) {\n  background-color: #f8f9fa;\n  color: #606266;\n  border-color: #e4e7ed;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .page-container {\n    padding: 20px;\n    border-radius: 0;\n  }\n  \n  .question-input {\n    flex-direction: column;\n  }\n  \n  .editor-textarea,\n  .markdown-preview {\n    min-height: 300px;\n  }\n  \n  .el-form-item:last-child .el-button {\n    width: 100%;\n    margin: 8px 0;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}