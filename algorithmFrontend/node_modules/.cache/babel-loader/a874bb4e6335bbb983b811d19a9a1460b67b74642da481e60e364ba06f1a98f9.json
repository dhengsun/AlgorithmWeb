{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ElMessage } from 'element-plus';\nimport { User as ElIconUser, Lock as ElIconLock } from '@element-plus/icons-vue';\nimport { login } from '@/api/auth';\nexport default {\n  name: 'LoginView',\n  components: {\n    ElIconUser,\n    ElIconLock\n  },\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loading: false,\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    console.log('LoginView组件已创建');\n  },\n  methods: {\n    async handleLogin() {\n      if (!this.$refs.loginFormRef) return;\n      try {\n        await this.$refs.loginFormRef.validate();\n        this.loading = true;\n        const response = await login(this.loginForm);\n        console.log('登录响应:', response.data);\n\n        // 存储 token 和用户信息\n        localStorage.setItem('access_token', response.data.access);\n        localStorage.setItem('refresh_token', response.data.refresh);\n        localStorage.setItem('user_info', JSON.stringify(response.data.user));\n        ElMessage.success('登录成功');\n        this.$router.push('/');\n      } catch (error) {\n        console.error('登录错误:', error);\n        ElMessage.error(error.response?.data?.detail || '登录失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["ElMessage","User","ElIconUser","Lock","ElIconLock","login","name","components","data","loginForm","username","password","loading","rules","required","message","trigger","created","console","log","methods","handleLogin","$refs","loginFormRef","validate","response","localStorage","setItem","access","refresh","JSON","stringify","user","success","$router","push","error","detail","goToRegister"],"sources":["/var/www/AlgorithmWeb/algorithmFrontend/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <h2>登录</h2>\n        <p class=\"subtitle\" v-if=\"loginForm.username\">欢迎 {{ loginForm.username }}</p>\n        <p class=\"subtitle\" v-else>请输入您的用户名和密码</p>\n      </div>\n      <el-form \n        :model=\"loginForm\" \n        ref=\"loginFormRef\" \n        :rules=\"rules\"\n        class=\"login-form\">\n        <el-form-item prop=\"username\">\n          <el-input \n            v-model=\"loginForm.username\"\n            placeholder=\"用户名\"\n            size=\"large\">\n            <template #prefix>\n              <el-icon class=\"input-icon\"><el-icon-user /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input \n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            size=\"large\"\n            show-password>\n            <template #prefix>\n              <el-icon class=\"input-icon\"><el-icon-lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            :loading=\"loading\"\n            size=\"large\"\n            class=\"login-button\"\n            @click=\"handleLogin\">\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"register-link\">\n        <a href=\"javascript:void(0)\" @click=\"goToRegister\">马上注册</a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus'\nimport { User as ElIconUser, Lock as ElIconLock } from '@element-plus/icons-vue'\nimport { login } from '@/api/auth'\n\nexport default {\n  name: 'LoginView',\n  components: {\n    ElIconUser,\n    ElIconLock\n  },\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loading: false,\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    console.log('LoginView组件已创建')\n  },\n  methods: {\n    async handleLogin() {\n      if (!this.$refs.loginFormRef) return\n      \n      try {\n        await this.$refs.loginFormRef.validate()\n        this.loading = true\n        \n        const response = await login(this.loginForm)\n        console.log('登录响应:', response.data)\n\n        // 存储 token 和用户信息\n        localStorage.setItem('access_token', response.data.access)\n        localStorage.setItem('refresh_token', response.data.refresh)\n        localStorage.setItem('user_info', JSON.stringify(response.data.user))\n\n        ElMessage.success('登录成功')\n        this.$router.push('/')\n      } catch (error) {\n        console.error('登录错误:', error)\n        ElMessage.error(error.response?.data?.detail || '登录失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    goToRegister() {\n      this.$router.push('/register')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url('../assets/auth.jpg');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  overflow: hidden;\n}\n\n.login-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  z-index: 1;\n}\n\n.login-box {\n  position: relative;\n  width: 450px;\n  padding: 40px;\n  border-radius: 12px;\n  background: rgba(33, 33, 38, 0.8);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  z-index: 2;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h2 {\n  font-size: 28px;\n  font-weight: 600;\n  color: #ffffff;\n  margin-bottom: 8px;\n}\n\n.subtitle {\n  font-size: 16px;\n  color: #e1e1e1;\n  margin-bottom: 20px;\n  min-height: 24px;\n  transition: all 0.3s ease;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n.login-button {\n  width: 100%;\n  margin-top: 10px;\n  padding: 12px 0;\n  font-size: 16px;\n  border-radius: 6px;\n  background: #409EFF;\n  border-color: #409EFF;\n}\n\n.input-icon {\n  color: #909399;\n  font-size: 18px;\n}\n\n/* 登录框内输入框样式 */\n:deep(.el-input__wrapper) {\n  background-color: rgba(255, 255, 255, 0.1);\n  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.1) inset;\n}\n\n:deep(.el-input__inner) {\n  color: #ffffff;\n}\n\n:deep(.el-input__inner::placeholder) {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n/* 输入框悬停样式 */\n:deep(.el-input:hover .el-input__wrapper) {\n  box-shadow: 0 0 0 1px #409EFF inset;\n}\n\n/* 按钮悬停样式 */\n.login-button:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n  color: #fff;\n}\n\n.register-link {\n  text-align: center;\n  margin-top: 20px;\n  color: #ccc;\n  font-size: 14px;\n}\n\n.register-link a {\n  color: #409EFF;\n  text-decoration: none;\n  transition: color 0.3s ease;\n}\n\n.register-link a:hover {\n  color: #66b1ff;\n  text-decoration: underline;\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 768px) {\n  .login-box {\n    width: 90%;\n    max-width: 450px;\n    padding: 30px;\n  }\n}\n</style>\n"],"mappings":";AAsDA,SAASA,SAAQ,QAAS,cAAa;AACvC,SAASC,IAAG,IAAKC,UAAU,EAAEC,IAAG,IAAKC,UAAS,QAAS,yBAAwB;AAC/E,SAASC,KAAI,QAAS,YAAW;AAEjC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVL,UAAU;IACVE;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLH,QAAQ,EAAE,CACR;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,EACtD;QACDL,QAAQ,EAAE,CACR;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO;MAExD;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,gBAAgB;EAC9B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,YAAY,EAAE;MAE9B,IAAI;QACF,MAAM,IAAI,CAACD,KAAK,CAACC,YAAY,CAACC,QAAQ,CAAC;QACvC,IAAI,CAACZ,OAAM,GAAI,IAAG;QAElB,MAAMa,QAAO,GAAI,MAAMpB,KAAK,CAAC,IAAI,CAACI,SAAS;QAC3CS,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,QAAQ,CAACjB,IAAI;;QAElC;QACAkB,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACjB,IAAI,CAACoB,MAAM;QACzDF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,QAAQ,CAACjB,IAAI,CAACqB,OAAO;QAC3DH,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEG,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACjB,IAAI,CAACwB,IAAI,CAAC;QAEpEhC,SAAS,CAACiC,OAAO,CAAC,MAAM;QACxB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;MACvB,EAAE,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,OAAO,EAAEA,KAAK;QAC5BpC,SAAS,CAACoC,KAAK,CAACA,KAAK,CAACX,QAAQ,EAAEjB,IAAI,EAAE6B,MAAK,IAAK,MAAM;MACxD,UAAU;QACR,IAAI,CAACzB,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IAED0B,YAAYA,CAAA,EAAG;MACb,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,WAAW;IAC/B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}