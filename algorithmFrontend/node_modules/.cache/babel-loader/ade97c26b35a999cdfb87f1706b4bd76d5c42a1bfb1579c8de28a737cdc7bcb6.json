{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"filter-card\"\n};\nconst _hoisted_3 = {\n  class: \"search-container\"\n};\nconst _hoisted_4 = {\n  class: \"filter-header\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"selected-filters\"\n};\nconst _hoisted_6 = {\n  class: \"filter-tags\"\n};\nconst _hoisted_7 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"tag-mode-switch\"\n};\nconst _hoisted_9 = {\n  class: \"table-container\"\n};\nconst _hoisted_10 = {\n  class: \"problem-title\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"solution-count\"\n};\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = [\"href\"];\nconst _hoisted_14 = {\n  class: \"tag-container\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"pagination-wrapper\"\n};\nconst _hoisted_16 = {\n  class: \"platform-selector\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"filter-section\"\n};\nconst _hoisted_18 = {\n  class: \"tag-group\"\n};\nconst _hoisted_19 = {\n  class: \"tag-group\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"filter-section\"\n};\nconst _hoisted_21 = {\n  class: \"tag-group\"\n};\nconst _hoisted_22 = {\n  class: \"tag-group\"\n};\nconst _hoisted_23 = {\n  class: \"tag-group\"\n};\nconst _hoisted_24 = {\n  class: \"tag-group\"\n};\nconst _hoisted_25 = {\n  class: \"tag-group\"\n};\nconst _hoisted_26 = {\n  class: \"tag-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 替换原有的filter-card部分 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 搜索框放在最上方 \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    modelValue: $setup.searchQuery,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.searchQuery = $event),\n    placeholder: \"搜索题目\",\n    class: \"search-input\",\n    clearable: \"\",\n    onClear: $setup.handleSearchClear,\n    onKeyup: _withKeys($setup.handleSearch, [\"enter\"])\n  }, {\n    prepend: _withCtx(() => [_createVNode(_component_el_select, {\n      modelValue: $setup.searchType,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchType = $event),\n      placeholder: \"选择类型\",\n      style: {\n        \"width\": \"110px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_option, {\n        label: \"题号\",\n        value: \"id\"\n      }), _createVNode(_component_el_option, {\n        label: \"站外ID\",\n        value: \"ext_id\"\n      }), _createVNode(_component_el_option, {\n        label: \"题目名称\",\n        value: \"name\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    append: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleSearch,\n      icon: $setup.Search\n    }, null, 8 /* PROPS */, [\"icon\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" 筛选按钮和模式选择 \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.showFilterDialog,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode($setup[\"Filter\"])]),\n      _: 1 /* STABLE */\n    }), _cache[18] || (_cache[18] = _createTextVNode(\" 筛选 \"))]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_radio_group, {\n    modelValue: $setup.filterMode,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filterMode = $event),\n    size: \"small\",\n    style: {\n      \"margin-left\": \"10px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n      label: \"intersection\"\n    }, {\n      default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"交集\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"union\"\n    }, {\n      default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"并集\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" 已选条件展示 \"), $setup.hasSelectedFilters ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[21] || (_cache[21] = _createElementVNode(\"span\", {\n    class: \"filter-label\"\n  }, \"已选择：\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" 平台筛选 \"), $setup.selectedPlatform ? (_openBlock(), _createBlock(_component_el_tag, {\n    key: 0,\n    closable: \"\",\n    type: $setup.getPlatformTagType($setup.selectedPlatform),\n    onClose: _cache[3] || (_cache[3] = $event => $setup.removeFilter('platform'))\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getPlatformName($setup.selectedPlatform)), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"type\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 难度筛选 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selectedDifficulties, diff => {\n    return _openBlock(), _createBlock(_component_el_tag, {\n      key: `diff-${diff}`,\n      closable: \"\",\n      type: $setup.getDifficultyTagType({\n        difficulty: diff,\n        oj_platform: $setup.selectedPlatform\n      }),\n      onClose: $event => $setup.removeFilter('difficulty', diff)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(diff), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClose\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 标签筛选 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selectedTags, tag => {\n    return _openBlock(), _createBlock(_component_el_tag, {\n      key: `tag-${tag}`,\n      closable: \"\",\n      type: $setup.getTagType(tag, $setup.selectedPlatform),\n      onClose: $event => $setup.removeFilter('tag', tag)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getTagName(tag)), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClose\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 主内容区 \"), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 标签展示模式切换（仅对洛谷题目有效） \"), $setup.hasLuoguProblems ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_radio_group, {\n    modelValue: $setup.tagDisplayMode,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.tagDisplayMode = $event),\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n      label: \"algorithm\"\n    }, {\n      default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"算法标签\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"source\"\n    }, {\n      default: _withCtx(() => _cache[23] || (_cache[23] = [_createTextVNode(\"来源标签\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"time\"\n    }, {\n      default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"时间标签\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"region\"\n    }, {\n      default: _withCtx(() => _cache[25] || (_cache[25] = [_createTextVNode(\"地区标签\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"other\"\n    }, {\n      default: _withCtx(() => _cache[26] || (_cache[26] = [_createTextVNode(\"其他标签\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"all\"\n    }, {\n      default: _withCtx(() => _cache[27] || (_cache[27] = [_createTextVNode(\"全部标签\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 题目列表表格 \"), _createElementVNode(\"div\", _hoisted_9, [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.problems,\n    style: {\n      \"width\": \"100%\"\n    },\n    onRowClick: $setup.handleRowClick\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 题号列 \"), _createVNode(_component_el_table_column, {\n      prop: \"id\",\n      label: \"题号\",\n      width: \"80\"\n    }), _createCommentVNode(\" 题目名称列 \"), _createVNode(_component_el_table_column, {\n      label: \"题目名称\",\n      \"min-width\": \"220\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(row.name), 1 /* TEXT */), row.solution_count > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \" (\" + _toDisplayString(row.solution_count) + \"解) \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 平台列 \"), _createVNode(_component_el_table_column, {\n      label: \"平台\",\n      width: \"100\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, {\n        type: $setup.getPlatformTagType(row.oj_platform),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getPlatformName(row.oj_platform)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 添加题解数列 \"), _createVNode(_component_el_table_column, {\n      prop: \"solution_count\",\n      label: \"题解\",\n      width: \"80\",\n      align: \"center\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [row.solution_count > 0 ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 0,\n        type: \"info\",\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.solution_count), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"-\"))]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 原题ID列 \"), _createVNode(_component_el_table_column, {\n      label: \"原题ID\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"a\", {\n        href: $setup.generateOjLink(row),\n        target: \"_blank\",\n        class: \"external-id\",\n        onClick: _cache[5] || (_cache[5] = _withModifiers(() => {}, [\"stop\"]))\n      }, _toDisplayString(row.ext_question_id), 9 /* TEXT, PROPS */, _hoisted_13)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 难度列 \"), _createVNode(_component_el_table_column, {\n      label: \"难度\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, {\n        type: $setup.getDifficultyTagType(row),\n        size: \"small\",\n        effect: \"dark\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.difficulty), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 标签列 \"), _createVNode(_component_el_table_column, {\n      label: \"标签\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getFilteredTags(row.algorithm_tags, row.oj_platform), tag => {\n        return _openBlock(), _createBlock(_component_el_tag, {\n          key: tag,\n          type: $setup.getTagType(tag, row.oj_platform),\n          size: \"small\",\n          class: \"tag-item\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getTagName(tag)), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]), _createCommentVNode(\" 分页器 \"), $setup.totalCount > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_pagination, {\n    \"current-page\": $setup.currentPage,\n    \"onUpdate:currentPage\": _cache[6] || (_cache[6] = $event => $setup.currentPage = $event),\n    \"page-size\": $setup.pageSize,\n    total: $setup.totalCount,\n    layout: \"prev, pager, next\",\n    onCurrentChange: $setup.fetchProblems\n  }, null, 8 /* PROPS */, [\"current-page\", \"total\"])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 筛选弹窗 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.filterDialogVisible,\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $setup.filterDialogVisible = $event),\n    title: \"筛选条件\",\n    width: \"70%\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: _cache[16] || (_cache[16] = $event => $setup.filterDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[32] || (_cache[32] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.applyFilters\n    }, {\n      default: _withCtx(() => _cache[33] || (_cache[33] = [_createTextVNode(\"确定\")])),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_el_radio_group, {\n      modelValue: $setup.filterPlatform,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.filterPlatform = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n        label: \"leetcode\"\n      }, {\n        default: _withCtx(() => _cache[28] || (_cache[28] = [_createTextVNode(\"LeetCode\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_radio_button, {\n        label: \"luogu\"\n      }, {\n        default: _withCtx(() => _cache[29] || (_cache[29] = [_createTextVNode(\"洛谷\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]), $setup.filterPlatform === 'leetcode' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_cache[30] || (_cache[30] = _createElementVNode(\"h3\", null, \"难度\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.LeetcodeDifficulties, diff => {\n      return _openBlock(), _createBlock(_component_el_checkbox, {\n        key: diff,\n        label: diff,\n        modelValue: $setup.tempDifficulties,\n        \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.tempDifficulties = $event),\n        value: diff\n      }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]), _cache[31] || (_cache[31] = _createElementVNode(\"h3\", null, \"算法标签\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.LeetcodeTags, tag => {\n      return _openBlock(), _createBlock(_component_el_checkbox, {\n        key: tag,\n        label: tag,\n        modelValue: $setup.tempTags,\n        \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.tempTags = $event),\n        value: tag\n      }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $setup.filterPlatform === 'luogu' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createVNode(_component_el_tabs, {\n      type: \"border-card\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n        label: \"难度\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.LuoguDifficulties, diff => {\n          return _openBlock(), _createBlock(_component_el_checkbox, {\n            key: diff,\n            label: diff,\n            modelValue: $setup.tempDifficulties,\n            \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.tempDifficulties = $event),\n            value: diff\n          }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"算法标签\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.luoguTags.Algorithm, tag => {\n          return _openBlock(), _createBlock(_component_el_checkbox, {\n            key: tag.tag_id,\n            label: tag.name,\n            modelValue: $setup.tempTags,\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.tempTags = $event),\n            value: `Algorithm_${tag.name}`\n          }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"来源标签\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_23, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.luoguTags.Source, tag => {\n          return _openBlock(), _createBlock(_component_el_checkbox, {\n            key: tag.tag_id,\n            label: tag.name,\n            modelValue: $setup.tempTags,\n            \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.tempTags = $event),\n            value: `Source_${tag.name}`\n          }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"时间标签\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.luoguTags.Time, tag => {\n          return _openBlock(), _createBlock(_component_el_checkbox, {\n            key: tag.tag_id,\n            label: tag.name,\n            modelValue: $setup.tempTags,\n            \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.tempTags = $event),\n            value: `Time_${tag.name}`\n          }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"地区标签\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.luoguTags.Region, tag => {\n          return _openBlock(), _createBlock(_component_el_checkbox, {\n            key: tag.tag_id,\n            label: tag.name,\n            modelValue: $setup.tempTags,\n            \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.tempTags = $event),\n            value: `Region_${tag.name}`\n          }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"其他标签\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_26, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.luoguTags.Other, tag => {\n          return _openBlock(), _createBlock(_component_el_checkbox, {\n            key: tag.tag_id,\n            label: tag.name,\n            modelValue: $setup.tempTags,\n            \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $setup.tempTags = $event),\n            value: `Other_${tag.name}`\n          }, null, 8 /* PROPS */, [\"label\", \"modelValue\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_input","modelValue","$setup","searchQuery","_cache","$event","placeholder","clearable","onClear","handleSearchClear","onKeyup","_withKeys","handleSearch","prepend","_withCtx","_component_el_select","searchType","style","default","_component_el_option","label","value","_","append","_component_el_button","type","onClick","icon","Search","_hoisted_4","showFilterDialog","size","_component_el_icon","_createTextVNode","_component_el_radio_group","filterMode","_component_el_radio_button","hasSelectedFilters","_hoisted_5","_hoisted_6","selectedPlatform","_createBlock","_component_el_tag","closable","getPlatformTagType","onClose","removeFilter","_toDisplayString","getPlatformName","_Fragment","_renderList","selectedDifficulties","diff","getDifficultyTagType","difficulty","oj_platform","selectedTags","tag","getTagType","getTagName","_hoisted_7","hasLuoguProblems","_hoisted_8","tagDisplayMode","_hoisted_9","_component_el_table","data","problems","onRowClick","handleRowClick","_component_el_table_column","prop","width","row","_hoisted_10","name","solution_count","_hoisted_11","align","_hoisted_12","href","generateOjLink","target","_withModifiers","ext_question_id","_hoisted_13","effect","_hoisted_14","getFilteredTags","algorithm_tags","loading","totalCount","_hoisted_15","_component_el_pagination","currentPage","pageSize","total","layout","onCurrentChange","fetchProblems","_component_el_dialog","filterDialogVisible","title","footer","applyFilters","_hoisted_16","filterPlatform","_hoisted_17","_hoisted_18","LeetcodeDifficulties","_component_el_checkbox","tempDifficulties","_hoisted_19","LeetcodeTags","tempTags","_hoisted_20","_component_el_tabs","_component_el_tab_pane","_hoisted_21","LuoguDifficulties","_hoisted_22","luoguTags","Algorithm","tag_id","_hoisted_23","Source","_hoisted_24","Time","_hoisted_25","Region","_hoisted_26","Other"],"sources":["/Users/hsd/File/Code/Project/AlgorithmWeb/algorithmFrontend/src/views/ProblemsView.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <!-- 替换原有的filter-card部分 -->\n    <div class=\"filter-card\">\n      <!-- 搜索框放在最上方 -->\n      <div class=\"search-container\">\n        <el-input\n          v-model=\"searchQuery\"\n          placeholder=\"搜索题目\"\n          class=\"search-input\"\n          clearable\n          @clear=\"handleSearchClear\"\n          @keyup.enter=\"handleSearch\"\n        >\n          <template #prepend>\n            <el-select \n              v-model=\"searchType\" \n              placeholder=\"选择类型\"\n              style=\"width: 110px\"\n            >\n              <el-option label=\"题号\" value=\"id\" />\n              <el-option label=\"站外ID\" value=\"ext_id\" />\n              <el-option label=\"题目名称\" value=\"name\" />\n            </el-select>\n          </template>\n          <template #append>\n            <el-button \n              type=\"primary\" \n              @click=\"handleSearch\"\n              :icon=\"Search\"\n            />\n          </template>\n        </el-input>\n      </div>\n\n      <!-- 筛选按钮和模式选择 -->\n      <div class=\"filter-header\">\n        <el-button type=\"primary\" @click=\"showFilterDialog\" size=\"small\">\n          <el-icon><Filter /></el-icon>\n          筛选\n        </el-button>\n        <el-radio-group v-model=\"filterMode\" size=\"small\" style=\"margin-left: 10px\">\n          <el-radio-button label=\"intersection\">交集</el-radio-button>\n          <el-radio-button label=\"union\">并集</el-radio-button>\n        </el-radio-group>\n      </div>\n      \n      <!-- 已选条件展示 -->\n      <div class=\"selected-filters\" v-if=\"hasSelectedFilters\">\n        <span class=\"filter-label\">已选择：</span>\n        <div class=\"filter-tags\">\n          <!-- 平台筛选 -->\n          <el-tag \n            v-if=\"selectedPlatform\"\n            closable\n            :type=\"getPlatformTagType(selectedPlatform)\"\n            @close=\"removeFilter('platform')\"\n          >\n            {{ getPlatformName(selectedPlatform) }}\n          </el-tag>\n          \n          <!-- 难度筛选 -->\n          <el-tag \n            v-for=\"diff in selectedDifficulties\"\n            :key=\"`diff-${diff}`\"\n            closable\n            :type=\"getDifficultyTagType({ difficulty: diff, oj_platform: selectedPlatform })\"\n            @close=\"removeFilter('difficulty', diff)\"\n          >\n            {{ diff }}\n          </el-tag>\n          \n          <!-- 标签筛选 -->\n          <el-tag \n            v-for=\"tag in selectedTags\"\n            :key=\"`tag-${tag}`\"\n            closable\n            :type=\"getTagType(tag, selectedPlatform)\"\n            @close=\"removeFilter('tag', tag)\"\n          >\n            {{ getTagName(tag) }}\n          </el-tag>\n        </div>\n      </div>\n    </div>\n\n    <!-- 主内容区 -->\n    <div class=\"content-wrapper\">\n      <!-- 标签展示模式切换（仅对洛谷题目有效） -->\n      <div class=\"tag-mode-switch\" v-if=\"hasLuoguProblems\">\n        <el-radio-group v-model=\"tagDisplayMode\" size=\"small\">\n          <el-radio-button label=\"algorithm\">算法标签</el-radio-button>\n          <el-radio-button label=\"source\">来源标签</el-radio-button>\n          <el-radio-button label=\"time\">时间标签</el-radio-button>\n          <el-radio-button label=\"region\">地区标签</el-radio-button>\n          <el-radio-button label=\"other\">其他标签</el-radio-button>\n          <el-radio-button label=\"all\">全部标签</el-radio-button>\n        </el-radio-group>\n      </div>\n\n      <!-- 题目列表表格 -->\n      <div class=\"table-container\">\n        <el-table \n          :data=\"problems\" \n          style=\"width: 100%\"\n          v-loading=\"loading\"\n          @row-click=\"handleRowClick\"\n        >\n          <!-- 题号列 -->\n          <el-table-column prop=\"id\" label=\"题号\" width=\"80\" />\n          \n          <!-- 题目名称列 -->\n          <el-table-column label=\"题目名称\" min-width=\"220\">\n            <template #default=\"{row}\">\n              <span class=\"problem-title\">{{ row.name }}</span>\n              <span class=\"solution-count\" v-if=\"row.solution_count > 0\">\n                ({{ row.solution_count }}解)\n              </span>\n            </template>\n          </el-table-column>\n          \n          <!-- 平台列 -->\n          <el-table-column label=\"平台\" width=\"100\">\n            <template #default=\"{row}\">\n              <el-tag :type=\"getPlatformTagType(row.oj_platform)\" size=\"small\">\n                {{ getPlatformName(row.oj_platform) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n\n          <!-- 添加题解数列 -->\n            <el-table-column prop=\"solution_count\" label=\"题解\" width=\"80\" align=\"center\">\n              <template #default=\"{row}\">\n                <el-tag v-if=\"row.solution_count > 0\" type=\"info\" size=\"small\">\n                  {{ row.solution_count }}\n                </el-tag>\n                <span v-else>-</span>\n              </template>\n            </el-table-column>\n\n          <!-- 原题ID列 -->\n          <el-table-column label=\"原题ID\" width=\"120\">\n            <template #default=\"{row}\">\n              <a \n                :href=\"generateOjLink(row)\" \n                target=\"_blank\" \n                class=\"external-id\"\n                @click.stop\n              >\n                {{ row.ext_question_id }}\n              </a>\n            </template>\n          </el-table-column>\n          \n          <!-- 难度列 -->\n          <el-table-column label=\"难度\" width=\"120\">\n            <template #default=\"{row}\">\n              <el-tag \n                :type=\"getDifficultyTagType(row)\" \n                size=\"small\"\n                effect=\"dark\"\n              >\n                {{ row.difficulty }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <!-- 标签列 -->\n          <el-table-column label=\"标签\">\n            <template #default=\"{row}\">\n              <div class=\"tag-container\">\n                <el-tag\n                  v-for=\"tag in getFilteredTags(row.algorithm_tags, row.oj_platform)\"\n                  :key=\"tag\"\n                  :type=\"getTagType(tag, row.oj_platform)\"\n                  size=\"small\"\n                  class=\"tag-item\"\n                >\n                  {{ getTagName(tag) }}\n                </el-tag>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <!-- 分页器 -->\n      <div class=\"pagination-wrapper\" v-if=\"totalCount > 0\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"totalCount\"\n          layout=\"prev, pager, next\"\n          @current-change=\"fetchProblems\"\n        />\n      </div>\n    </div>\n\n    <!-- 筛选弹窗 -->\n    <el-dialog v-model=\"filterDialogVisible\" title=\"筛选条件\" width=\"70%\">\n      <div class=\"platform-selector\">\n        <el-radio-group v-model=\"filterPlatform\">\n          <el-radio-button label=\"leetcode\">LeetCode</el-radio-button>\n          <el-radio-button label=\"luogu\">洛谷</el-radio-button>\n        </el-radio-group>\n      </div>\n\n      <!-- LeetCode筛选条件 -->\n      <div v-if=\"filterPlatform === 'leetcode'\" class=\"filter-section\">\n        <h3>难度</h3>\n        <div class=\"tag-group\">\n          <el-checkbox \n            v-for=\"diff in LeetcodeDifficulties\" \n            :key=\"diff\" \n            :label=\"diff\"\n            v-model=\"tempDifficulties\"\n            :value=\"diff\"\n          />\n        </div>\n\n        <h3>算法标签</h3>\n        <div class=\"tag-group\">\n          <el-checkbox \n            v-for=\"tag in LeetcodeTags\" \n            :key=\"tag\" \n            :label=\"tag\"\n            v-model=\"tempTags\"\n            :value=\"tag\"\n          />\n        </div>\n      </div>\n\n      <!-- 洛谷筛选条件 -->\n      <div v-if=\"filterPlatform === 'luogu'\" class=\"filter-section\">\n        <el-tabs type=\"border-card\">\n          <el-tab-pane label=\"难度\">\n            <div class=\"tag-group\">\n              <el-checkbox \n                v-for=\"diff in LuoguDifficulties\" \n                :key=\"diff\" \n                :label=\"diff\"\n                v-model=\"tempDifficulties\"\n                :value=\"diff\"\n              />\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"算法标签\">\n            <div class=\"tag-group\">\n              <el-checkbox \n                v-for=\"tag in luoguTags.Algorithm\" \n                :key=\"tag.tag_id\" \n                :label=\"tag.name\"\n                v-model=\"tempTags\"\n                :value=\"`Algorithm_${tag.name}`\"\n              />\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"来源标签\">\n            <div class=\"tag-group\">\n              <el-checkbox \n                v-for=\"tag in luoguTags.Source\" \n                :key=\"tag.tag_id\" \n                :label=\"tag.name\"\n                v-model=\"tempTags\"\n                :value=\"`Source_${tag.name}`\"\n              />\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"时间标签\">\n            <div class=\"tag-group\">\n              <el-checkbox \n                v-for=\"tag in luoguTags.Time\" \n                :key=\"tag.tag_id\" \n                :label=\"tag.name\"\n                v-model=\"tempTags\"\n                :value=\"`Time_${tag.name}`\"\n              />\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"地区标签\">\n            <div class=\"tag-group\">\n              <el-checkbox \n                v-for=\"tag in luoguTags.Region\" \n                :key=\"tag.tag_id\" \n                :label=\"tag.name\"\n                v-model=\"tempTags\"\n                :value=\"`Region_${tag.name}`\"\n              />\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"其他标签\">\n            <div class=\"tag-group\">\n              <el-checkbox \n                v-for=\"tag in luoguTags.Other\" \n                :key=\"tag.tag_id\" \n                :label=\"tag.name\"\n                v-model=\"tempTags\"\n                :value=\"`Other_${tag.name}`\"\n              />\n            </div>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n\n      <template #footer>\n        <el-button @click=\"filterDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"applyFilters\">确定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { getQuestionList, getAllTags } from '@/api/question'\nimport { Filter } from '@element-plus/icons-vue'\nimport { \n  LeetcodeTags, \n  LuoguDifficulties, \n  LeetcodeDifficulties \n} from '@/constants/tags'\nimport { Search } from '@element-plus/icons-vue'\nimport { searchQuestions } from '@/api/question'\n\nconst router = useRouter()\n\n// 在setup()中添加以下响应式变量\nconst searchQuery = ref('')\nconst searchType = ref('name') // 默认按名称搜索\nconst isSearching = ref(false)\n\n// 数据状态\nconst loading = ref(false)\nconst problems = ref([])\nconst currentPage = ref(1)\nconst pageSize = 20\nconst totalCount = ref(0)\nconst tagDisplayMode = ref('algorithm')\nconst filterDialogVisible = ref(false)\n\n// 筛选相关状态（仅用于UI展示）\nconst selectedPlatform = ref('')\nconst selectedDifficulties = ref([])\nconst selectedTags = ref([])\n\n// 临时筛选状态（弹窗中使用）\nconst filterPlatform = ref('leetcode')\nconst tempDifficulties = ref([])\nconst tempTags = ref([])\nconst filterMode = ref('intersection') // 默认交集\n// 洛谷标签\nconst luoguTags = ref({\n  Algorithm: [],\n  Source: [],\n  Time: [],\n  Region: [],\n  Other: []\n})\n\n// 计算属性\nconst hasLuoguProblems = computed(() => {\n  return problems.value.some(p => p.oj_platform === 'luogu')\n})\n\nconst hasSelectedFilters = computed(() => {\n  return selectedPlatform.value || selectedDifficulties.value.length > 0 || selectedTags.value.length > 0\n})\n\n// 加载洛谷标签\nconst loadLuoguTags = async () => {\n  try {\n    const res = await getAllTags()\n    if (res.data.code === 200) {\n      luoguTags.value = res.data.data\n    }\n  } catch (error) {\n    console.error('加载洛谷标签失败:', error)\n  }\n}\n\n// 显示筛选弹窗\nconst showFilterDialog = () => {\n  // 初始化弹窗中的筛选条件\n  filterPlatform.value = selectedPlatform.value || 'leetcode'\n  tempDifficulties.value = [...selectedDifficulties.value]\n  tempTags.value = [...selectedTags.value]\n  filterDialogVisible.value = true\n}\n\n// 修改applyFilters函数，添加重新加载数据的逻辑\nconst applyFilters = () => {\n  selectedPlatform.value = filterPlatform.value\n  selectedDifficulties.value = [...tempDifficulties.value]\n  selectedTags.value = [...tempTags.value]\n  filterDialogVisible.value = false\n  \n  // 重置分页并重新加载数据\n  currentPage.value = 1\n  fetchProblems()\n}\n\n// 修改removeFilter函数，添加重新加载数据的逻辑\nconst removeFilter = (type, value = null) => {\n  switch(type) {\n    case 'platform':\n      selectedPlatform.value = ''\n      break\n    case 'difficulty':\n      selectedDifficulties.value = selectedDifficulties.value.filter(d => d !== value)\n      break\n    case 'tag':\n      selectedTags.value = selectedTags.value.filter(t => t !== value)\n      break\n  }\n  \n  // 重置分页并重新加载数据\n  currentPage.value = 1\n  fetchProblems()\n}\n\n// 平台映射\nconst PLATFORM_MAP = {\n  luogu: '洛谷',\n  leetcode: 'LeetCode'\n}\n\n// 获取平台名称\nconst getPlatformName = (platform) => {\n  return PLATFORM_MAP[platform] || platform\n}\n\n// 平台标签样式\nconst getPlatformTagType = (platform) => {\n  return {\n    luogu: 'success',\n    leetcode: 'warning'\n  }[platform] || 'info'\n}\n\n// 难度标签样式\nconst getDifficultyTagType = (row) => {\n  if (row.oj_platform === 'luogu') {\n    const levelMap = {\n      '入门': 'info',\n      '普及-': 'success',\n      '普及/提高-': 'success',\n      '普及+/提高': 'warning',\n      '提高+/省选-': 'danger',\n      '省选/NOI-': 'danger',\n      'NOI/NOI+': 'danger',\n      'CTSC': 'danger'\n    }\n    return levelMap[row.difficulty] || 'info'\n  }\n  return {\n    '简单': 'success',\n    '中等': 'warning',\n    '困难': 'danger'\n  }[row.difficulty] || 'info'\n}\n\n// 生成OJ题目链接\nconst generateOjLink = (row) => {\n  const baseUrls = {\n    luogu: `https://www.luogu.com.cn/problem/${row.ext_question_id}`,\n    leetcode: `https://leetcode.cn/problems/${row.ext_question_id}/`\n  }\n  return baseUrls[row.oj_platform] || '#'\n}\n\n// 标签分类过滤\nconst getFilteredTags = (tags, platform) => {\n  if (!tags) return []\n  \n  // LeetCode题目只显示算法标签\n  if (platform === 'leetcode') {\n    return tags.filter(tag => LeetcodeTags.includes(tag))\n  }\n  \n  // 洛谷题目根据当前模式过滤\n  return tags.filter(tag => {\n    if (tagDisplayMode.value === 'all') return true\n    \n    const prefix = tag.split('_')[0]\n    switch(tagDisplayMode.value) {\n      case 'algorithm': return prefix === 'Algorithm'\n      case 'source': return prefix === 'Source'\n      case 'time': return prefix === 'Time'\n      case 'region': return prefix === 'Region'\n      case 'other': return !['Algorithm', 'Source', 'Time', 'Region'].includes(prefix)\n      default: return true\n    }\n  })\n}\n\n// 获取标签名称（去掉前缀）\nconst getTagName = (tag) => {\n  // LeetCode标签已经是纯名称\n  if (LeetcodeTags.includes(tag)) return tag\n  \n  // 洛谷标签去掉前缀\n  return tag.split('_').slice(1).join('_') || tag\n}\n\n// 标签样式分类\nconst getTagType = (tag, platform) => {\n  // LeetCode标签统一为蓝色\n  if (platform === 'leetcode') return 'primary'\n  \n  // 洛谷标签根据前缀分类\n  const prefix = tag.split('_')[0]\n  return {\n    'Algorithm': 'primary',  // 算法 - 蓝色\n    'Source': 'success',     // 来源 - 绿色\n    'Time': 'warning',       // 时间 - 黄色\n    'Region': 'danger',      // 地区 - 红色\n    'Other': 'info'          // 其他 - 灰色\n  }[prefix] || 'info'\n}\n\nconst fetchProblems = async () => {\n  try {\n    loading.value = true\n    \n    // 如果有搜索条件，优先使用搜索\n    if (searchQuery.value.trim()) {\n      const params = {\n        page: currentPage.value,\n        page_size: pageSize,\n        [searchType.value]: searchQuery.value.trim()\n      }\n      const res = await searchQuestions(params)\n      problems.value = res.data.results\n      totalCount.value = res.data.count\n      return\n    }\n    \n    // 否则使用筛选条件\n    const params = {\n      page: currentPage.value,\n      page_size: pageSize,\n      filter_mode: filterMode.value\n    }\n    \n    if (selectedPlatform.value) {\n      params.platforms = selectedPlatform.value\n    }\n    if (selectedDifficulties.value.length > 0) {\n      params.difficulties = selectedDifficulties.value.join(',')\n    }\n    if (selectedTags.value.length > 0) {\n      params.algorithm_tags = selectedTags.value.join(',')\n    }\n    \n    const res = await getQuestionList(params)\n    problems.value = res.data.results\n    totalCount.value = res.data.count\n    \n  } catch (error) {\n    console.error('加载题目失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 初始化加载\nonMounted(() => {\n  fetchProblems()\n  loadLuoguTags()\n})\n\n// 跳转到题目详情\nconst handleRowClick = (row) => {\n  router.push(`/${row.id}/problems`)\n}\n\n\n// 添加搜索方法\nconst handleSearch = async () => {\n  if (!searchQuery.value.trim()) {\n    return\n  }\n  \n  try {\n    isSearching.value = true\n    loading.value = true\n    \n    // 构建搜索参数\n    const params = {\n      page: currentPage.value,\n      page_size: pageSize,\n      [searchType.value]: searchQuery.value.trim()\n    }\n    \n    // 调用搜索接口\n    const res = await searchQuestions(params)\n    problems.value = res.data.results\n    totalCount.value = res.data.count\n    \n    // 清空筛选条件\n    selectedPlatform.value = ''\n    selectedDifficulties.value = []\n    selectedTags.value = []\n    \n  } catch (error) {\n    console.error('搜索失败:', error)\n    problems.value = []\n    totalCount.value = 0\n  } finally {\n    loading.value = false\n    isSearching.value = false\n  }\n}\n\n// 清空搜索\nconst handleSearchClear = () => {\n  if (searchQuery.value === '') {\n    // 如果已经清空，则恢复原始列表\n    fetchProblems()\n  }\n}\n\n\n</script>\n\n<style scoped>\n.main-container {\n  padding-top: 60px;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n}\n\n.filter-card {\n  width: 90%;\n  max-width: 1200px;\n  margin: 0 auto 30px;\n  padding: 25px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n\n.content-wrapper {\n  width: 90%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 25px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n}\n\n.search-container {\n  margin-bottom: 20px;\n}\n\n.search-input {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.filter-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.selected-filters {\n  padding: 12px 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.filter-label {\n  font-size: 14px;\n  color: #606266;\n  margin-right: 12px;\n}\n\n.filter-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.tag-mode-switch {\n  margin: 0 0 20px auto;\n  padding: 8px 12px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 6px;\n}\n\n.table-container {\n  margin: 20px 0;\n}\n\n.pagination-wrapper {\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.problem-title {\n  font-weight: 500;\n  color: var(--el-color-primary);\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.problem-title:hover {\n  color: #409EFF;\n  text-decoration: underline;\n}\n\n.external-id {\n  color: #606266;\n  transition: all 0.3s;\n}\n\n.external-id:hover {\n  color: var(--el-color-primary);\n}\n\n.tag-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n}\n\n.tag-item {\n  transition: all 0.3s;\n}\n\n.tag-item:hover {\n  transform: translateY(-2px);\n}\n\n/* 弹窗样式优化 */\n:deep(.el-dialog) {\n  border-radius: 12px;\n  background: rgba(255, 255, 255, 0.95);\n}\n\n:deep(.el-dialog__header) {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.platform-selector {\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.filter-section {\n  padding: 0 10px;\n}\n\n.tag-group {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n}\n\n/* 表格优化 */\n:deep(.el-table) {\n  --el-table-border-color: rgba(0, 0, 0, 0.05);\n  --el-table-header-bg-color: rgba(0, 0, 0, 0.02);\n}\n\n:deep(.el-table__row) {\n  transition: all 0.3s;\n}\n\n:deep(.el-table__row:hover) {\n  background-color: #f8fafc !important;\n  transform: translateY(-1px);\n}\n\n:deep(.el-table th.el-table__cell) {\n  font-weight: 600;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .filter-card,\n  .content-wrapper {\n    width: 95%;\n    padding: 20px 15px;\n  }\n\n  .filter-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n\n  .search-container :deep(.el-input-group__prepend) {\n    width: 100px;\n  }\n\n  .tag-mode-switch {\n    margin: 0 auto 20px;\n    width: 100%;\n  }\n\n  :deep(.el-table) {\n    font-size: 14px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}