# Generated by Django 5.2 on 2025-04-28 14:53

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="True表示已逻辑删除", verbose_name="删除标记"
                    ),
                ),
                (
                    "solution_count",
                    models.PositiveIntegerField(
                        default=0, help_text="动态统计关联题解数量", verbose_name="题解数量"
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        editable=False,
                        help_text="格式如E1, E2等",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        verbose_name="题目ID",
                    ),
                ),
                (
                    "ext_question_id",
                    models.CharField(
                        blank=True,
                        help_text="外部平台的题目ID",
                        max_length=50,
                        null=True,
                        verbose_name="外站题目ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="题目名称"
                    ),
                ),
                ("url", models.URLField(max_length=500, verbose_name="题目链接")),
                (
                    "oj_platform",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="所属OJ平台"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="例如比赛名称等",
                        max_length=255,
                        null=True,
                        verbose_name="题目来源",
                    ),
                ),
                (
                    "algorithm_tags",
                    models.CharField(
                        blank=True,
                        help_text='逗号分隔的算法标签ID，如"1,3,5"',
                        max_length=255,
                        null=True,
                        verbose_name="算法标签",
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="题目难度"
                    ),
                ),
                (
                    "description",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="question_descriptions/",
                        verbose_name="题目描述路径",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "题目",
                "verbose_name_plural": "题目列表",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
            },
        ),
        migrations.CreateModel(
            name="Solution",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "content",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="question_solutions/",
                        verbose_name="题解文件",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("cpp", "C++"),
                            ("java", "Java"),
                            ("python", "Python"),
                            ("javascript", "JavaScript"),
                            ("go", "Go"),
                            ("other", "其他"),
                        ],
                        default="other",
                        max_length=20,
                        verbose_name="编程语言",
                    ),
                ),
                ("is_draft", models.BooleanField(default=True, verbose_name="是否为草稿")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solutions",
                        to="algorithm.question",
                        verbose_name="关联题目",
                    ),
                ),
            ],
            options={
                "verbose_name": "题解",
                "verbose_name_plural": "题解",
                "db_table": "solution",
                "ordering": ["-updated_at"],
            },
        ),
    ]
